{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/models/website-slideshow.ts","./src/app/banner/banner.component.html","./src/app/banner/banner.component.ts","./src/app/compras/models/filter.ts","./src/app/models/register-payment.ts","./src/app/services/compras.service.ts","./src/app/services/conta.service.ts","./src/app/services/register-payment.service.ts","./src/app/compras/compras.component.html","./src/app/compras/compras.component.ts","./src/app/constants/urls.ts","./src/app/models/ganhadores-cadastro.ts","./src/app/ganhadores/ganhadores.component.html","./src/app/ganhadores/ganhadores.component.ts","./src/app/guards/auth-guard.service.ts","./src/app/guards/http-error-interceptor.ts","./src/app/guards/jwt-interceptor.ts","./src/app/models/clientes.ts","./src/app/models/login.ts","./src/app/models/usuario.ts","./src/app/services/clientes.service.ts","./src/app/services/conta-bancaria.service.ts","./src/app/services/ganhadores.service.ts","./src/app/models/cliente-jwt.ts","./src/app/services/login.service.ts","./src/app/services/modelo-mensagem.service.ts","./src/app/services/slideshow.service.ts","./src/app/services/sorteio.service.ts","./src/app/services/toast.service.ts","./src/app/services/transacao.service.ts","./src/app/services/upload.service.ts","./src/environments/environment.prod.ts","./src/app/components/sidebar/sidebar.component.html","./src/app/components/sidebar/sidebar.component.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/layouts/admin-layout/admin-layout.component.html","./src/app/layouts/admin-layout/admin-layout.component.ts","./src/app/login-admin/login-admin.component.ts","./src/app/login-admin/login-admin.component.html","./src/app/site-premiando/login/models/login.ts","./src/app/site-premiando/login/login-regyster/login-regyster.component.html","./src/app/site-premiando/login/login-regyster/login-regyster.component.ts","./src/app/site-premiando/index/index.component.html","./src/app/site-premiando/index/index.component.ts","./src/app/site-premiando/principal/view-ganhadores/view-ganhadores.component.ts","./src/app/site-premiando/principal/view-ganhadores/view-ganhadores.component.html","./src/app/site-premiando/principal/view-video/view-video.component.ts","./src/app/site-premiando/principal/view-video/view-video.component.html","./src/app/site-premiando/principal/principal.component.html","./src/app/site-premiando/principal/principal.component.ts","./src/app/site-premiando/ganhadores/ganhadores.component.html","./src/app/site-premiando/ganhadores/ganhadores.component.ts","./src/app/site-premiando/sorteios/sorteios.component.html","./src/app/site-premiando/sorteios/sorteios.component.ts","./src/app/site-premiando/sorteios/services/sorteio-ativo.service.ts","./src/app/site-premiando/sorteios/sorteio-ativo/confirmar-reserva/confirmar-reserva.component.html","./src/app/site-premiando/sorteios/sorteio-ativo/confirmar-reserva/confirmar-reserva.component.ts","./src/app/site-premiando/minhas-compras/view-minhas-compras/services/minhas-compras.service.ts","./src/app/site-premiando/sorteios/sorteio-ativo/meus-numeros/meus-numeros.component.html","./src/app/site-premiando/sorteios/sorteio-ativo/meus-numeros/meus-numeros.component.ts","./src/app/services/metadata.service.ts","./src/app/pipes/safe-html-utils.ts","./src/app/site-premiando/sorteios/sorteio-ativo/sorteio-ativo.component.html","./src/app/site-premiando/sorteios/sorteio-ativo/sorteio-ativo.component.ts","./src/app/site-premiando/minhas-compras/view-minhas-compras/view-minhas-compras.component.html","./src/app/site-premiando/minhas-compras/view-minhas-compras/view-minhas-compras.component.ts","./src/app/site-premiando/termos/termos.component.ts","./src/app/site-premiando/termos/termos.component.html","./src/app/site-premiando/minhas-compras/view-minhas-compras/models/minhas-compras.ts","./src/app/site-premiando/checkout/models/payer.ts","./src/app/site-premiando/checkout/models/payer-indentification.ts","./src/app/site-premiando/checkout/models/regyster-pix-payment.ts","./src/app/site-premiando/checkout/services/pix.service.ts","./src/app/site-premiando/checkout/checkout.component.html","./src/app/site-premiando/checkout/checkout.component.ts","./src/app/app.routing.ts","./src/app/components/components.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/compras/compras.module.ts","./src/app/ganhadores/ganhadores.module.ts","./src/app/banner/banner.module.ts","./src/app/app.module.ts","./src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","sorteioService","alertService","slideShowService","uploadService","fileName","ngOnInit","this","webSiteSlideShow","WebSiteSlideShow","getSlides","loadSorteios","findSlideShowById","subscribe","slide","slideSHow$","list","sorteios","sorteioList","filter","sorteio","rifinha","setSorteio","idSorteio","nomeSorteio","titulo","fileChange","event","fileList","target","files","length","name","arquivo","salvar","imagem","updateSlideShow","toPromise","upload","showSucess","catch","error","showError","alterarVisualizacaoBanner","ativo","getIconVisibility","BannerComponent","status","statusDescricao","formaPagamento","dataPedidoInicio","dataPedidoFim","cota","baseUrl","environment","http","createCompras","compras","url","post","cancelarCompra","reservarCompra","updateCompras","put","getCartDetail","get","listStatus","ComprasService","ContaService","createRegisterPayment","registerPayment","idCompra","updateRegisterPayment","cancelarRegisterPayment","delete","RegisterPaymentService","comprasService","router","contaService","modeloMensagemService","currencyPipe","transacaoService","registerPaymentService","compraServie","datePipe","value","paginaAtual","key","reverse","base64String","ComprasFilter","statusList","s","conta","contaList","loadCompras","modelosMensagem","listModeloMensagem","msg","pageIndex","localStorage","getItem","registroPagamento","RegisterPayment","atualizarListaEFiltrar","lista","searchFilters","comprador","dataInicio","dataFim","listaCompras","filteredList","undefined","compra","toLowerCase","replace","lastIndexOf","nomeBanco","start","Date","end","setDate","getDate","valueOf","toString","getTime","dataCompra","getListCotasSliceRifinha","cotas","includes","getListCotasSlice","listCompras","setFilterStatus","descricao","setFilterFormaPagamento","setFilterSorteio","updatePage","setItem","sort","openChatWhatsApp","mensagem","getMensagem","window","open","celular","openChatWhatsAppNoMsg","getIconPayment","getClassIconRegysterPayment","getIconRegysterPayment","getClassIconExcludeOrReserver","getIconExcludeOrReserver","getLineColorTable","getLineColor","getOpcaoAprovarByStatus","description","toUpperCase","getCotasSliceRifinha","getCotasSlice","transform","total","split","listaModificada","forEach","push","slice","loadCartDetail","cartDetail","cartDatail","resumoCompra","cotasCard","getClassLabelStatus","clearFilterSearchName","clearFilterSearchStatus","clearFilterSearchSorteio","clearFilterSearchFormaPagamento","clearFilterSearchData","clearFilterSearchCota","openDialogComprovante","transacao","getArquivo","result","comprovante","cancelarTransacao","aprovarTrasacao","reservarOrDelete","confirm","setRegistroPagamentoFormaPagamento","nomeConta","idConta","limparContaRegistroPagamento","onFileSelected","file","openDialogRegisterPayment","valorPago","dataTransacao","document","getElementById","click","salvarRegistroPagamento","console","log","err","ComprasComponent","urlZap","ganhadorService","ganhador","GanhadoresCadastro","loadGanhadores","ganhadores","listGanhadores","loadEditGanhador","findGanhadoreById","saveOrUpdate","atualizar","createGanhadores","updateGanhadores","deletar","deleteGanhadores","GanhadoresComponent","authentcationService","canActivate","route","state","currentUserValue","isLogged","currentUserAdminValue","AuthGuardService","authenticationService","intercept","request","next","handled","handle","pipe","returnedError","errorMessage","cpf","ErrorEvent","message","handleServerSideError","of","showInfo","keepAfterRouteChange","logout","showWarning","erros","HttpErrorInterceptor","validaUrlAdmin","currentUser","currentUserAdmin","token","setHeader","style","setProperty","navigate","clone","setHeaders","Authorization","JwtInterceptor","getCLientByFormGroup","form","nome","controls","telefone","whatsapp","endereco","usuario","foto","getCLientPagePrincipalByFormGroup","getFormGroupByCLiente","setValue","fetchClientesByUserId","userId","fetchClientesById","createClientes","cliente","updateClientes","exportContact","dataCadastro","headers","set","responseType","ClientesService","createContaBancaria","contaBancaria","updateContaBancaria","deleteContaBancaria","listTipoConta","findById","listTipoContaBancaria","listBancos","listBancosNacional","ContaBancariaService","defaultGanhadores","GanhadoresService","baseUrlLoginExists","currentUserSubject","BehaviorSubject","JSON","parse","asObservable","currentUserAdminSubject","isLoginExists","login","validarSessao","authenticate","subject","Subject","isAuthenticated","observe","response","userLogin","getUserLogin","stringify","authenticateAdmin","perfis","UserLogin","ClienteJwt","body","email","logarComo","removeItem","logoutAdmin","AuthenticationService","createModeloMensagem","modeloMensagem","updateModeloMensagem","deleteModeloMensagem","idDodeloMensagem","ModeloMensagemService","slideshow","append","formData","FormData","SlideShowService","cache$","timer$","_","create","update","definirGanhador","numeroCota","downloadPDF","getById","loadImagem","listSorteioStatus","SorteioService","toastr","title","success","info","warning","showNotification","color","$","notify","icon","type","timer","placement","from","align","template","NotificationService","getRelatorioFinanceiro","TransacaoService","servico","UploadService","production","baseUrlPix","baseUrlLogin","baseUserServiceUrl","baseGeoServiceUrl","baseCustomerServiceUrl","baseCrmServiceUrl","gmailRedirectUrl","baseEmailServiceUrl","baseProductServiceUrl","class","ROUTES","path","subMenu","isCollapsed","menuItems","menuItem","isMobileMenu","width","updateCollapsed","menu","SidebarComponent","location","element","mobile_menu_visible","sidebarVisible","listTitles","listTitle","toggleButton","nativeElement","getElementsByClassName","events","sidebarClose","$layer","remove","sidebarOpen","getElementsByTagName","setTimeout","classList","add","sidebarToggle","$toggle","createElement","setAttribute","querySelectorAll","appendChild","contains","onclick","bind","getTitle","titlee","prepareExternalUrl","charAt","item","NavbarComponent","test","FooterComponent","yScrollStack","navigator","platform","indexOf","elemMainPanel","querySelector","elemSidebar","ev","lastPoppedUrl","scrollY","scrollTo","pop","_router","scrollTop","matchMedia","matches","isMac","window_width","$sidebar","$sidebar_responsive","$sidebar_img_container","find","hasClass","addClass","stopPropagation","cancelBubble","siblings","removeClass","new_color","data","attr","$full_page_background","parent","new_image","fadeOut","css","fadeIn","ngAfterViewInit","runOnRouteChange","isMaps","bool","AdminLayoutComponent","loginCliente","LoginAdminComponent","dialogRef","clientesService","isTelaCheckout","Login","senha","close","isUserExists","isPermiteCadastrar","isExistentLogin","isSaveNewUser","LoginRegysterComponent","dialog","menuMobileOpened","openLoginDialog","afterClosed","openLoginDialogMobile","openMenuMobile","navigateTo","rota","isUserLogged","loggout","loggoutMobile","IndexComponent","sanitizer","imageUrl","ViewGanhadoresComponent","checkIsIphone","userAgent","match","dataIphone","String","bypassSecurityTrustResourceUrl","ViewVideoComponent","titleService","urlToJson","setTitle","slideSHowActive$","splice","concat","listSorteios","ocultar","openDialog","video","openDialogGanhadores","numero","cidade","openSorteioAtivo","replaceAll","scrollToTop","setInterval","pos","pageYOffset","clearInterval","PrincipalComponent","SorteiosComponent","listCotasSorteio","statusCota","currentIdSorteioAtivo","getSorteioById","reservarCota","idCliente","idCotas","CotasSorteioService","sorteioAtivoService","lastClick","cotasHaComprar","isBloquearClick","confirmarReserva","currentTime","onNoClick","ConfirmarReservaComponent","loginService","switchMap","listMinhasCompras","shareReplay","listMeusNumeros","idSOrteio","listMinhaCompra","MinhasComprasService","minhasComprasService","getStatusColor","MeusNumerosComponent","defaultMetadata","author","image","keywords","metaTagService","updateMetadata","metadata","index","pageMetadata","metatags","generateMetaDefinitions","addTags","property","content","protocol","hostname","join","MetadataService","bypassSecurityTrustHtml","SafeHtmlPipe","metadataService","cotasLivres","cotasReservadas","cotasPagas","cotasFiltered","contaHaPagar","loading","snapshot","paramMap","texto","atob","loadCotasLivres","loadCotasReservadas","loadCotasPagas","cotasResult","map","cotaClass","openLoginDialogLogin","openMeusNumerosDialog","idCota","height","panelClass","cp","st","changeColor","tipo","filterCotaByStatus","selectCota","cotahACompras","selected","unSelectCota","display","opacity","atualizarTextoValorHaPagar","closeSelectedCota","valor","showToolTip","pagador","SorteioAtivoComponent","_sanitizer","minhasCompras","detalhar","ViewMinhasComprasComponent","TermosComponent","regysterPayment","payment","PixService","routes","redirectTo","pathMatch","component","children","contaBancariaService","authenticatioService","pixService","minhaCompra","MinhasCompras","loadContaBancaria","gerarQrCode","RegysterPixPayment","transactionAmount","payer","Payer","firstName","lastName","identification","PayerIdentification","payerIndentification","number","qrCode","qrCodeBase64","copyTextHash","inputElement","select","execCommand","setSelectionRange","contaBancariaList","CheckoutComponent","loadChildren","m","AdminLayoutModule","AppRoutingModule","useHash","ComponentsModule","AppComponent","ComprasModule","GanhadoresModule","BannerModule","AppModule","provide","useClass","useValue","multi","apiKey","bootstrapModule"],"mappings":"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AIC,W,sCA1cdC,GAAgB,iI,wBAAhBA,EAAgB,4CAFhB,CAAC,KAAc,QAAS,gmP,cD3BrC,iBACE,iBACE,iBACE,iBACE,iBACE,iBACE,gBACE,eACE,iBACE,iBACE,kBACE,qBACkC,sCAAe,EAAAlG,0BAAf,CAAwC,qDAD1E,QAGA,mBACE,4BAIF,QACF,QACF,QACA,kBACE,kBACE,qBACkC,2DADlC,QAEA,mBACE,4BAIF,QACF,QACF,QACA,mBACE,kBACE,mBACE,sBAEE,UACF,QACA,mBACE,4BAIF,QACA,mBACE,uBAIF,QACF,QACF,QACF,QACA,mBACE,kBACE,mBACE,sBAEE,UACF,QACA,mBACE,4BAIF,QACA,mBACE,uBAIF,QACF,QACF,QACF,QACA,mBACE,kBACE,mBACE,sBAEE,UACF,QACA,mBACE,4BAIF,QACA,mBACE,uBAIF,QACF,QACF,QACF,QACA,mBACE,kBACE,sBAAwC,gCAAS,EAAAA,2BAE/C,iBAA0B,mBAAM,QAClC,QACF,QACF,QACF,QACA,kBACE,kBACE,kBACE,qBACkC,sCAAe,EAAAA,0BAAf,CAAwC,iEAD1E,QAGA,mBACE,4BAIF,QACF,QACF,QAEA,kBACE,kBACE,qBACkC,sCAAe,EAAAA,0BAAf,CAAwC,8DAD1E,QAGA,mBACE,4BAIF,QACF,QACF,QAEA,mBACE,kBACE,sBAAwC,gCAAS,EAAAA,2BAE/C,iBAA0B,mBAAM,QAClC,QACF,QACF,QACF,QACF,QACF,QACA,iBACF,QACA,mBACE,mBACE,qBACE,qBACE,eAAI,eAAE,QACN,kBAAI,gCAAS,EAAAkC,KAAK,gBAAwC,kBAAS,0BAA+D,QAClI,kBAAI,gCAAS,EAAAA,KAAK,eAAwC,sBAAS,0BAA8D,QACjI,kBAAI,gCAAS,EAAAA,KAAK,eAAwC,qBAAS,0BAA8D,QACjI,eAAI,iBAAI,QACR,eACA,eACA,eAAI,gBAAG,QACP,eAAI,kBAAK,QACT,eACA,eACA,eACF,QAEA,kBACE,0B,yCAiDF,QACF,QACA,mCAAqB,wDAA0G,QACjI,QACF,QACF,QACF,QACF,QACF,QACF,QAG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","file":"main.81c575b896c8dc636d47.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","\r\nexport class WebSiteSlideShow {\r\n    id: number;\r\n    idSorteio: number;\r\n    nomeSorteio: string;\r\n    imagem: string;\r\n    ativo: boolean;\r\n}","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card card-plain\">\r\n                    <div class=\"card-header card-header-danger card-header-black\">\r\n                        <div class=\"align-self-end\" style=\"display: grid;grid-template-columns: 1fr 1fr 1fr;\">\r\n                            <div class=\"input-group col-md-12\">\r\n                                <div class=\"input-group-prepend\">\r\n                                    <button\r\n                                        class=\"btn btn-outline-secondary dropdown-toggle text-white bt-close-filter bt-size-filter dropleft\"\r\n                                        type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                        {{webSiteSlideShow.nomeSorteio ? webSiteSlideShow.nomeSorteio : 'Sorteio para redirecionar'}}\r\n                                    </button>\r\n                                    <div class=\"input-group-append\">\r\n                                        <button class=\"btn btn-outline-secondary bt-close-filter text-white\" type=\"button\"\r\n                                            style=\"height: 36px;\">\r\n                                            <i class=\"material-icons\">close</i>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div class=\"dropdown-menu\">\r\n                                        <a class=\"dropdown-item\" style=\"color: black;\"\r\n                                            *ngFor=\"let sorteio of sorteioList\" (click)=\"setSorteio(sorteio)\">\r\n                                            {{ sorteio.titulo }}\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"input-group col-md-12\">\r\n                                <input type=\"file\" style=\"display: none;\" class=\"file-upload\"\r\n                                    (change)=\"fileChange($event)\" #fileUpload>\r\n\r\n                                <div class=\"file-upload\">\r\n\r\n                                    {{fileName.substring(0,15) || \"Selecionar imagem\"}}\r\n\r\n                                    <button mat-mini-fab class=\"btn btn-primary\" (click)=\"fileUpload.click()\"\r\n                                        style=\"margin-left: 5px;\">\r\n                                        <i class=\"material-icons\">attach_file</i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <button style=\"height: 36px;\" type=\"button\" class=\"btn btn-primary\"\r\n                                (click)=\"salvar()\">Salvar</button>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <div class=\"table-responsive\">\r\n                            <table class=\"table table-hover\">\r\n                                <thead class=\"\">\r\n                                    <th><i class=\"material-icons\">image</i></th>\r\n                                    <th>\r\n                                        Sorteio para redirecionar \r\n                                    </th>\r\n                                    <th></th>\r\n                                    <th></th>\r\n                                    <th></th>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor=\"let slide of slideSHow$\">\r\n                                        <td><img src=\"/uploads/{{slide.imagem}}\" style=\"width: 100px;height: 100px;\"></td>\r\n                                        <td>{{slide.idSorteio}}</td>\r\n                                        <td><i [class]=\"getIconVisibility(slide.ativo)\" style=\"cursor: pointer;\" (click)=\"alterarVisualizacaoBanner(slide)\">\r\n                                            {{slide.ativo ? 'visibility' : 'visibility_off'}}\r\n                                            </i>\r\n                                        </td>\r\n                                        <td><i class=\"material-icons text-info\">edit</i></td>\r\n                                        <td><i class=\"material-icons text-danger\">delete_outline</i></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Sorteio } from 'app/models/sorteio';\r\nimport { WebSiteSlideShow } from 'app/models/website-slideshow';\r\nimport { SlideShowService } from 'app/services/slideshow.service';\r\nimport { SorteioService } from 'app/services/sorteio.service';\r\nimport { NotificationService } from 'app/services/toast.service';\r\nimport { UploadService } from 'app/services/upload.service';\r\n\r\n@Component({\r\n  selector: 'banner',\r\n  templateUrl: './banner.component.html',\r\n  styleUrls: ['./banner.component.css']\r\n})\r\nexport class BannerComponent implements OnInit {\r\n\r\n  fileName = '';\r\n  arquivo: string;\r\n  sorteioList: Sorteio[];\r\n  webSiteSlideShow: WebSiteSlideShow;\r\n  slideSHow$: WebSiteSlideShow[];\r\n\r\n  constructor( private sorteioService: SorteioService, private alertService: NotificationService,\r\n    private slideShowService: SlideShowService, private uploadService: UploadService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.webSiteSlideShow = new WebSiteSlideShow();\r\n    this.getSlides();\r\n    this.loadSorteios();\r\n  }\r\n\r\n  getSlides(){\r\n    return this.slideShowService.findSlideShowById().subscribe(\r\n       slide => {\r\n         this.slideSHow$ = slide;\r\n       }\r\n     )\r\n   }\r\n\r\n  loadSorteios(){\r\n    this.sorteioService.list().subscribe(\r\n      sorteios => {\r\n        this.sorteioList = sorteios['content']\r\n        this.sorteioList = this.sorteioList.filter(sorteio => !sorteio.rifinha)\r\n      }\r\n    );\r\n  }\r\n\r\n  setSorteio(sorteio: Sorteio){\r\n    this.webSiteSlideShow.idSorteio = sorteio.id\r\n    this.webSiteSlideShow.nomeSorteio = sorteio.titulo\r\n  }\r\n\r\n  async fileChange(event) {\r\n    let fileList: FileList = event.target.files;\r\n    if (fileList.length > 0) {\r\n      let file: File = fileList[0];\r\n      this.fileName = file.name;\r\n      this.arquivo = event.target.files[0];\r\n    }\r\n  }\r\n\r\n  salvar(){\r\n    this.webSiteSlideShow.imagem = this.fileName;\r\n    this.slideShowService.updateSlideShow(this.webSiteSlideShow, 1).toPromise()\r\n    .then(() => {\r\n      this.uploadService.upload(this.arquivo, this.fileName, 'sorteios').toPromise()\r\n      .then(() => {\r\n        this.alertService.showSucess('Slideshow atualizado com sucesso!', 'Sucesso')\r\n        this.getSlides();\r\n      })\r\n    })\r\n    .catch(error => {\r\n      this.alertService.showError('Erro ao atualizar o SlideShow!', 'Error')\r\n    })\r\n  }\r\n\r\n  alterarVisualizacaoBanner(slide: WebSiteSlideShow){\r\n    slide.ativo = !slide.ativo\r\n    this.slideShowService.updateSlideShow(slide, 1).toPromise()\r\n    .then(() => {\r\n        this.getSlides();\r\n      }\r\n    )\r\n  }\r\n\r\n  getIconVisibility(ativo: boolean){\r\n    if(ativo){\r\n      return 'material-icons text-success';\r\n    }\r\n    return 'material-icons'\r\n  }\r\n\r\n}\r\n","\r\nexport class ComprasFilter {\r\n    name: string = null;\r\n    status: number = null;\r\n    statusDescricao: string = null;\r\n    nomeSorteio: string = null;\r\n    formaPagamento: string = null;\r\n    dataPedidoInicio: string = null;\r\n    dataPedidoFim: string = null;\r\n    cota: string = null;\r\n}","export class RegisterPayment {\r\n  valorPago: string;\r\n  dataTransacao: string;\r\n  idConta: number;\r\n  nomeConta: string;\r\n  comprovante: string;\r\n  idCompra: number;\r\n  }\r\n  ","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Compras } from '../models/compras';\r\nimport { StatusCompra } from '../models/status-compra';\r\nimport { environment } from 'environments/environment';\r\nimport { CartDetail } from '../models/cart-detail';\r\n\r\n\r\nconst baseUrl: string = environment.baseUrl;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ComprasService {\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createCompras(compras: Compras): Observable<Compras> {\r\n    let url = `${baseUrl}/compras`;\r\n    compras.id = 0;\r\n    return this.http.post<Compras>(url, compras);\r\n  }\r\n\r\n  cancelarCompra(id: number): Observable<Compras> {\r\n    let url = `${baseUrl}/compras/${id}`;\r\n    return this.http.post<Compras>(url, {});\r\n  }\r\n\r\n  reservarCompra(id: number): Observable<Compras> {\r\n    let url = `${baseUrl}/compras/${id}/cotas`;\r\n    return this.http.post<Compras>(url, {});\r\n  }\r\n\r\n  updateCompras(compras: Compras): Observable<Compras> {\r\n    let url = `${baseUrl}/compras/${compras.id}`;\r\n    return this.http.put<Compras>(url, compras);\r\n  }\r\n\r\n  getCartDetail(id: number): Observable<CartDetail> {\r\n    let url = `${baseUrl}/compras/${id}`;\r\n    return this.http.get<CartDetail>(url);\r\n  }\r\n\r\n  list(): Observable<Compras[]> {\r\n    let url = `${baseUrl}/compras`;\r\n\r\n    return this.http.get<Compras[]>(url)\r\n  }\r\n\r\n  listStatus(): Observable<StatusCompra[]> {\r\n    let url = `${baseUrl}/sorteios/status`;\r\n\r\n    return this.http.get<StatusCompra[]>(url)\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'environments/environment';\r\nimport { Conta } from 'app/models/conta';\r\n\r\n\r\nconst baseUrl: string = environment.baseUrl;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ContaService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  list(): Observable<Conta[]> {\r\n    let url = `${baseUrl}/contas`;\r\n\r\n    return this.http.get<Conta[]>(url)\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'environments/environment';\r\nimport { RegisterPayment } from 'app/models/register-payment';\r\n\r\n\r\nconst baseUrl: string = environment.baseUrl;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RegisterPaymentService {\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createRegisterPayment(registerPayment: RegisterPayment): Observable<RegisterPayment> {\r\n    let url = `${baseUrl}/transacoes/compra/${registerPayment.idCompra}`;\r\n    return this.http.post<RegisterPayment>(url, registerPayment);\r\n  }\r\n\r\n  updateRegisterPayment(id: number): Observable<RegisterPayment> {\r\n    let url = `${baseUrl}/transacoes/${id}`;\r\n    return this.http.post<RegisterPayment>(url, null);\r\n  }\r\n\r\n  cancelarRegisterPayment(id: number): Observable<RegisterPayment> {\r\n    let url = `${baseUrl}/transacoes/${id}`;\r\n    return this.http.delete<RegisterPayment>(url);\r\n  }\r\n\r\n  list(): Observable<RegisterPayment[]> {\r\n    let url = `${baseUrl}/transacoes`;\r\n\r\n    return this.http.get<RegisterPayment[]>(url)\r\n  }\r\n\r\n}\r\n","<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"compra\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header card-header-danger card-header-black\">\r\n            <h4 class=\"card-title mt-0\" style=\"display: flex;\">\r\n              <div>\r\n                <div class=\"mb-3 justify-content-center filtros-compras-mobile\">\r\n                  <div class=\"align-self-end wdt-filter\">\r\n                    <div class=\"input-group col-md-12\">\r\n                      <input type=\"text\" class=\"form-control text-white bt-border-custom\" placeholder=\"Comprador\" aria-label=\"Comprador\"\r\n                        aria-describedby=\"basic-addon2\" (keyup.enter)=\"atualizarListaEFiltrar()\"\r\n                        [(ngModel)]=\"filter.name\">\r\n                      <div class=\"input-group-append\">\r\n                        <button *ngIf=\"value\" class=\"btn btn-outline-secondary bt-close-filter\" type=\"button\"\r\n                          (click)=\"clearFilterSearchName()\">\r\n                          <i class=\"material-icons\">close</i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"align-self-end wdt-filter\">\r\n                    <div class=\"input-group col-md-12\">\r\n                      <input type=\"text\" class=\"form-control text-white bt-border-custom\" placeholder=\"Cota\" aria-label=\"Cota\"\r\n                        aria-describedby=\"basic-addon2\" [(ngModel)]=\"filter.cota\">\r\n                      <div class=\"input-group-append\">\r\n                        <button *ngIf=\"value\" class=\"btn btn-outline-secondary bt-close-filter\" type=\"button\"\r\n                          (click)=\"clearFilterSearchCota()\">\r\n                          <i class=\"material-icons\">close</i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"align-self-end\">\r\n                    <div class=\"input-group col-md-12\">\r\n                      <div class=\"input-group-prepend\">\r\n                        <button class=\"btn btn-outline-secondary dropdown-toggle bt-close-filter text-white bt-size-filter dropleft\"\r\n                          type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                          {{filter.nomeSorteio ? filter.nomeSorteio.substring(0, 21) : 'Sorteio'}}\r\n                        </button>\r\n                        <div class=\"input-group-append\">\r\n                          <button *ngIf=\"value\" class=\"btn btn-outline-secondary bt-close-filter\" type=\"button\"\r\n                            (click)=\"clearFilterSearchSorteio()\">\r\n                            <i class=\"material-icons\">close</i>\r\n                          </button>\r\n                        </div>\r\n                        <div class=\"dropdown-menu\" style=\"overflow: scroll;height: 500px;\">\r\n                          <a class=\"dropdown-item\" style=\"color: black;\" *ngFor=\"let sorteio of sorteioList\"\r\n                            (click)=\"setFilterSorteio(sorteio)\">\r\n                            {{ sorteio.titulo }}\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"align-self-end\">\r\n                    <div class=\"input-group col-md-12\">\r\n                      <div class=\"input-group-prepend\">\r\n                        <button class=\"btn btn-outline-secondary dropdown-toggle bt-close-filter text-white bt-size-filter\"\r\n                          type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                          {{filter.formaPagamento ? filter.formaPagamento.substring(0, 21) : 'Forma de Pgto'}}\r\n                        </button>\r\n                        <div class=\"input-group-append\">\r\n                          <button *ngIf=\"value\" class=\"btn btn-outline-secondary bt-close-filter\" type=\"button\"\r\n                            (click)=\"clearFilterSearchFormaPagamento()\">\r\n                            <i class=\"material-icons\">close</i>\r\n                          </button>\r\n                        </div>\r\n                        <div class=\"dropdown-menu\">\r\n                          <a class=\"dropdown-item\" style=\"color: black;\" *ngFor=\"let conta of contaList\"\r\n                            (click)=\"setFilterFormaPagamento(conta)\">\r\n                            #{{ conta.codigoBanco }} - {{ conta.nomeBanco }} - {{ conta.titular }}\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"align-self-end\">\r\n                    <div class=\"input-group col-md-12\">\r\n                      <div class=\"input-group-prepend\">\r\n                        <button class=\"btn btn-outline-secondary dropdown-toggle bt-close-filter text-white bt-size-filter\"\r\n                          type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                          {{filter.statusDescricao ? filter.statusDescricao : 'Status'}}\r\n                        </button>\r\n                        <div class=\"input-group-append\">\r\n                          <button *ngIf=\"value\" class=\"btn btn-outline-secondary bt-close-filter\" type=\"button\"\r\n                            (click)=\"clearFilterSearchStatus()\">\r\n                            <i class=\"material-icons\">close</i>\r\n                          </button>\r\n                        </div>\r\n                        <div class=\"dropdown-menu\">\r\n                          <a class=\"dropdown-item\" style=\"color: black;\" [ngClass]=\"getLineColor(status.id)\"\r\n                            *ngFor=\"let status of statusList\" (click)=\"setFilterStatus(status)\">\r\n                            {{ status.descricao }}\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"align-self-end search-desktop\">\r\n                    <div class=\"input-group col-md-12\">\r\n                      <button mat-raised-button type=\"submit\" (click)=\"atualizarListaEFiltrar()\"\r\n                        class=\"btn btn-white pull-right\" style=\"padding: 8px 8px !important;margin-top: 17px;margin-bottom: 0px;\">\r\n                        <i class=\"material-icons\">search</i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"mb-3 justify-content-center filtros-compras-mobile\">\r\n                  <div class=\"align-self-end wdt-filter\">\r\n                    <div class=\"input-group col-md-12\">\r\n                      <input type=\"date\" class=\"form-control text-white bt-border-custom\" placeholder=\"Comprador\" aria-label=\"Comprador\"\r\n                        aria-describedby=\"basic-addon2\" (keyup.enter)=\"atualizarListaEFiltrar()\"\r\n                        [(ngModel)]=\"filter.dataPedidoInicio\">\r\n                      <div class=\"input-group-append\">\r\n                        <button *ngIf=\"value\" class=\"btn btn-outline-secondary bt-close-filter\" type=\"button\"\r\n                          (click)=\"clearFilterSearchData()\">\r\n                          <i class=\"material-icons\">close</i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"align-self-end wdt-filter\">\r\n                    <div class=\"input-group col-md-12\">\r\n                      <input type=\"date\" class=\"form-control text-white bt-border-custom\" placeholder=\"Comprador\" aria-label=\"Comprador\"\r\n                        aria-describedby=\"basic-addon2\" (keyup.enter)=\"atualizarListaEFiltrar()\"\r\n                        [(ngModel)]=\"filter.dataPedidoFim\">\r\n                      <div class=\"input-group-append\">\r\n                        <button *ngIf=\"value\" class=\"btn btn-outline-secondary bt-close-filter\" type=\"button\"\r\n                          (click)=\"clearFilterSearchData()\">\r\n                          <i class=\"material-icons\">close</i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"align-self-end search-mobile\">\r\n                    <div class=\"input-group col-md-12\">\r\n                      <button mat-raised-button type=\"submit\" (click)=\"atualizarListaEFiltrar()\"\r\n                        class=\"btn btn-white pull-right\" style=\"padding: 8px 8px !important;margin-top: 17px;margin-bottom: 0px;width: 15rem;\">\r\n                        <i class=\"material-icons\">search</i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </h4>\r\n            <p class=\"card-category\"> </p>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table\">\r\n                <thead class=\"\">\r\n                  <th>ID</th>\r\n                  <th (click)=\"sort('dataCompra')\" style=\"cursor: pointer;\">Data     <span *ngIf=\"key =='dataCompra'\">{{reverse ? '▲' : '▼'}}</span></th>\r\n                  <th (click)=\"sort('comprador')\"  style=\"cursor: pointer;\">Comprador<span *ngIf=\"key =='comprador'\">{{reverse ? '▲' : '▼'}}</span></th>\r\n                  <th (click)=\"sort('idSorteio')\"  style=\"cursor: pointer;\">Sorteio  <span *ngIf=\"key =='idSorteio'\">{{reverse ? '▲' : '▼'}}</span></th>\r\n                  <th>Cota</th>\r\n                  <th></th>\r\n                  <th></th>\r\n                  <th>Qtd</th>\r\n                  <th>Total</th>\r\n                  <th></th>\r\n                  <th></th>\r\n                  <th></th>\r\n                </thead>\r\n\r\n                <tbody>\r\n                  <tr *ngFor=\"let compra of listCompras | orderBy: key : reverse | paginate: { itemsPerPage: 10, currentPage: paginaAtual }; let i = index\" [class]=\"getLineColorTable(compra.status)\">\r\n                    <td>{{compra.id}}</td>\r\n                    <td><b>{{compra.dataCompra | date: 'dd/MM/yyyy'}}</b></td>\r\n                    <td>\r\n                      <tr style=\"font-weight: normal;color: black;font-size: 14px;\">{{compra.comprador.substring(0, 30)}} -\r\n                        <a style=\"cursor: pointer;color: #000000e6;padding-left: 5px;font-weight: 900;\"\r\n                          (click)=\"openChatWhatsApp(compra, '')\"> {{compra.celular | mask: '(99)99999-9999'}}</a></tr>\r\n                      <tr style=\"font-weight: bold;color: black;font-size: 13px;\">{{compra.email}}</tr>\r\n\r\n                  </td>\r\n                  <td><b>#{{compra.idSorteio}}</b></td>\r\n                  <td style=\"word-break: break-all;\">\r\n                    <div *ngIf=\"!compra.rifinha\" class=\"display-card-cotas\">\r\n                      <label class=\"card-cota\" *ngFor=\"let cota of compra.cotasCard\">{{(\"000\" + cota).slice(-3)\r\n                        }}</label>\r\n                    </div>\r\n                    <div *ngIf=\"compra.rifinha\" class=\"display-card-cotas\">\r\n                      <label class=\"card-cota\" *ngFor=\"let cota of compra.cotasCard\">{{(\"00\" + cota).slice(-2)\r\n                        }}</label>\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <i class=\"material-icons text-sucess-compras background-icons\" data-toggle=\"dropdown\"\r\n                      aria-haspopup=\"true\" aria-expanded=\"false\" style=\"cursor: pointer;\">\r\n                      whatsapp\r\n                    </i>\r\n                    <div class=\"dropdown-menu\">\r\n                      <div *ngFor=\"let modeloMEnsagem of listModeloMensagem\">\r\n                        <a class=\"dropdown-item\" style=\"cursor: pointer;\"\r\n                          (click)=\"openChatWhatsApp(compra, modeloMEnsagem.mensagem)\">\r\n                          <span>{{modeloMEnsagem.nome}}</span>\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td><i [class]=\"getIconPayment(compra.status)\">attach_money</i></td>\r\n                  <td><b>{{compra.quantidade}}</b></td>\r\n                  <td class=\"text-sucess-compras\"><b>{{compra.total | currency:\"BRL\"}}</b></td>\r\n                  <td><i [class]=\"getClassIconRegysterPayment(compra.status)\" (click)=\"openDialogRegisterPayment(compra)\" data-toggle=\"modal\"\r\n                      data-target=\"#registerPaymentModal\" style=\"cursor: pointer;\" *ngIf=\"compra.status !== 3 && compra.status !== 2\">\r\n                      {{getIconRegysterPayment(compra.status)}}</i></td>\r\n                  <td><i class=\"material-icons text-info-compras background-icons\" (click)=\"loadCartDetail(compra.id)\"\r\n                      data-toggle=\"modal\" data-target=\"#cartDatailModal\" style=\"cursor: pointer;\">shopping_cart</i></td>\r\n                  <td><i style=\"cursor: pointer;\"\r\n                      [class]=\"getClassIconExcludeOrReserver(compra.status)\" (click)=\"reservarOrDelete(compra, compra.status)\">\r\n                      {{getIconExcludeOrReserver(compra.status)}}\r\n                    </i>\r\n                  </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <pagination-controls (pageChange)=\"paginaAtual = $event\" previousLabel=\"Anterior\" nextLabel=\"Próximo\" style=\"text-align: end;\"></pagination-controls>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal Register Payment-->\r\n<div class=\"modal fade\" id=\"registerPaymentModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n  aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Registrar Pagamento</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" id=\"closeModalRegistroPagamento\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div style=\"display: grid;grid-template-columns: 1fr 1fr;\">\r\n          <div class=\"align-self-end\" style=\"width: 14rem;\">\r\n            <div class=\"input-group col-md-12\">\r\n              <input type=\"text\" class=\"form-control bt-border-custom\" placeholder=\"Valor\" aria-label=\"Valor\"\r\n                aria-describedby=\"basic-addon2\" currencyMask [options]=\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\" style=\"color: black;\"\r\n                [(ngModel)]=\"registroPagamento.valorPago\">\r\n            </div>\r\n          </div>\r\n          <div class=\"align-self-end\" style=\"width: 14rem;\">\r\n            <div class=\"input-group col-md-12\">\r\n              <input type=\"date\" class=\"form-control bt-border-custom\" placeholder=\"Data Pagamento\" aria-label=\"Data Pagamento\"\r\n                aria-describedby=\"basic-addon2\" style=\"color: black;\"\r\n                [(ngModel)]=\"registroPagamento.dataTransacao\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"align-self-end\" style=\"margin-top: 20px;\">\r\n          <div class=\"input-group col-md-12\">\r\n            <div class=\"input-group-prepend\">\r\n              <button class=\"btn btn-outline-secondary dropdown-toggle bt-close-filter bt-size-filter\"\r\n                type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" style=\"color: black;width: 26.2rem;\">\r\n                {{registroPagamento.nomeConta ? registroPagamento.nomeConta.substring(0, 21) : 'Forma de Pgto'}}\r\n              </button>\r\n              <div class=\"input-group-append\">\r\n                <button *ngIf=\"value\" class=\"btn btn-outline-secondary bt-close-filter\" type=\"button\"\r\n                  (click)=\"limparContaRegistroPagamento()\" style=\"color: black;\">\r\n                  <i class=\"material-icons\">close</i>\r\n                </button>\r\n              </div>\r\n              <div class=\"dropdown-menu\">\r\n                <a class=\"dropdown-item\" style=\"color: black;\" *ngFor=\"let conta of contaList\"\r\n                  (click)=\"setRegistroPagamentoFormaPagamento(conta)\">\r\n                  #{{ conta.codigoBanco }} - {{ conta.nomeBanco }} - {{ conta.titular }}\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div style=\"display: inline;margin: 20px;text-align: center;\">\r\n          <input type=\"file\" style=\"display: none;\" class=\"file-upload\" formControlName=\"comprovante\"\r\n            (change)=\"onFileSelected($event)\" #fileUpload [value]=\"base64String\">\r\n    \r\n          <div class=\"file-upload\">\r\n    \r\n            {{fileName || \"Nenhum comprovante selecionado\"}}\r\n    \r\n            <button id=\"btt_regyster_payment\" mat-mini-fab class=\"upload-btn btn btn-primary\" (click)=\"fileUpload.click()\">\r\n              <i class=\"material-icons\">attach_file</i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancelar</button>\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"salvarRegistroPagamento()\">Salvar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal Cart Detail-->\r\n<div class=\"modal fade\" id=\"cartDatailModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n  aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <!-- style=\"background: linear-gradient(60deg, #000000, #5e5e5e);box-shadow: 0 4px 20px 0px rgb(0 0 0 / 14%), 0 7px 10px -5px rgb(12 12 12 / 40%);\" -->\r\n    <div class=\"modal-content\"\r\n      style=\"background: linear-gradient(60deg, #ffffff, #ffffff);box-shadow: 0 4px 20px 0px rgb(0 0 0 / 14%), 0 7px 10px -5px rgb(12 12 12 / 40%);\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\" style=\"color: rgb(0, 0, 0);\">Detalhes</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n\r\n        <div style=\"display: grid;grid-template-columns: 1fr 2fr;\" *ngIf=\"cartDatail\">\r\n          <div class=\"label-header-cart-detail-bg\">Sorteio:</div>\r\n          <div style=\"font-size: 11px;background-color: #cfcdcd85;font-weight: normal;color: black;\">\r\n            {{cartDatail.resumoCompra.nomeSorteio}}</div>\r\n\r\n          <div class=\"label-header-cart-detail\">Compra No.:</div>\r\n          <div style=\"font-weight: normal;color: black;\">{{cartDatail.resumoCompra.numeroCompra}}</div>\r\n\r\n          <div class=\"label-header-cart-detail-bg\">Cotas:</div>\r\n          <div style=\"background-color: #cfcdcd85;font-weight: normal\">\r\n            <div style=\"word-break: break-all;\">\r\n              <div *ngIf=\"!cartDatail.resumoCompra.rifinha\" class=\"display-card-cotas\" style=\"margin-top: 3px;\">\r\n                <label class=\"card-cota\" *ngFor=\"let cota of cartDatail.resumoCompra.cotasCard\">{{(\"000\" +\r\n                  cota).slice(-3)\r\n                  }}</label>\r\n              </div>\r\n              <div *ngIf=\"cartDatail.resumoCompra.rifinha\" class=\"display-card-cotas\">\r\n                <label class=\"card-cota\" *ngFor=\"let cota of cartDatail.resumoCompra.cotasCard\">{{(\"00\" +\r\n                  cota).slice(-2)\r\n                  }}</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"label-header-cart-detail\">Data do Pedido:</div>\r\n          <div style=\"font-weight: normal;color: black;\">{{cartDatail.resumoCompra.dataCompra | date: 'dd/MM/yyyy HH:mm'}}\r\n          </div>\r\n\r\n          <div class=\"label-header-cart-detail-bg\">Status:</div>\r\n          <div style=\"background-color: #cfcdcd85;font-weight: normal\">\r\n            <label [ngClass]=\"getClassLabelStatus(cartDatail.resumoCompra.status)\">\r\n              {{cartDatail.resumoCompra.status == 'Não Iniciado' ? 'Aguardando Pagamento' :\r\n              cartDatail.resumoCompra.status}}\r\n            </label>\r\n          </div>\r\n\r\n          <div class=\"label-header-cart-detail\">Cliente:</div>\r\n          <div style=\"font-weight: normal;color: black;\">{{cartDatail.resumoCompra.nomeCliente}}</div>\r\n\r\n          <div class=\"label-header-cart-detail-bg\">Telefone:</div>\r\n          <div style=\"background-color: #cfcdcd85;\">\r\n            <i class=\"material-icons text-sucess-compras background-icons\" style=\"cursor: pointer;margin-top: 5px;\"\r\n              (click)=\"openChatWhatsAppNoMsg(cartDatail.resumoCompra.celular)\">whatsapp</i>\r\n          </div>\r\n\r\n          <div class=\"label-header-cart-detail\">Preço Unidade:</div>\r\n          <div style=\"font-weight: normal;color: black;\">{{cartDatail.resumoCompra.precoUnitario | currency: 'BRL'}}\r\n          </div>\r\n\r\n          <div class=\"label-header-cart-detail-bg\">Qnt.:</div>\r\n          <div style=\"background-color: #cfcdcd85;font-weight: normal;color: black;\">\r\n            {{cartDatail.resumoCompra.quantidadeCotas}}</div>\r\n\r\n          <div class=\"label-header-cart-detail\">Total:</div>\r\n          <div style=\"font-weight: normal;color: #1bc727;\">{{cartDatail.resumoCompra.total | currency: 'BRL'}}</div>\r\n\r\n          <div class=\"label-header-cart-detail-bg\">Total pago:</div>\r\n          <div style=\"background-color: #cfcdcd85;font-weight: normal;color: black;\">{{cartDatail.resumoCompra.totalPago\r\n            | currency: 'BRL'}}</div>\r\n\r\n          <div class=\"label-header-cart-detail\">Valor devido:</div>\r\n          <div style=\"font-weight: normal;color: black;color: #ff3a3a;\">{{cartDatail.resumoCompra.valorDevido |\r\n            currency: 'BRL'}}</div>\r\n\r\n          <div class=\"label-header-cart-detail-bg\">CPF:</div>\r\n          <div style=\"background-color: #cfcdcd85;font-weight: normal;color: black;\">\r\n            {{cartDatail.resumoCompra.cpfCliente}}</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <div class=\"table-responsive\">\r\n          <table *ngIf=\"cartDatail\" class=\"table table-hover\">\r\n            <thead class=\"\">\r\n              <!-- <th class=\"label-header-cart-detail\"><b>ID Transação</b></th> -->\r\n              <th class=\"label-header-cart-detail\"><b>Data</b></th>\r\n              <th class=\"label-header-cart-detail\"><b>Valor</b></th>\r\n              <th class=\"label-header-cart-detail\"><b>Status</b></th>\r\n              <th class=\"label-header-cart-detail\"><b></b></th>\r\n            </thead>\r\n\r\n            <tbody *ngFor=\"let transacao of cartDatail.resumoPagamento.transacoes\">\r\n              <!-- <th class=\"label-header-cart-detail\">{{transacao.id}}</th> -->\r\n              <th class=\"label-header-cart-detail\">{{transacao.dataTransacao | date: 'dd/MM/yyyy'}}</th>\r\n              <th class=\"label-header-cart-detail\" style=\"color: #1bc727;\">{{transacao.valor | currency: 'BRL'}}</th>\r\n              <th>\r\n                <label [ngClass]=\"getClassLabelStatus(transacao.status)\" style=\"margin-top: 0px\"> {{transacao.status}} </label>\r\n              </th>\r\n              <th style=\"display: flex;gap: 7%;\">\r\n              <i class=\"material-icons text-info background-icons\" (click)=\"openDialogComprovante(transacao)\" data-toggle=\"modal\"\r\n              data-target=\"#comprovanteModal\"\r\n               style=\"cursor: pointer;margin-top: 0px;\" *ngIf=\"getOpcaoAprovarByStatus(transacao.status)\">description</i>\r\n              <i class=\"material-icons text-success background-icons\" (click)=\"aprovarTrasacao(transacao.id)\" \r\n               style=\"cursor: pointer;margin-top: 0px;\" *ngIf=\"getOpcaoAprovarByStatus(transacao.status)\">done</i>   \r\n              <i class=\"material-icons text-danger background-icons\" (click)=\"cancelarTransacao(transacao.id)\" \r\n               style=\"cursor: pointer;margin-top: 0px;\" *ngIf=\"getOpcaoAprovarByStatus(transacao.status)\">delete_outline</i> \r\n              </th>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal Register Payment-->\r\n  <div class=\"modal fade\" id=\"comprovanteModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"comprovanteModal\"\r\n       aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"comprovanteModal\">Comprovante</h5>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <img src=\"/uploads/{{comprovante}}\" width=\"470\" height=\"400\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</div>","import { CurrencyPipe, DatePipe, formatDate } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ConstantsUrl } from 'app/constants/urls';\r\nimport { ModeloMensagem } from 'app/models/modelo-mensagem';\r\nimport { ContaService } from 'app/services/conta.service';\r\nimport { ModeloMensagemService } from 'app/services/modelo-mensagem.service';\r\nimport { SorteioService } from 'app/services/sorteio.service';\r\nimport { NotificationService } from 'app/services/toast.service';\r\nimport { Compras } from '../models/compras';\r\nimport { Conta } from '../models/conta';\r\nimport { Sorteio } from '../models/sorteio';\r\nimport { ComprasFilter } from './models/filter';\r\nimport { StatusCompra } from '../models/status-compra';\r\nimport { ComprasService } from '../services/compras.service';\r\nimport { CartDetail } from 'app/models/cart-detail';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { Transacao } from 'app/models/transacao';\r\nimport { TransacaoService } from 'app/services/transacao.service';\r\nimport { RegisterPaymentService } from 'app/services/register-payment.service';\r\nimport { RegisterPayment } from 'app/models/register-payment';\r\nimport { UploadService } from 'app/services/upload.service';\r\n\r\n@Component({\r\n  selector: 'app-compras',\r\n  templateUrl: './compras.component.html',\r\n  styleUrls: ['./compras.component.css'],\r\n  providers: [CurrencyPipe, DatePipe]\r\n})\r\nexport class ComprasComponent implements OnInit {\r\n\r\n  listCompras: Compras[];\r\n  statusList: StatusCompra[];\r\n  sorteioList: Sorteio[];\r\n  contaList: Conta[];\r\n  comprovante: string;\r\n\r\n  value = 'Limpar';\r\n\r\n  filter: ComprasFilter;\r\n\r\n  pageIndex:number\r\n  public paginaAtual = 1;\r\n  pageEvent: PageEvent;\r\n  // Configuração da ordenação\r\n  key: string = 'id'; // Define um valor padrão, para quando inicializar o componente\r\n  reverse: boolean = true;\r\n\r\n  listModeloMensagem: ModeloMensagem[];\r\n  cartDatail: CartDetail;\r\n\r\n  fileName = '';\r\n  base64String: string | ArrayBuffer = '';\r\n  arquivo: string;\r\n\r\n  registroPagamento: RegisterPayment;\r\n\r\n  constructor(private comprasService: ComprasService,\r\n    private alertService: NotificationService, private router: Router,\r\n    private sorteioService: SorteioService, private contaService: ContaService,\r\n    private modeloMensagemService: ModeloMensagemService, private currencyPipe: CurrencyPipe,\r\n    private transacaoService: TransacaoService, private registerPaymentService: RegisterPaymentService,\r\n    private compraServie: ComprasService, private uploadService: UploadService, private datePipe: DatePipe) { }\r\n\r\n  ngOnInit() {\r\n    this.filter = new ComprasFilter();\r\n    this.sorteioService.listStatus().subscribe(\r\n      status => this.statusList = status.filter(s => s.id !== 99)\r\n    );\r\n    this.sorteioService.list().subscribe(\r\n      sorteios => this.sorteioList = sorteios['content']\r\n    );\r\n    this.contaService.list().subscribe(\r\n      conta => this.contaList = conta['content']\r\n    )\r\n    this.loadCompras();\r\n\r\n    this.modeloMensagemService.list().subscribe(\r\n      modelosMensagem => this.listModeloMensagem = modelosMensagem.filter(msg => msg.ativo)\r\n    );\r\n\r\n    if (localStorage.getItem('current_page')) {\r\n      this.pageIndex = +localStorage.getItem('current_page')\r\n    } else {\r\n      this.pageIndex = 0;\r\n    }\r\n\r\n    this.registroPagamento = new RegisterPayment();\r\n  }\r\n\r\n  atualizarListaEFiltrar() {\r\n    this.loadCompras().then(lista => this.searchFilters(this.filter.name, this.filter.status, this.filter.nomeSorteio, \r\n                                                       this.filter.formaPagamento, this.filter.dataPedidoInicio, this.filter.dataPedidoFim, \r\n                                                       this.filter.cota, lista));\r\n  }\r\n\r\n  searchFilters(comprador: string, status: number, sorteio: string, formaPagamento: string, dataInicio: string, dataFim: string, cota: string, listaCompras: Compras[]) {\r\n\r\n    let filteredList: Compras[] = listaCompras;\r\n\r\n    if (comprador != undefined && comprador != null && comprador != '') {\r\n      filteredList = filteredList.filter(compra => (compra.comprador.toLowerCase().replace(/\\s/g, \"\").lastIndexOf(comprador.toLowerCase().replace(/\\s/g, \"\"), 0) === 0));\r\n    }\r\n\r\n    if (status != undefined && status != undefined && status != +'') {\r\n      if (status === 4) {\r\n        status = 1\r\n      } else if (status === 1) {\r\n        status = 99\r\n      }\r\n      filteredList = filteredList.filter(compra => compra.status === status)\r\n    }\r\n\r\n    if (sorteio != undefined && sorteio != null && sorteio.length > 0) {\r\n      filteredList = filteredList.filter(compra => compra.nomeSorteio.toLowerCase() === sorteio.toLowerCase())\r\n    }\r\n\r\n    if (formaPagamento != undefined && formaPagamento != null && formaPagamento.length > 0) {\r\n      filteredList = filteredList.filter(compra => compra.nomeBanco !== null && compra.nomeBanco.toLowerCase() === formaPagamento.toLowerCase())\r\n    }\r\n\r\n    let start = new Date(dataInicio);\r\n    let end = new Date(dataFim);\r\n\r\n    start.setDate(start.getDate() + 1)\r\n    end.setDate(end.getDate() + 1)\r\n    if (dataInicio != null &&start != undefined && start != null && start.valueOf().toString() !== 'NaN' &&\r\n        dataFim != null && end != undefined && end != null && end.valueOf().toString() !== 'NaN') {\r\n          \r\n          if( new Date(start).getTime() == new Date(end).getTime()){\r\n            filteredList = filteredList.filter(compra => formatDate(compra.dataCompra,'yyyy-MM-dd','en_US') == formatDate(start,'yyyy-MM-dd','en_US') );\r\n          } else {\r\n            filteredList = filteredList.filter(compra => formatDate(compra.dataCompra,'yyyy-MM-dd','en_US') >= formatDate(start,'yyyy-MM-dd','en_US') && \r\n                                                         formatDate(compra.dataCompra,'yyyy-MM-dd','en_US') <= formatDate(end,'yyyy-MM-dd','en_US'));\r\n          }\r\n    }\r\n\r\n    if (cota != undefined && cota != null && cota.length > 0) {\r\n      filteredList = filteredList.filter(compra => compra.rifinha ? this.getListCotasSliceRifinha(compra.cotas).includes(cota) : this.getListCotasSlice(compra.cotas).includes(cota))\r\n    }\r\n\r\n    this.listCompras = filteredList;\r\n  }\r\n\r\n  setFilterStatus(status: StatusCompra){\r\n    this.filter.status = status.id\r\n    this.filter.statusDescricao = status.descricao\r\n  }\r\n\r\n  setFilterFormaPagamento(conta: Conta){\r\n    this.filter.formaPagamento = conta.nomeBanco\r\n  }\r\n\r\n  setFilterSorteio(sorteio: Sorteio){\r\n    this.filter.nomeSorteio = sorteio.titulo\r\n  }\r\n\r\n  updatePage(event?) {\r\n    localStorage.setItem('current_page', '' + event.pageIndex)\r\n    return event;\r\n  }\r\n\r\n  sort(key) {\r\n    this.key = key;\r\n    this.reverse = !this.reverse;\r\n  }\r\n\r\n  openChatWhatsApp(compra: Compras, mensagem: string) {\r\n    let msg = this.getMensagem(compra, mensagem);\r\n    window.open(ConstantsUrl.urlZap + '55' + compra.celular + '&text=' + msg, \"_blank\");\r\n  }\r\n\r\n  openChatWhatsAppNoMsg(celular: string) {\r\n    window.open(ConstantsUrl.urlZap + celular + '&text=' , \"_blank\");\r\n  }\r\n\r\n   getIconPayment(status: number){\r\n    if(status === 1){\r\n      return \"material-icons text-warning background-icons\"\r\n    }\r\n    if(status === 2){\r\n      return \"material-icons text-sucess-compras background-icons\"\r\n    }\r\n    return \"material-icons background-icons\"\r\n  }\r\n\r\n  getClassIconRegysterPayment(status: number){\r\n    if(status === 2){\r\n      return \"material-icons text-yellow background-icons\"\r\n    }\r\n    return \"material-icons text-sucess-compras background-icons\"\r\n  }\r\n\r\n  getIconRegysterPayment(status: number){\r\n    if(status === 2){\r\n      return \"info\"\r\n    }\r\n    return \"credit_score\"\r\n  }\r\n\r\n  getClassIconExcludeOrReserver(status: number){\r\n    if(status === 2 || status === 3){\r\n      return \"material-icons text-warning background-icons\"\r\n    }\r\n    return \"material-icons text-danger background-icons\"\r\n  }\r\n\r\n  getIconExcludeOrReserver(status: number){\r\n    if(status === 2 || status === 3){\r\n      return \"hourglass_full\"\r\n    }\r\n    return \"delete_outline\"\r\n  }\r\n\r\n  getLineColorTable(status: number){\r\n\r\n    if(status === 1){\r\n      return \"line-pedding-aproved\"\r\n    }\r\n    if(status === 2){\r\n      return \"line-aproved\"\r\n    }\r\n    if(status === 3){\r\n      return \"line-canceled\"\r\n    }\r\n    if(status === 4 || status === 99){\r\n      return \"line-pedding\"\r\n    }\r\n    return \"line-pedding\"\r\n  }\r\n\r\n  getLineColor(status: number){\r\n\r\n    if(status === 1){\r\n      return \"line-pedding\"\r\n    }\r\n    if(status === 2){\r\n      return \"line-aproved\"\r\n    }\r\n    if(status === 3){\r\n      return \"line-canceled\"\r\n    }\r\n    if(status === 4 || status === 99){\r\n      return \"line-pedding-aproved\"\r\n    }\r\n    return \"line-pedding\"\r\n  }\r\n\r\n  getOpcaoAprovarByStatus(description: string){\r\n    if(description === 'Aprovado' || description === 'Aprovado'.toUpperCase()){\r\n      return false;\r\n    }\r\n    if(description === 'Cancelado' || description === 'Cancelado'.toUpperCase()){\r\n      return false;\r\n    }\r\n    if(description === 'Aguardando Pagamento' || description === 'Não Iniciado' \r\n    || description === 'Pagamento Pendente' || description === 'Pendente' || description === 'Pendente'.toUpperCase()){\r\n      return true;\r\n    }\r\n  }\r\n\r\n  getMensagem(compra: Compras, mensagem: string) {\r\n    let msg = mensagem.replace(/\\s+/g, '%20');\r\n    msg = mensagem.replace(/\\n\\r?/g, '%0D%0A');\r\n    msg = msg.replace('%CLIENTE_NOME%', compra.comprador);\r\n    msg = msg.replace('%CLIENTE_NOME_COMPLETO%', compra.comprador);\r\n    msg = msg.replace('%COMPRA_COTAS%', compra.rifinha ? this.getCotasSliceRifinha(compra.cotas) : this.getCotasSlice(compra.cotas));\r\n    msg = msg.replace('%COMPRA_VALOR_TOTAL%', this.currencyPipe.transform(compra.total, ''));\r\n    msg = msg.replace('%SORTEIO_TITULO%', compra.nomeSorteio);\r\n    msg = msg.replace('%SORTEIO_DATA%', compra.dataCompra);\r\n\r\n    return msg;\r\n  }\r\n\r\n  getCotasSlice(cotas: string) {\r\n    let list = cotas.split(',');\r\n    let listaModificada: string[] = [];\r\n\r\n    list.forEach(cota => {\r\n      listaModificada.push((('000' + cota).slice(-3)))\r\n    })\r\n\r\n    return listaModificada.toString();\r\n\r\n  }\r\n\r\n  getCotasSliceRifinha(cotas: string) {\r\n    let list = cotas.split(',');\r\n    let listaModificada: string[] = [];\r\n\r\n    list.forEach(cota => {\r\n      listaModificada.push((('00' + cota).slice(-2)))\r\n    })\r\n\r\n    return listaModificada.toString();\r\n\r\n  }\r\n\r\n  getListCotasSlice(cotas: string) {\r\n    let list = cotas.split(',');\r\n    let listaModificada: string[] = [];\r\n\r\n    list.forEach(cota => {\r\n      listaModificada.push((('000' + cota).slice(-3)))\r\n    })\r\n\r\n    return listaModificada;\r\n\r\n  }\r\n\r\n  getListCotasSliceRifinha(cotas: string) {\r\n    let list = cotas.split(',');\r\n    let listaModificada: string[] = [];\r\n\r\n    list.forEach(cota => {\r\n      listaModificada.push((('00' + cota).slice(-2)))\r\n    })\r\n\r\n    return listaModificada;\r\n\r\n  }\r\n\r\n  loadCartDetail(id: number){\r\n    this.comprasService.getCartDetail(id).subscribe(\r\n      cartDetail => {\r\n        this.cartDatail = cartDetail;\r\n        this.cartDatail.id = id;\r\n        this.cartDatail.resumoCompra.cotasCard = [];\r\n        this.cartDatail.resumoCompra.cotasCard = cartDetail.resumoCompra.cotas.split(',')\r\n      }\r\n    )\r\n  }\r\n\r\n  getClassLabelStatus(description: string){\r\n    if(description === 'Aprovado' || description === 'Aprovado'.toUpperCase()){\r\n      return 'label-status-aprovado'\r\n    }\r\n    if(description === 'Cancelado' || description === 'Cancelado'.toUpperCase()){\r\n      return 'label-status-cancelado'\r\n    }\r\n    if(description === 'Aguardando Pagamento' || description === 'Não Iniciado' \r\n    || description === 'Pagamento Pendente' || description === 'Pendente' || description === 'Pendente'.toUpperCase()){\r\n      return 'label-status-pendente'\r\n    }\r\n  }\r\n\r\n  clearFilterSearchName() {\r\n    this.filter.name = '';\r\n  }\r\n\r\n  clearFilterSearchStatus() {\r\n    this.filter.status = null;\r\n    this.filter.statusDescricao = null;\r\n  }\r\n\r\n  clearFilterSearchSorteio() {\r\n    this.filter.nomeSorteio = null;\r\n  }\r\n\r\n  clearFilterSearchFormaPagamento() {\r\n    this.filter.formaPagamento = null;\r\n  }\r\n\r\n  clearFilterSearchData() {\r\n    this.filter.dataPedidoInicio = '';\r\n    this.filter.dataPedidoFim = '';\r\n  }\r\n\r\n  clearFilterSearchCota() {\r\n    this.filter.cota = '';\r\n  }\r\n\r\n  openDialogComprovante(transacao: Transacao){\r\n    this.transacaoService.getArquivo(transacao.id).subscribe(\r\n      result => {\r\n        this.comprovante = result['imagem'];\r\n      }\r\n    )\r\n  }\r\n\r\n  cancelarTransacao(id: number){\r\n    this.registerPaymentService.cancelarRegisterPayment(id).subscribe(\r\n      result => {\r\n        this.alertService.showSucess('Transação Cancelada com sucesso!', 'Sucesso')\r\n        this.loadCartDetail(this.cartDatail.id) \r\n        this.atualizarListaEFiltrar();\r\n      }\r\n    )\r\n  }\r\n\r\n  aprovarTrasacao(id: number){\r\n    this.registerPaymentService.updateRegisterPayment(id).subscribe(\r\n      result => {\r\n        this.alertService.showSucess('Transação Aprovada com sucesso!', 'Sucesso')\r\n        this.loadCartDetail(this.cartDatail.id)\r\n        this.atualizarListaEFiltrar();\r\n      }\r\n    )\r\n  }\r\n\r\n  reservarOrDelete(compra: Compras, status: number){\r\n    if(status === 2 || status === 3){\r\n      this.compraServie.reservarCompra(compra.id).toPromise()\r\n      .then(() => {\r\n        this.alertService.showSucess('Compra reservada com sucesso!', 'Sucesso');\r\n        this.atualizarListaEFiltrar();\r\n      })\r\n      .catch(error => {\r\n        this.alertService.showError('Erro ao reservar a compra!', 'Error')\r\n      })\r\n    } else {\r\n      let confirmado = confirm(\"Deseja Realmente Cancelar ?\")\r\n      if(confirmado){\r\n        this.compraServie.cancelarCompra(compra.id).toPromise()\r\n        .then(() => {\r\n          this.alertService.showSucess('Compra cancelada com sucesso!', 'Sucesso');\r\n          this.atualizarListaEFiltrar();\r\n        })\r\n        .catch(error => {\r\n          this.alertService.showError('Erro ao cancelar a compta!', 'Error')\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  setRegistroPagamentoFormaPagamento(conta: Conta){\r\n    this.registroPagamento.nomeConta = conta.nomeBanco;\r\n    this.registroPagamento.idConta = conta.id;\r\n  }\r\n\r\n  limparContaRegistroPagamento(){\r\n    this.registroPagamento.nomeConta = null;\r\n    this.registroPagamento.idCompra = null;\r\n  }\r\n\r\n  async onFileSelected(event: any) {\r\n    let fileList: FileList = event.target.files;\r\n    if(fileList.length > 0) {\r\n        let file: File = fileList[0];\r\n        this.fileName = file.name.split('.')[0] + new Date().getTime() + '.' + file.name.split('.')[1];\r\n        this.arquivo = event.target.files[0];\r\n    }\r\n  }\r\n\r\n  openDialogRegisterPayment(compra: Compras){\r\n    this.registroPagamento.valorPago = compra.total;\r\n    this.registroPagamento.idCompra = compra.id;\r\n    this.registroPagamento.comprovante = this.fileName;\r\n    this.registroPagamento.dataTransacao = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\r\n    document.getElementById('btt_regyster_payment').click();\r\n  }\r\n\r\n  salvarRegistroPagamento() {\r\n    this.registerPaymentService.createRegisterPayment(this.registroPagamento).toPromise()\r\n    .then(() => {\r\n      if(this.arquivo){\r\n        this.uploadService.upload(this.arquivo, this.fileName, 'sorteios').toPromise()\r\n        .then(() => {\r\n          this.alertService.showSucess('Registro de Pagamento cadastrado com sucesso!', 'Sucesso')\r\n          this.registroPagamento  = new RegisterPayment();\r\n          document.getElementById('closeModalRegistroPagamento').click();\r\n          this.atualizarListaEFiltrar();\r\n        });\r\n      } else {\r\n        this.alertService.showSucess('Registro de Pagamento cadastrado com sucesso!', 'Sucesso')\r\n        this.registroPagamento  = new RegisterPayment();\r\n        document.getElementById('closeModalRegistroPagamento').click();\r\n        this.atualizarListaEFiltrar();\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n      this.alertService.showError('Erro ao cadastrar a transação! verifique os campos preenchidos.', 'Error')\r\n    })\r\n  }\r\n\r\n  private async loadCompras(): Promise<Compras[]> {\r\n    return this.comprasService.list().toPromise()\r\n      .then(\r\n        (compras) => {\r\n          compras['content'].forEach(compra => {\r\n            compra.cotasCard = [];\r\n            compra.cotasCard = compra.cotas.split(',')\r\n          });\r\n          this.listCompras = compras['content'];\r\n          return compras['content'];\r\n        },\r\n        err => console.log(err),\r\n      );\r\n  }\r\n\r\n}\r\n","export class ConstantsUrl {\r\n    public static readonly urlZap = \"https://api.whatsapp.com/send?phone=\";\r\n}","\r\nexport class GanhadoresCadastro {\r\n    id: number;\r\n    dataSorteio: string;\r\n    idCliente: number;\r\n    idSorteio: number;\r\n    imagem: string | ArrayBuffer;\r\n    linkVideoYoutube: string;\r\n    numeroSorteado: number;\r\n    titulo: string;\r\n}","<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"card card-plain\">\r\n                    <div class=\"card-header card-header-danger card-header-black\">\r\n                        <div style=\"display: flex;\">\r\n                            <div class=\"align-self-end\">\r\n                                <div class=\"input-group col-md-12\">\r\n                                    <button mat-raised-button type=\"submit\" class=\"btn btn-white pull-right\"\r\n                                        style=\"padding: 8px 8px !important;margin-top: 17px;margin-bottom: 0px;\"\r\n                                        data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n                                        (click)=\"loadEditGanhador(null)\"> Adicionar Ganhador\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <div class=\"table-responsive\">\r\n                            <table class=\"table table-hover\">\r\n                                <thead class=\"\">\r\n                                    <th><i class=\"material-icons\">image</i></th>\r\n                                    <th>Titulo</th>\r\n                                    <th>Ganhador</th>\r\n                                    <th></th>\r\n                                    <th></th>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr\r\n                                        *ngFor=\"let ganhador of listGanhadores | paginate: { itemsPerPage: 10, currentPage: paginaAtual }; let i = index\">\r\n                                        <td><img src=\"/uploads/{{ganhador.imagem}}\" style=\"width: 100px;height: 100px;\">\r\n                                        </td>\r\n                                        <td>{{ganhador.titulo}}</td>\r\n                                        <td><b>{{ganhador.ganhador}}</b></td>\r\n                                        <td>\r\n                                            <i class=\"material-icons background-icons text-info\"\r\n                                                style=\"cursor: pointer;\" data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n                                                (click)=\"loadEditGanhador(ganhador.id)\">edit</i>\r\n                                        </td>\r\n                                        <td>\r\n                                            <i class=\"material-icons background-icons text-danger\"\r\n                                                (click)=\"deletar(ganhador)\" style=\"cursor: pointer;\">delete_outline</i>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <pagination-controls (pageChange)=\"paginaAtual = $event\" previousLabel=\"Anterior\"\r\n                                nextLabel=\"Próximo\" style=\"text-align: end;\"></pagination-controls>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Modal Edit Ganhador-->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"editganhadorModalH5\">Ganhador</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" id=\"closeModalGanhador\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <div style=\"display: grid;grid-template-columns: 1fr 1fr;margin-top: 20px;\">\r\n                    <div class=\"align-self-end\">\r\n                        <div class=\"input-group col-md-12\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <button class=\"btn btn-outline-secondary dropdown-toggle bt-close-filter bt-size-filter dropleft\"\r\n                                  type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                  {{ganhador.titulo ? ganhador.titulo.substring(0, 21) : 'Sorteio'}}\r\n                                </button>\r\n                                <div class=\"input-group-append\">\r\n                                  <button class=\"btn btn-outline-secondary bt-close-filter\" type=\"button\">\r\n                                    <i class=\"material-icons\">close</i>\r\n                                  </button>\r\n                                </div>\r\n                                <div class=\"dropdown-menu\">\r\n                                  <a class=\"dropdown-item\" style=\"color: black;\" *ngFor=\"let sorteio of sorteioList\"\r\n                                    (click)=\"setSorteio(sorteio)\">\r\n                                    {{ sorteio.titulo }}\r\n                                  </a>\r\n                                </div>\r\n                              </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"align-self-end\">\r\n                        <div class=\"input-group col-md-12\">\r\n                            <input type=\"text\" class=\"form-control bt-border-custom\" placeholder=\"Id Cliente\"\r\n                                aria-label=\"Cliente\" aria-describedby=\"basic-addon2\" style=\"color: black;\"\r\n                                [(ngModel)]=\"ganhador.idCliente\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style=\"display: grid;grid-template-columns: 1fr 1fr;margin-top: 20px;\">\r\n                    <div class=\"align-self-end\">\r\n                        <div class=\"input-group col-md-12\">\r\n                            <input type=\"text\" class=\"form-control bt-border-custom\" placeholder=\"Cota\"\r\n                                aria-label=\"Cota\" aria-describedby=\"basic-addon2\" style=\"color: black;\"\r\n                                [(ngModel)]=\"ganhador.numeroSorteado\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"align-self-end\">\r\n                        <div class=\"input-group col-md-12\">\r\n                            <input type=\"date\" class=\"form-control bt-border-custom\" placeholder=\"Data Sorteio\"\r\n                                aria-label=\"Data Sorteio\" aria-describedby=\"basic-addon2\" style=\"color: black;\"\r\n                                [(ngModel)]=\"ganhador.dataSorteio\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style=\"display: grid;grid-template-columns: 1fr;margin-top: 20px\">\r\n                    <div class=\"align-self-end\">\r\n                        <div class=\"input-group col-md-12\">\r\n                            <input type=\"text\" class=\"form-control bt-border-custom\" placeholder=\"Link\"\r\n                                aria-label=\"Link\" aria-describedby=\"basic-addon2\" style=\"color: black;\"\r\n                                [(ngModel)]=\"ganhador.linkVideoYoutube\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"align-self-end\" style=\"margin-top: 20px\">\r\n                    <div class=\"input-group col-md-12\">\r\n                        <input type=\"file\" style=\"display: none;\" class=\"file-upload\" [(ngModel)]=\"ganhador.imagem\"\r\n                            (change)=\"fileChange($event)\" #fileUpload>\r\n\r\n                        <div class=\"file-upload\">\r\n\r\n                            {{fileName.substring(0,15) || \"Selecionar imagem\"}}\r\n\r\n                            <button mat-mini-fab class=\"btn btn-primary\" (click)=\"fileUpload.click()\"\r\n                                style=\"margin-left: 5px;\">\r\n                                <i class=\"material-icons\">attach_file</i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancelar</button>\r\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveOrUpdate()\">Salvar</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Ganhadores } from 'app/models/ganhadores';\r\nimport { GanhadoresCadastro } from 'app/models/ganhadores-cadastro';\r\nimport { Sorteio } from 'app/models/sorteio';\r\nimport { GanhadoresService } from 'app/services/ganhadores.service';\r\nimport { SorteioService } from 'app/services/sorteio.service';\r\nimport { NotificationService } from 'app/services/toast.service';\r\nimport { UploadService } from 'app/services/upload.service';\r\n\r\n@Component({\r\n  selector: 'ganhadores',\r\n  templateUrl: './ganhadores.component.html',\r\n  styleUrls: ['./ganhadores.component.css']\r\n})\r\nexport class GanhadoresComponent implements OnInit {\r\n\r\n  listGanhadores: Ganhadores[];\r\n  ganhador: GanhadoresCadastro;\r\n  sorteioList: Sorteio[];\r\n  public paginaAtual = 1;\r\n  fileName = '';\r\n  arquivo: string;\r\n\r\n  constructor(private alertService: NotificationService, private ganhadorService: GanhadoresService,\r\n    private uploadService: UploadService, private sorteioService: SorteioService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.ganhador = new GanhadoresCadastro();\r\n    this.loadGanhadores();\r\n    this.loadSorteios();\r\n    \r\n  }\r\n\r\n  loadSorteios(){\r\n    this.sorteioService.list().subscribe(\r\n      sorteios => {\r\n        this.sorteioList = sorteios['content']\r\n        this.sorteioList = this.sorteioList.filter(sorteio => !sorteio.rifinha)\r\n      }\r\n    );\r\n  }\r\n\r\n  loadGanhadores(){\r\n    this.ganhadorService.list().subscribe(\r\n      ganhadores => this.listGanhadores = ganhadores['content']\r\n    );\r\n  }\r\n\r\n  setSorteio(sorteio: Sorteio){\r\n    this.ganhador.idSorteio = sorteio.id\r\n    this.ganhador.titulo = sorteio.titulo\r\n  }\r\n\r\n  loadEditGanhador(id: number){\r\n    if(id){\r\n      this.ganhadorService.findGanhadoreById(id).subscribe(\r\n        ganhador => this.ganhador = ganhador\r\n      )\r\n    } else {\r\n      this.ganhador = new GanhadoresCadastro();\r\n    }\r\n  }\r\n\r\n  saveOrUpdate() {\r\n    this.ganhador.imagem = this.fileName;\r\n    if (this.ganhador.id && this.ganhador.id > 0) {\r\n      this.atualizar();\r\n    } else {\r\n      this.ganhadorService.createGanhadores(this.ganhador).toPromise()\r\n        .then(() => {\r\n          this.alertService.showSucess('Cadastrado com sucesso!', 'SUCESSO')\r\n          document.getElementById('closeModalGanhador').click();\r\n          this.uploadService.upload(this.arquivo, this.fileName, 'sorteios').toPromise()\r\n          .then(() => {\r\n            this.fileName = '';\r\n            this.arquivo = '';\r\n            console.log('Upload Realizado com Sucesso!')\r\n          });\r\n          this.loadGanhadores();\r\n        }\r\n        )\r\n        .catch(\r\n          error => this.alertService.showError('Erro ao cadastrar!', 'ERRO')\r\n        )\r\n    }\r\n  }\r\n\r\n  atualizar() {\r\n    this.ganhadorService.updateGanhadores(this.ganhador, this.ganhador.id).toPromise()\r\n      .then(() => {\r\n          this.alertService.showSucess('Atualizado com sucesso!', 'SUCESSO')\r\n          document.getElementById('closeModalGanhador').click();\r\n          if(this.arquivo){\r\n            this.uploadService.upload(this.arquivo, this.fileName, 'sorteios').toPromise()\r\n          .then(() => {\r\n            this.fileName = '';\r\n            this.arquivo = '';\r\n            console.log('Upload Realizado com Sucesso!')\r\n          });\r\n          }\r\n          this.loadGanhadores();\r\n        }\r\n      )\r\n      .catch(\r\n        error => this.alertService.showError('Erro ao atualizar!', 'ERRO')\r\n      )\r\n  }\r\n\r\n  deletar(ganhador: Ganhadores) {\r\n    this.ganhadorService.deleteGanhadores(ganhador.id).toPromise()\r\n      .then(() => {\r\n        this.alertService.showSucess('Deletado com sucesso!', 'SUCESSO');\r\n        this.ngOnInit();\r\n      })\r\n      .catch(\r\n        error => this.alertService.showError('Erro ao deletar!', 'ERRO')\r\n      )\r\n  }\r\n\r\n  async fileChange(event) {\r\n    let fileList: FileList = event.target.files;\r\n    if(fileList.length > 0) {\r\n        let file: File = fileList[0];\r\n        this.fileName = file.name;\r\n        this.arquivo = event.target.files[0];\r\n    }\r\n}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthenticationService } from 'app/services/login.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuardService implements CanActivate {\r\n  constructor( private router: Router, private authentcationService: AuthenticationService){}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\r\n    const currentUser = this.authentcationService.currentUserValue;\r\n    const currentUserAdmin = this.authentcationService.currentUserAdminValue;\r\n    if(currentUser.isLogged){\r\n      return true;\r\n    }\r\n    if(currentUserAdmin.isLogged){\r\n      return true;\r\n    }\r\n\r\n    //this.router.navigate([''], { queryParams: { returnUrl: state.url }});\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError, of } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { NotificationService } from 'app/services/toast.service';\r\nimport { AuthenticationService } from 'app/services/login.service';\r\n\r\n@Injectable()\r\nexport class HttpErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authenticationService: AuthenticationService, private router: Router,\r\n    private alertService: NotificationService) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    let handled: boolean = false;\r\n\r\n    return next.handle(request)\r\n    .pipe(\r\n      //taking out retry for now because it's even retrying on bad credentials\r\n      //retry(1),\r\n      catchError((returnedError) => {\r\n        let errorMessage = null;\r\n        console.log(\"Returned error\", returnedError.error);\r\n        \r\n        if(returnedError.error.cpf){\r\n          this.alertService.showError(returnedError.error.cpf, 'Error');\r\n        }\r\n\r\n        if (returnedError.error instanceof ErrorEvent) {\r\n          errorMessage = `Error: ${returnedError.error.message}`;\r\n        } else if (returnedError instanceof HttpErrorResponse) {\r\n          errorMessage = `Error Status ${returnedError.status}: ${returnedError.message}`;\r\n          handled = this.handleServerSideError(returnedError);\r\n        } \r\n\r\n        console.error(errorMessage ? errorMessage : returnedError);\r\n\r\n        if (!handled) {\r\n          return throwError(returnedError);\r\n        } else {\r\n          return of(returnedError);\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  private handleServerSideError(error: HttpErrorResponse): boolean {\r\n    let handled: boolean = false;\r\n    switch (error.status) {\r\n      case 401:\r\n        //we don't want to redirect people to the login page when they're already on\r\n        //the login page\r\n        if (this.router.url != '/login') {\r\n          this.alertService.showInfo(\"Please login again.\", { keepAfterRouteChange: false });\r\n          this.authenticationService.logout();\r\n          handled = true;\r\n        }\r\n\r\n        break;\r\n      case 403:\r\n        this.alertService.showError(\"Verifique suas credenciais\", 'Usuário e senha inválidos!');\r\n        this.authenticationService.logout();\r\n        handled = true;\r\n        break;\r\n      case 500:\r\n        if(error.error.message == 'Acesso negado'){\r\n          this.alertService.showWarning(\"Sessão expirada\", 'Realizar o login novamente!');\r\n          this.authenticationService.logout();\r\n          handled = true;\r\n        }\r\n        break;\r\n      case 422:\r\n          this.alertService.showError(error.error.message, 'Error!');\r\n        break;\r\n      case 400:\r\n        this.alertService.showError(error.error.erros[0].message, 'Error');\r\n        handled = true;\r\n        break;\r\n    }\r\n\r\n    return handled;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from 'app/services/login.service';\r\nimport { NotificationService } from 'app/services/toast.service';\r\n\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  constructor(private authenticationService: AuthenticationService, private router: Router, \r\n    private alertService: NotificationService) { }\r\n\r\n  validaUrlAdmin(request: HttpRequest<any>){\r\n    \r\n    if(request.url.includes('api/compras')   || request.url.includes('/api/modeloMensagem') ||\r\n       request.url.includes('api/dashboard') || request.url.includes('/api/compras/status') || \r\n       request.url.includes('/api/sorteios/status') || request.url.includes('/api/sorteios/upload') ||\r\n       request.url.includes('/api/ganhadores') || request.url.includes('/logarComo') ||\r\n       request.url.includes('/api/bancos') || request.url.includes('/imagem') ||\r\n       request.url.includes('/ganhador') ||\r\n       request.url.includes('/api/clientes') ||\r\n       request.url.includes('/api/contas') ||\r\n       request.url.includes('/api/sorteios') ||\r\n       request.url.includes('/api/transacoes/compra') ||\r\n       request.url.includes('/api/transacoes') ||\r\n       request.url.includes('/api/slideshow') ||\r\n       request.url.includes('/minhascompras/checkout') ||\r\n       request.url.includes('/minhascompras')\r\n       ){\r\n      return true;\r\n    }\r\n    \r\n    return false;\r\n  }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const currentUser = this.authenticationService.currentUserValue;\r\n    const currentUserAdmin = this.authenticationService.currentUserAdminValue;\r\n    \r\n    if (currentUser && currentUser.token) {\r\n      request = this.setHeader(request, currentUser.token);\r\n    } \r\n    \r\n    if(currentUserAdmin && currentUserAdmin.token && this.validaUrlAdmin(request)){\r\n      request = this.setHeader(request, currentUserAdmin.token);\r\n    }\r\n\r\n    return next.handle(request).toPromise()\r\n      .catch(err => {\r\n        // onError\r\n        if (err instanceof HttpErrorResponse) {\r\n            if (err.status === 401 || err.status === 203) {\r\n              this.authenticationService.logout();\r\n              this.alertService.showWarning('Realizar novamente o login!','Sessão Expirada')\r\n              document.getElementById('menuMobile').style.setProperty(\"display\", \"none\", \"important\");\r\n              document.getElementById('logoHeader').style.setProperty(\"display\", \"block\", \"important\");\r\n              this.router.navigate(['/principal']);\r\n            }\r\n        }\r\n        return Observable.throw(err);\r\n    }) as any;;\r\n  }\r\n\r\n  private setHeader(request: HttpRequest<any>, token: string): HttpRequest<any> {\r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: `${token}`\r\n      }\r\n    });\r\n\r\n    return request;\r\n  }\r\n}\r\n","import { FormGroup } from \"@angular/forms\";\r\nimport { Endereco } from \"./endereco\";\r\nimport { Usuario } from \"./usuario\";\r\n\r\nexport class Clientes {\r\n  id: number;\r\n  nome: string;\r\n  cpf: string;\r\n  celular: string;\r\n  telefone: string;\r\n  whatsapp: string;\r\n  endereco: Endereco;\r\n  usuario: Usuario;\r\n  foto: string;\r\n\r\n  getCLientByFormGroup(form: FormGroup): Clientes {\r\n    this.nome = form.controls['nome'].value;\r\n    this.cpf = form.controls['cpf'].value;\r\n    this.celular = form.controls['celular'].value;\r\n    this.telefone = form.controls['telefone'].value;\r\n    this.whatsapp = form.controls['whatsapp'].value;\r\n    this.endereco = form.controls['endereco'].value;\r\n    this.usuario = form.controls['usuario'].value;\r\n    this.foto = form.controls['foto'].value;\r\n    this.id = form.controls['id'].value;\r\n\r\n    return this;\r\n  }\r\n\r\n  getCLientPagePrincipalByFormGroup(form: FormGroup): Clientes {\r\n    this.nome = form.controls['nome'].value;\r\n    this.cpf = form.controls['cpf'].value;\r\n    this.celular = form.controls['celular'].value;\r\n    this.usuario = form.controls['usuario'].value;\r\n    this.id = form.controls['id'].value;\r\n\r\n    return this;\r\n  }\r\n\r\n  getFormGroupByCLiente(form: FormGroup): FormGroup {\r\n    form.controls['nome'].setValue(this.nome);\r\n    form.controls['cpf'].setValue(this.cpf);\r\n    form.controls['celular'].setValue(this.celular);\r\n    form.controls['telefone'].setValue(this.telefone);\r\n    form.controls['whatsapp'].setValue(this.whatsapp);\r\n    form.controls['endereco'].setValue(this.endereco);\r\n    form.controls['usuario'].setValue(this.usuario);\r\n    form.controls['foto'].setValue(this.foto);\r\n\r\n    return form;\r\n  }\r\n}\r\n","\r\nexport class Login {\r\n    email: string;\r\n    senha: string;\r\n}","export class Usuario {\r\n  id: number;\r\n  email: string;\r\n  login: string;\r\n  senha: string;\r\n  perfis: string[];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Clientes } from '../models/clientes';\r\nimport { environment } from 'environments/environment';\r\n\r\n\r\nconst baseUrl: string = environment.baseUrl;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ClientesService {\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  fetchClientesByUserId(userId: string): Observable<Clientes[]> {\r\n    let orderBy = 'expectedClosureDate';\r\n    let orderType = 'DESC';\r\n\r\n    let url = `${baseUrl}/clientes/search?salesOwnerId=${userId}&orderBy=${orderBy}&orderType=${orderType}`;\r\n\r\n    return this.http.get<Clientes[]>(url);\r\n  }\r\n\r\n  fetchClientesById(id: string): Observable<Clientes> {\r\n    let url = `${baseUrl}/clientes/${id}`;\r\n\r\n    return this.http.get<Clientes>(url);\r\n  }\r\n\r\n  createClientes(cliente: Clientes): Observable<Clientes> {\r\n    let url = `${baseUrl}/clientes`;\r\n    cliente.id = 0;\r\n    return this.http.post<Clientes>(url, cliente);\r\n  }\r\n\r\n  updateClientes(cliente: Clientes): Observable<Clientes> {\r\n    let url = `${baseUrl}/clientes/${cliente.id}`;\r\n    return this.http.put<Clientes>(url, cliente);\r\n  }\r\n\r\n  list(): Observable<Clientes[]> {\r\n    let url = `${baseUrl}/clientes`;\r\n\r\n    return this.http.get<Clientes[]>(url)\r\n  }\r\n\r\n  exportContact(dataCadastro: string): Observable<any> {\r\n    let url = `${baseUrl}/clientes/${dataCadastro}/export`;\r\n\r\n    let headers = new HttpHeaders();\r\n    headers = headers.set('Accept', 'text/csv');\r\n    return this.http.get(url, { headers: headers, responseType: 'blob' });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ContaBancaria } from '../models/conta-bancaria';\r\nimport { AddContaBancaria } from '../models/add-conta-bancaria';\r\nimport { TipoConta } from '../models/tipo-conta';\r\nimport { Banco } from '../models/banco';\r\nimport { TipoContaBancaria } from '../models/tipo-conta-bancaria';\r\nimport { BancoNacional } from '../models/banco-nacional';\r\nimport { environment } from 'environments/environment';\r\n\r\n\r\nconst baseUrl: string = environment.baseUrl;\r\nconst baseNacionalUrl: string = \"https://olinda.bcb.gov.br/olinda/servico/CCR/versao/v1/odata/InstituicoesFinanceirasAutorizadas?%24format=json&%24filter=Pais%20eq%20'Brasil'\"\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ContaBancariaService {\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createContaBancaria(contaBancaria: AddContaBancaria): Observable<AddContaBancaria> {\r\n    let url = `${baseUrl}/contas`;\r\n    contaBancaria.id = 0;\r\n    return this.http.post<AddContaBancaria>(url, contaBancaria);\r\n  }\r\n\r\n  updateContaBancaria(contaBancaria: AddContaBancaria): Observable<AddContaBancaria> {\r\n    let url = `${baseUrl}/contas/${contaBancaria.id}`;\r\n    return this.http.put<AddContaBancaria>(url, contaBancaria);\r\n  }\r\n\r\n  deleteContaBancaria(id: number): Observable<AddContaBancaria> {\r\n    let url = `${baseUrl}/contas/${id}`;\r\n    return this.http.delete<AddContaBancaria>(url);\r\n  }\r\n\r\n  list(): Observable<ContaBancaria[]> {\r\n    let url = `${baseUrl}/contas`;\r\n\r\n    return this.http.get<ContaBancaria[]>(url)\r\n  }\r\n\r\n  listTipoConta(): Observable<TipoConta[]> {\r\n    let url = `${baseUrl}/contas/tiposContas`;\r\n\r\n    return this.http.get<TipoConta[]>(url)\r\n  }\r\n\r\n  findById(id: number): Observable<AddContaBancaria> {\r\n    let url = `${baseUrl}/contas/${id}`;\r\n\r\n    return this.http.get<AddContaBancaria>(url)\r\n  }\r\n\r\n  listTipoContaBancaria(): Observable<TipoContaBancaria[]> {\r\n    let url = `${baseUrl}/contas/tiposContasBancarias`;\r\n\r\n    return this.http.get<TipoContaBancaria[]>(url)\r\n  }\r\n\r\n  listBancos(): Observable<Banco[]> {\r\n    let url = `${baseUrl}/bancos`;\r\n\r\n    return this.http.get<Banco[]>(url)\r\n  }\r\n\r\n  listBancosNacional(): Observable<BancoNacional[]> {\r\n    let url = `${baseNacionalUrl}`;\r\n\r\n    return this.http.get<BancoNacional[]>(url)\r\n  }\r\n\r\n  \r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Ganhadores } from '../models/ganhadores';\r\nimport { GanhadoresCadastro } from '../models/ganhadores-cadastro';\r\n\r\n\r\nconst baseUrl: string = environment.baseUrl;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GanhadoresService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createGanhadores(ganhador: GanhadoresCadastro): Observable<GanhadoresCadastro> {\r\n    let url = `${baseUrl}/ganhadores`;\r\n    return this.http.post<GanhadoresCadastro>(url, ganhador);\r\n  }\r\n\r\n  updateGanhadores(ganhador: GanhadoresCadastro, id: number): Observable<GanhadoresCadastro> {\r\n    let url = `${baseUrl}/ganhadores/${id}`;\r\n    return this.http.put<GanhadoresCadastro>(url, ganhador);\r\n  }\r\n\r\n  deleteGanhadores(id: number): Observable<Ganhadores> {\r\n    let url = `${baseUrl}/ganhadores/${id}`;\r\n    return this.http.delete<Ganhadores>(url);\r\n  }\r\n\r\n  findGanhadoreById(id: number): Observable<GanhadoresCadastro> {\r\n    let url = `${baseUrl}/ganhadores/${id}`;\r\n    return this.http.get<GanhadoresCadastro>(url);\r\n  }\r\n\r\n  list(): Observable<Ganhadores[]> {\r\n    let url = `${baseUrl}/ganhadores`;\r\n\r\n    return this.http.get<Ganhadores[]>(url)\r\n  }\r\n\r\n  defaultGanhadores(url: string){\r\n    return this.http.get<any>(url);\r\n  }\r\n\r\n}\r\n","import { Usuario } from \"./usuario\";\r\n\r\nexport class ClienteJwt{\r\n    id: string;\r\n    nome: string;\r\n    cpf: string;\r\n    telefone: string;\r\n    celular: string;\r\n    whatsapp: string;\r\n    //endereco: Endereco;\r\n    usuario: Usuario;\r\n    cotas: string[];\r\n    foto: string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from 'environments/environment';\r\nimport { NotificationService } from './toast.service';\r\nimport { Usuario } from 'app/models/usuario';\r\nimport { ClienteJwt } from 'app/models/cliente-jwt';\r\nimport { Login } from 'app/models/login';\r\n\r\n\r\nconst baseUrl: string = environment.baseUrlLogin;\r\nconst baseUrlLoginExists: string = environment.baseUrlLoginExists;\r\n\r\nexport class UserLogin {\r\n  token: string;\r\n  isLogged: boolean;\r\n  cliente: ClienteJwt;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n  private currentUserSubject: BehaviorSubject<UserLogin>;\r\n  private currentUserAdminSubject: BehaviorSubject<UserLogin>;\r\n  currentUser: Observable<UserLogin>;\r\n  currentUserAdmin: Observable<UserLogin>;\r\n\r\n\r\n  constructor(private router: Router, private http: HttpClient, private alertService: NotificationService) {\r\n    this.currentUserSubject = new BehaviorSubject<UserLogin>(\r\n      JSON.parse(localStorage.getItem('currentUser') || '{}')\r\n    );\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n\r\n    this.currentUserAdminSubject = new BehaviorSubject<UserLogin>(\r\n      JSON.parse(localStorage.getItem('currentUserAdmin') || '{}')\r\n    );\r\n    this.currentUserAdmin = this.currentUserAdminSubject.asObservable();\r\n  }\r\n\r\n  get currentUserValue(): UserLogin {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  get currentUserAdminValue(): UserLogin {\r\n    return this.currentUserAdminSubject.value;\r\n  }\r\n\r\n  isLoginExists(login: string) {\r\n    let url = `${baseUrlLoginExists}/auth/${login}/exists`;\r\n    return this.http.get<any>(url);\r\n  }\r\n\r\n  validarSessao() {\r\n    let url = `${baseUrlLoginExists}/auth/validarSessao`;\r\n    return this.http.get<any>(url);\r\n  }\r\n\r\n  authenticate(authenticate: Login) : Observable<boolean> {\r\n    let url = `${baseUrl}`;\r\n    let subject = new Subject<boolean>();\r\n    let isAuthenticated: boolean = false;\r\n    this.http.post<any>(url, authenticate, { observe: 'response' })\r\n      .subscribe(\r\n        response => {\r\n          let userLogin = this.getUserLogin(response);\r\n          localStorage.setItem('currentUser', JSON.stringify(userLogin));\r\n          this.currentUserSubject.next(userLogin);\r\n          this.alertService.showSucess('Usuário logado!', 'Sucesso');\r\n          isAuthenticated = true;\r\n          subject.next(isAuthenticated);\r\n        },\r\n        error => {\r\n          console.log(error)\r\n          this.alertService.showError('Erro ao Logar, verifique as credenciais informada.', 'Error')\r\n          subject.next(isAuthenticated);\r\n        });\r\n\r\n        return subject.asObservable();\r\n\r\n  }\r\n\r\n  authenticateAdmin(authenticate: Login) {\r\n    let url = `${baseUrl}`;\r\n    let subject = new Subject<boolean>();\r\n    let isAuthenticated: boolean = false;\r\n    this.http.post<any>(url, authenticate, { observe: 'response' })\r\n      .subscribe(\r\n        response => {\r\n          let userLogin = this.getUserLogin(response);\r\n\r\n          if (userLogin.cliente.usuario.perfis.includes('ADMIN')) {\r\n            localStorage.setItem('currentUserAdmin', JSON.stringify(userLogin));\r\n            this.currentUserAdminSubject.next(userLogin);\r\n            this.alertService.showSucess('Usuário logado!', 'Sucesso');\r\n            isAuthenticated = true;\r\n            subject.next(isAuthenticated);\r\n          } \r\n        },\r\n        error => {\r\n          console.log(error)\r\n          this.alertService.showError('Erro ao Logar, verifique as credenciais informada.', 'Error')\r\n          subject.next(isAuthenticated);\r\n        });\r\n\r\n        return subject.asObservable();\r\n  }\r\n\r\n  private getUserLogin(response) {\r\n    let userLogin = new UserLogin();\r\n    userLogin.token = response.headers.get('authorization')\r\n    userLogin.isLogged = true;\r\n    userLogin.cliente = new ClienteJwt();\r\n    userLogin.cliente.id = response.body['id'];\r\n    userLogin.cliente.nome = response.body['nome'];\r\n    userLogin.cliente.cpf = response.body['cpf'];\r\n    userLogin.cliente.celular = response.body['celular'];\r\n    userLogin.cliente.usuario = new Usuario();\r\n    userLogin.cliente.usuario.id = response.body['usuario']['id'];\r\n    userLogin.cliente.usuario.email = response.body['usuario']['email'];\r\n    userLogin.cliente.usuario.login = response.body['usuario']['login'];\r\n    userLogin.cliente.usuario.perfis = response.body['usuario']['perfis'];\r\n    userLogin.cliente.cotas = response.body['cotas'];\r\n\r\n    return userLogin;\r\n  }\r\n\r\n  logarComo(login: string){\r\n    let url = `${baseUrlLoginExists}/auth/${login}/logarComo`;\r\n    return this.http.get<any>(url);\r\n  }\r\n\r\n  logout() {\r\n    this.currentUserSubject.next(new UserLogin());\r\n    localStorage.removeItem('currentUser');\r\n  }\r\n\r\n  logoutAdmin() {\r\n    this.currentUserAdminSubject.next(new UserLogin());\r\n    localStorage.removeItem('currentUserAdmin');\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ModeloMensagem } from 'app/models/modelo-mensagem';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\nconst baseUrl: string = environment.baseUrl;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModeloMensagemService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createModeloMensagem(modeloMensagem: ModeloMensagem): Observable<ModeloMensagem> {\r\n    let url = `${baseUrl}/modeloMensagem`;\r\n    modeloMensagem.id = 0;\r\n    return this.http.post<ModeloMensagem>(url, modeloMensagem);\r\n  }\r\n\r\n  updateModeloMensagem(modeloMensagem: ModeloMensagem): Observable<ModeloMensagem> {\r\n    let url = `${baseUrl}/modeloMensagem/${modeloMensagem.id}`;\r\n    return this.http.put<ModeloMensagem>(url, modeloMensagem);\r\n  }\r\n\r\n  deleteModeloMensagem(idDodeloMensagem: number): Observable<ModeloMensagem> {\r\n    let url = `${baseUrl}/modeloMensagem/${idDodeloMensagem}`;\r\n    return this.http.delete<ModeloMensagem>(url);\r\n  }\r\n\r\n  list(): Observable<ModeloMensagem[]> {\r\n    let url = `${baseUrl}/modeloMensagem`;\r\n\r\n    return this.http.get<ModeloMensagem[]>(url)\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { WebSiteSlideShow } from 'app/models/website-slideshow';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable, timer } from 'rxjs';\r\nimport { map, shareReplay, switchMap } from 'rxjs/operators';\r\n\r\n\r\nconst baseUrl: string = environment.baseUrl;\r\nconst CACHE_SIZE = 1;\r\nconst REFRESH_INTERVAL = 600000;\r\n\r\nexport class IFile {\r\n  file: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SlideShowService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  updateSlideShow(slideshow: WebSiteSlideShow, id: number): Observable<WebSiteSlideShow> {\r\n    let url = `${baseUrl}/slideshow/${id}`;\r\n    return this.http.put<WebSiteSlideShow>(url, slideshow);\r\n  }\r\n\r\n  upload(file: string, fileName: string){\r\n    let url = `${baseUrl}/slideshow/upload`;\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'multipart/form-data');\r\n    headers.append('Accept', '*/*');\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file, fileName);\r\n\r\n    return this.http.post<string>(url, formData);\r\n  }\r\n\r\n  findSlideShowById() {\r\n    let url = `${baseUrl}/slideshow`;\r\n    return this.http.get<WebSiteSlideShow[]>(url);\r\n  }\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, timer } from 'rxjs';\r\nimport { shareReplay, switchMap } from 'rxjs/operators';\r\nimport { environment } from 'environments/environment';\r\nimport { Sorteio } from 'app/models/sorteio';\r\nimport { CadastroSorteio } from 'app/models/cadastro-sorteio';\r\nimport { FullSorteio } from 'app/models/full-sorteio';\r\nimport { StatusCompra } from 'app/models/status-compra';\r\n\r\n\r\nconst baseUrl: string = environment.baseUrl;\r\nconst CACHE_SIZE = 10;\r\nconst REFRESH_INTERVAL = 60000;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SorteioService {\r\n  private cache$: Observable<Sorteio[]>;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  get sorteios(){\r\n    if (!this.cache$) {\r\n\r\n      const timer$ = timer(0, REFRESH_INTERVAL);\r\n\r\n      this.cache$ = timer$.pipe(\r\n        switchMap(_ => this.list()),\r\n        shareReplay(CACHE_SIZE)\r\n      );\r\n    }\r\n\r\n    return this.cache$;\r\n  }\r\n\r\n  create(sorteio: CadastroSorteio | FullSorteio): Observable<CadastroSorteio> {\r\n    let url = `${baseUrl}/sorteios`;\r\n    sorteio.id = 0;\r\n\r\n    return this.http.post<CadastroSorteio>(url, sorteio);\r\n  }\r\n\r\n  update(sorteio: CadastroSorteio | FullSorteio): Observable<CadastroSorteio> {\r\n    let url = `${baseUrl}/sorteios/${sorteio.id}`;\r\n    return this.http.put<CadastroSorteio>(url, sorteio);\r\n  }\r\n\r\n  definirGanhador(idSorteio: number, numeroCota: number): Observable<CadastroSorteio> {\r\n    let url = `${baseUrl}/sorteios/${idSorteio}/ganhador?numeroCotaGanhador=${numeroCota}`;\r\n    return this.http.post<CadastroSorteio>(url, {});\r\n  }\r\n\r\n  delete(id: number){\r\n    let url = `${baseUrl}/sorteios/${id}`;\r\n    return this.http.delete<any>(url);\r\n  }\r\n\r\n  downloadPDF(idSorteio: number, nomeSorteio: string): Observable<any> {\r\n    let url = `${baseUrl}/sorteios/${idSorteio}/${nomeSorteio}/export/pdf`;\r\n\r\n    let headers = new HttpHeaders();\r\n    headers = headers.set('Accept', 'application/pdf');\r\n    return this.http.get(url, { headers: headers, responseType: 'blob' });\r\n  }\r\n\r\n  list(): Observable<Sorteio[]> {\r\n    let url = `${baseUrl}/sorteios`;\r\n\r\n    return this.http.get<Sorteio[]>(url)\r\n  }\r\n\r\n  getById(id: number): Observable<FullSorteio> {\r\n    let url = `${baseUrl}/sorteios/${id}`;\r\n\r\n    return this.http.get<FullSorteio>(url)\r\n  }\r\n\r\n  loadImagem(id: number){\r\n    let url = `${baseUrl}/sorteios/${id}/imagem`;\r\n\r\n    return this.http.get<any>(url)\r\n  }\r\n\r\n  listStatus(): Observable<StatusCompra[]> {\r\n    let url = `${baseUrl}/compras/status`;\r\n\r\n    return this.http.get<StatusCompra[]>(url)\r\n  }\r\n\r\n  listSorteioStatus(): Observable<StatusCompra[]> {\r\n    let url = `${baseUrl}/sorteios/status`;\r\n\r\n    return this.http.get<StatusCompra[]>(url)\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\n\r\ndeclare var $: any;\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NotificationService {\r\n\r\n    constructor(private toastr: ToastrService) {}\r\n\r\n    showSucess(message: any, title: any) {\r\n        //this.showNotification(message, 2);\r\n        this.toastr.success(message, 'Sucesso');\r\n    }\r\n\r\n    showError(message: any, title: any) {\r\n        //this.showNotification(message, 4);\r\n        this.toastr.error(message, 'Erro');\r\n    }\r\n\r\n    showInfo(message: any, title: any) {\r\n        //this.showNotification(message,  1);\r\n        this.toastr.info(message, 'Info');\r\n    }\r\n\r\n    showWarning(message: any, title: any) {\r\n        //this.showNotification(message, 3);\r\n        this.toastr.warning(message, 'Alerta');\r\n    }\r\n    \r\n    private showNotification(msg, color){\r\n        const type = ['','info','success','warning','danger'];\r\n  \r\n        $.notify({\r\n            icon: \"notifications\",\r\n            message: msg\r\n  \r\n        },{\r\n            type: type[color],\r\n            timer: 300,\r\n            placement: {\r\n                from: 'top',\r\n                align: 'right'\r\n            },\r\n            template: '<div data-notify=\"container\" class=\"col-xl-4 col-lg-4 col-11 col-sm-4 col-md-4 alert alert-{0} alert-with-icon\" role=\"alert\" data-dismiss=\"alert\">' +\r\n              '<button mat-button  type=\"button\" aria-hidden=\"true\" class=\"close mat-button\" data-notify=\"dismiss\" data-dismiss=\"alert\">  <i class=\"material-icons\">close</i></button>' +\r\n              '<i class=\"material-icons\" data-notify=\"icon\">notifications</i> ' +\r\n              '<span data-notify=\"title\">{1}</span> ' +\r\n              '<span data-notify=\"message\">{2}</span>' +\r\n              '<div class=\"progress\" data-notify=\"progressbar\">' +\r\n                '<div class=\"progress-bar progress-bar-{0}\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: 0%;\"></div>' +\r\n              '</div>' +\r\n              '<a href=\"{3}\" target=\"{4}\" data-notify=\"url\"></a>' +\r\n            '</div>'\r\n        });\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Transacao } from '../models/transacao';\r\nimport { environment } from 'environments/environment';\r\nimport { RelatorioFinanceiro } from '../models/relatorio-financeiro';\r\n\r\n\r\nconst baseUrl: string = environment.baseUrl;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TransacaoService {\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  list(): Observable<Transacao[]> {\r\n    let url = `${baseUrl}/transacoes`;\r\n\r\n    return this.http.get<Transacao[]>(url)\r\n  }\r\n\r\n  getArquivo(id: number): Observable<any> {\r\n    let url = `${baseUrl}/transacoes/${id}/arquivo`;\r\n\r\n    return this.http.get<any>(url)\r\n  }\r\n\r\n  getRelatorioFinanceiro(): Observable<RelatorioFinanceiro[]>{\r\n    let url = `${baseUrl}/transacoes/relatorio-financeiro`;\r\n\r\n    return this.http.get<RelatorioFinanceiro[]>(url)\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'environments/environment';\r\n\r\n\r\nconst baseUrl: string = environment.baseUrl;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UploadService {\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  upload(file: string, fileName: string, servico: string){\r\n    let url = `${baseUrl}/${servico}/upload`;\r\n\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'multipart/form-data');\r\n    headers.append('Accept', '*/*');\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file, fileName);\r\n\r\n    return this.http.post<string>(url, formData);\r\n  }\r\n}\r\n","export const environment = {\r\n  production: true,\r\n  baseUrl: 'https://app.opremiando.com/api',\r\n  baseUrlPix: 'https://app.opremiando.com',\r\n  baseUrlLogin: 'https://app.opremiando.com/login',\r\n  baseUrlLoginExists: 'https://app.opremiando.com',\r\n  baseUserServiceUrl: 'http://localhost',\r\n  baseGeoServiceUrl: 'http://localhost',\r\n  baseCustomerServiceUrl: 'http://localhost',\r\n  baseCrmServiceUrl: 'http://localhost',\r\n  gmailRedirectUrl: 'http://localhost',\r\n  baseEmailServiceUrl: 'http://localhost',\r\n  baseProductServiceUrl: 'http://localhost',\r\n  /* baseUrl: 'http://localhost:8081/api',\r\n  baseUrlPix: 'http://localhost:8081',\r\n  baseUrlLogin: 'http://localhost:8081/login',\r\n  baseUrlLoginExists: 'http://localhost:8081',\r\n  baseUserServiceUrl: 'http://localhost',\r\n  baseGeoServiceUrl: 'http://localhost',\r\n  baseCustomerServiceUrl: 'http://localhost',\r\n  baseCrmServiceUrl: 'http://localhost',\r\n  gmailRedirectUrl: 'http://localhost',\r\n  baseEmailServiceUrl: 'http://localhost',\r\n  baseProductServiceUrl: 'http://localhost', */\r\n};\r\n","<div class=\"logo\">\r\n    <a href=\"https://lojapremiando.com.br/#\" class=\"simple-text\">\r\n        <div class=\"logo-img\">\r\n            <img src=\"/favicon.ico\"/>\r\n        </div>\r\n        Premiando\r\n    </a>\r\n</div>\r\n<div class=\"sidebar-wrapper\">\r\n  <div *ngIf=\"isMobileMenu()\">\r\n    <form class=\"navbar-form\">\r\n      <span class=\"bmd-form-group\">\r\n        <div class=\"input-group no-border\">\r\n          <input type=\"text\" value=\"\" class=\"form-control\" placeholder=\"Search...\">\r\n          <button mat-raised-button type=\"submit\" class=\"btn btn-white btn-round btn-just-icon\">\r\n            <i class=\"material-icons\">search</i>\r\n            <div class=\"ripple-container\"></div>\r\n          </button>\r\n        </div>\r\n      </span>\r\n    </form>\r\n    <ul class=\"nav navbar-nav nav-mobile-menu\">\r\n        <li class=\"nav-item\" (click)=\"logout()\">\r\n            <a class=\"nav-link\" href=\"javascript:void(0)\">\r\n                <i class=\"material-icons\">logout</i>\r\n                <p>\r\n                    <span class=\"d-lg-none d-md-block\">Sair</span>\r\n                </p>\r\n            </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"javascript:void(0)\">\r\n                <i class=\"material-icons\">dashboard</i>\r\n                <p>\r\n                    <span class=\"d-lg-none d-md-block\">Stats</span>\r\n                </p>\r\n            </a>\r\n        </li>\r\n        <li class=\"nav-item dropdown\">\r\n            <a class=\"nav-link\" href=\"javascript:void(0)\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                <i class=\"material-icons\">notifications</i>\r\n                <span class=\"notification\">5</span>\r\n                <p>\r\n                    <span class=\"d-lg-none d-md-block\">Some Actions</span>\r\n                </p>\r\n            </a>\r\n            <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                <a class=\"dropdown-item\" href=\"#\">Mike John responded to your email</a>\r\n                <a class=\"dropdown-item\" href=\"#\">You have 5 new tasks</a>\r\n                <a class=\"dropdown-item\" href=\"#\">You're now friend with Andrew</a>\r\n                <a class=\"dropdown-item\" href=\"#\">Another Notification</a>\r\n                <a class=\"dropdown-item\" href=\"#\">Another One</a>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n  </div>\r\n    <ul class=\"nav\">\r\n        <li routerLinkActive=\"active\" *ngFor=\"let menuItem of menuItems\" class=\"{{menuItem.class}} nav-item\">\r\n            <a class=\"nav-link\" [routerLink]=\"[menuItem.path]\" (click)=\"updateCollapsed(menuItem)\">\r\n                <i class=\"material-icons\">{{menuItem.icon}}</i>\r\n                <p>{{menuItem.title}}</p>\r\n            </a>\r\n            <ul class=\"collapse nav show flex-column ms-1\" [ngClass]=\"(menuItem.isCollapsed && menuItem.subMenu.length > 0) ? '' : 'd-none'\" id=\"submenu1\" data-bs-parent=\"#menu\">\r\n                <li class=\"w-100 ml-8\" *ngFor=\"let subMenu of menuItem.subMenu\">\r\n                    <a class=\"nav-link px-0\" [routerLink]=\"[subMenu.path]\"> \r\n                        <span class=\"d-sm-inline\" style=\"margin-left: 40px;cursor: pointer;\">{{subMenu.title}}</span>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </li>\r\n    </ul>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from 'app/services/login.service';\r\nimport { NotificationService } from 'app/services/toast.service';\r\n\r\ndeclare const $: any;\r\ndeclare interface RouteSubMenuInfo {\r\n  path: string;\r\n  title: string;\r\n  icon: string;\r\n}\r\ndeclare interface RouteInfo {\r\n    path: string;\r\n    title: string;\r\n    icon: string;\r\n    class: string;\r\n    subMenu: RouteSubMenuInfo[];\r\n    isCollapsed: boolean;\r\n}\r\nexport const ROUTES: RouteInfo[] = [\r\n    { path: 'admin/dashboard', title: 'Dashboard',  icon: 'dashboard', class: '', subMenu: [], isCollapsed: false },\r\n    { path: 'admin/clientes', title: 'Clientes',  icon:'supervisor_account', class: '', subMenu: [], isCollapsed: false },\r\n    { path: 'admin/compras', title: 'Compras',  icon:'shopping_cart', class: '', subMenu: [], isCollapsed: false },\r\n    // { path: 'admin/icons', title: 'Financeiro',  icon:'trending_up', class: '' },\r\n    { path: 'admin/sorteios', title: 'Sorteios',  icon:'grade', class: '', subMenu: [], isCollapsed: false },\r\n    { path: 'admin/ganhadores', title: 'Ganhadores',  icon:'emoji_events', class: '', subMenu: [], isCollapsed: false },\r\n    { path: 'admin/financeiro', title: 'Financeiro',  icon:'account_balance', class: '', subMenu: [\r\n    { path: 'admin/relatorio-financeiro', title: 'Relatórios', icon:''}], isCollapsed: false },\r\n    { path: 'admin/banner', title: 'Banner',  icon:'settings', class: '' , subMenu: [], isCollapsed: false},\r\n    { path: 'admin/msg-whatts', title: 'Mensg. WhatsApp',  icon:'whatsapp', class: '' , subMenu: [], isCollapsed: false},\r\n    // { path: 'admin/notifications', title: 'Ganhadores',  icon:'emoji_events', class: '' },\r\n    // { path: 'admin/upgrade', title: 'Campanha SMS',  icon:'question_answer', class: '' },\r\n    // { path: 'admin/upgrade', title: 'Website',  icon:'language', class: '' },\r\n    // { path: 'admin/upgrade', title: 'Configurações',  icon:'settings', class: '' },\r\n];\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  menuItems: any[];\r\n\r\n  constructor(private router: Router,private authenticationService: AuthenticationService, private alertService: NotificationService) { }\r\n\r\n  ngOnInit() {\r\n    this.menuItems = ROUTES.filter(menuItem => menuItem);\r\n  }\r\n  isMobileMenu() {\r\n      if ($(window).width() > 991) {\r\n          return false;\r\n      }\r\n      return true;\r\n  };\r\n\r\n  logout() {\r\n    this.authenticationService.logoutAdmin();\r\n    this.alertService.showWarning('Logout Realizado Com Sucesso','')\r\n    this.router.navigate(['login-admin']);\r\n  }\r\n\r\n  updateCollapsed(menu: RouteInfo){\r\n    menu.isCollapsed = !menu.isCollapsed;\r\n  }\r\n}\r\n","import { Component, OnInit, ElementRef } from '@angular/core';\r\nimport { ROUTES } from '../sidebar/sidebar.component';\r\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from 'app/services/login.service';\r\nimport { NotificationService } from 'app/services/toast.service';\r\nimport { Login } from 'app/models/login';\r\nimport { NotificationsComponent } from 'app/notifications/notifications.component';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n    private listTitles: any[];\r\n    location: Location;\r\n      mobile_menu_visible: any = 0;\r\n    private toggleButton: any;\r\n    private sidebarVisible: boolean;\r\n\r\n    constructor(location: Location,  private element: ElementRef, private router: Router,\r\n        private authenticationService: AuthenticationService, private alertService: NotificationService) {\r\n      this.location = location;\r\n          this.sidebarVisible = false;\r\n    }\r\n\r\n    ngOnInit(){\r\n      this.listTitles = ROUTES.filter(listTitle => listTitle);\r\n      const navbar: HTMLElement = this.element.nativeElement;\r\n      this.toggleButton = navbar.getElementsByClassName('navbar-toggler')[0];\r\n      this.router.events.subscribe((event) => {\r\n        this.sidebarClose();\r\n         var $layer: any = document.getElementsByClassName('close-layer')[0];\r\n         if ($layer) {\r\n           $layer.remove();\r\n           this.mobile_menu_visible = 0;\r\n         }\r\n     });\r\n    }\r\n\r\n    sidebarOpen() {\r\n        const toggleButton = this.toggleButton;\r\n        const body = document.getElementsByTagName('body')[0];\r\n        setTimeout(function(){\r\n            toggleButton.classList.add('toggled');\r\n        }, 500);\r\n\r\n        body.classList.add('nav-open');\r\n\r\n        this.sidebarVisible = true;\r\n    };\r\n    sidebarClose() {\r\n        const body = document.getElementsByTagName('body')[0];\r\n        this.toggleButton.classList.remove('toggled');\r\n        this.sidebarVisible = false;\r\n        body.classList.remove('nav-open');\r\n    };\r\n    sidebarToggle() {\r\n        // const toggleButton = this.toggleButton;\r\n        // const body = document.getElementsByTagName('body')[0];\r\n        var $toggle = document.getElementsByClassName('navbar-toggler')[0];\r\n\r\n        if (this.sidebarVisible === false) {\r\n            this.sidebarOpen();\r\n        } else {\r\n            this.sidebarClose();\r\n        }\r\n        const body = document.getElementsByTagName('body')[0];\r\n\r\n        if (this.mobile_menu_visible == 1) {\r\n            // $('html').removeClass('nav-open');\r\n            body.classList.remove('nav-open');\r\n            if ($layer) {\r\n                $layer.remove();\r\n            }\r\n            setTimeout(function() {\r\n                $toggle.classList.remove('toggled');\r\n            }, 400);\r\n\r\n            this.mobile_menu_visible = 0;\r\n        } else {\r\n            setTimeout(function() {\r\n                $toggle.classList.add('toggled');\r\n            }, 430);\r\n\r\n            var $layer = document.createElement('div');\r\n            $layer.setAttribute('class', 'close-layer');\r\n\r\n\r\n            if (body.querySelectorAll('.main-panel')) {\r\n                document.getElementsByClassName('main-panel')[0].appendChild($layer);\r\n            }else if (body.classList.contains('off-canvas-sidebar')) {\r\n                document.getElementsByClassName('wrapper-full-page')[0].appendChild($layer);\r\n            }\r\n\r\n            setTimeout(function() {\r\n                $layer.classList.add('visible');\r\n            }, 100);\r\n\r\n            $layer.onclick = function() { //asign a function\r\n              body.classList.remove('nav-open');\r\n              this.mobile_menu_visible = 0;\r\n              $layer.classList.remove('visible');\r\n              setTimeout(function() {\r\n                  $layer.remove();\r\n                  $toggle.classList.remove('toggled');\r\n              }, 400);\r\n            }.bind(this);\r\n\r\n            body.classList.add('nav-open');\r\n            this.mobile_menu_visible = 1;\r\n\r\n        }\r\n    };\r\n\r\n    getTitle(){\r\n      var titlee = this.location.prepareExternalUrl(this.location.path());\r\n      if(titlee.charAt(0) === '#'){\r\n          titlee = titlee.slice( 1 ).split('/')[2].toUpperCase();\r\n      }\r\n      for(var item = 0; item < this.listTitles.length; item++){\r\n          if(this.listTitles[item].path === titlee){\r\n              return this.listTitles[item].title;\r\n          }\r\n      }\r\n      return titlee;\r\n    }\r\n\r\n    logout() {\r\n        this.authenticationService.logoutAdmin();\r\n        this.alertService.showWarning('Logout Realizado Com Sucesso','')\r\n        this.router.navigate(['login-admin']);\r\n    }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-transparent  navbar-absolute fixed-top\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"navbar-wrapper\">\r\n          <a class=\"navbar-brand\" href=\"javascript:void(0)\">{{getTitle()}}</a>\r\n        </div>\r\n        <button mat-raised-button class=\"navbar-toggler\" type=\"button\" (click)=\"sidebarToggle()\">\r\n            <span class=\"sr-only\">Toggle navigation</span>\r\n            <span class=\"navbar-toggler-icon icon-bar\"></span>\r\n            <span class=\"navbar-toggler-icon icon-bar\"></span>\r\n            <span class=\"navbar-toggler-icon icon-bar\"></span>\r\n        </button>\r\n        <div class=\"collapse navbar-collapse justify-content-end\" id=\"navigation\">\r\n            <form class=\"navbar-form\">\r\n                <div class=\"input-group no-border\">\r\n                    <input type=\"text\" value=\"\" class=\"form-control\" placeholder=\"Search...\">\r\n                    <button mat-raised-button type=\"submit\" class=\"btn btn-white btn-round btn-just-icon\">\r\n                        <i class=\"material-icons\">search</i>\r\n                        <div class=\"ripple-container\"></div>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            <ul class=\"navbar-nav\">\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"javascript:void(0)\">\r\n                        <i class=\"material-icons\">dashboard</i>\r\n                        <p>\r\n                            <span class=\"d-lg-none d-md-block\">Stats</span>\r\n                        </p>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item dropdown\">\r\n                    <a class=\"nav-link\" href=\"javascript:void(0)\" id=\"navbarDropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        <i class=\"material-icons\">notifications</i>\r\n                        <span class=\"notification\">5</span>\r\n                        <p>\r\n                            <span class=\"d-lg-none d-md-block\">Some Actions</span>\r\n                        </p>\r\n                    </a>\r\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                        <a class=\"dropdown-item\" href=\"javascript:void(0)\">Mike John responded to your email</a>\r\n                        <a class=\"dropdown-item\" href=\"javascript:void(0)\">You have 5 new tasks</a>\r\n                        <a class=\"dropdown-item\" href=\"javascript:void(0)\">You're now friend with Andrew</a>\r\n                        <a class=\"dropdown-item\" href=\"javascript:void(0)\">Another Notification</a>\r\n                        <a class=\"dropdown-item\" href=\"javascript:void(0)\">Another One</a>\r\n                    </div>\r\n                </li>\r\n                <li class=\"nav-item\" (click)=\"logout()\">\r\n                    <a class=\"nav-link\" href=\"javascript:void(0)\" >\r\n                        <i class=\"material-icons\">logout</i>\r\n                        <p>\r\n                            <span class=\"d-lg-none d-md-block\">Sair</span>\r\n                        </p>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  test : Date = new Date();\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<footer class=\"footer \">\r\n    <div class=\"container-fluid\">\r\n        <nav class=\"pull-left\">\r\n           <!--  <ul>\r\n                <li>\r\n                    <a href=\"https://www.creative-tim.com\">\r\n                        Creative Tim\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"https://creative-tim.com/about-us\">\r\n                        About Us\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"http://blog.creative-tim.com\">\r\n                        Blog\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"https://www.creative-tim.com/license\">\r\n                        Licenses\r\n                    </a>\r\n                </li>\r\n            </ul> -->\r\n        </nav>\r\n        <div class=\"copyright pull-right\">\r\n            &copy;\r\n            {{test | date: 'yyyy'}},\r\n            <a href=\"https://lojapremiando.com.br\" target=\"_blank\">Premiando</a> for a better web.\r\n        </div>\r\n    </div>\r\n</footer>\r\n","<div class=\"wrapper\">\r\n    <div class=\"sidebar\" data-color=\"danger\" data-background-color=\"white\" data-image=\"./assets/img/sidebar-1.jpg\">\r\n        <app-sidebar></app-sidebar>\r\n        <div class=\"sidebar-background\" style=\"background-image: url(./assets/img/sidebar-4.jpg)\"></div>\r\n    </div>\r\n    <div class=\"main-panel\">\r\n        <app-navbar></app-navbar>\r\n        <router-outlet></router-outlet>\r\n        <div *ngIf=\"isMaps('maps')\">\r\n            <app-footer></app-footer>\r\n        </div>\r\n    </div>\r\n    <!-- <div class=\"fixed-plugin\">\r\n        <div class=\"dropdown show-dropdown show\">\r\n            <a href=\"#\" data-toggle=\"dropdown\" aria-expanded=\"true\">\r\n                <i class=\"fa fa-cog fa-2x\"> </i>\r\n            </a>\r\n            <ul class=\"dropdown-menu show\" x-placement=\"bottom-start\" style=\"position: absolute; top: 41px; left: -231px; will-change: top, left;\">\r\n                <li class=\"header-title\"> Sidebar Filters</li>\r\n                <li class=\"adjustments-line\">\r\n                    <a href=\"javascript:void(0)\" class=\"switch-trigger active-color\">\r\n                        <div class=\"ml-auto mr-auto\">\r\n                            <span class=\"badge filter badge-purple\" data-color=\"purple\"></span>\r\n                            <span class=\"badge filter badge-azure\" data-color=\"azure\"></span>\r\n                            <span class=\"badge filter badge-green\" data-color=\"green\"></span>\r\n                            <span class=\"badge filter badge-orange\" data-color=\"orange\"></span>\r\n                            <span class=\"badge filter badge-danger active\" data-color=\"danger\"></span>\r\n                        </div>\r\n                        <div class=\"clearfix\"></div>\r\n                    <div class=\"ripple-container\"></div></a>\r\n                </li>\r\n                <li class=\"header-title\">Images</li>\r\n                <li>\r\n                    <a class=\"img-holder switch-trigger\" href=\"javascript:void(0)\">\r\n                        <img src=\"./assets/img/sidebar-1.jpg\" alt=\"\">\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a class=\"img-holder switch-trigger\" href=\"javascript:void(0)\">\r\n                        <img src=\"./assets/img/sidebar-2.jpg\" alt=\"\">\r\n                    <div class=\"ripple-container\"></div></a>\r\n                </li>\r\n                <li>\r\n                    <a class=\"img-holder switch-trigger\" href=\"javascript:void(0)\">\r\n                        <img src=\"./assets/img/sidebar-3.jpg\" alt=\"\">\r\n                    </a>\r\n                </li>\r\n                <li class=\"active\">\r\n                    <a class=\"img-holder switch-trigger\" href=\"javascript:void(0)\">\r\n                        <img src=\"./assets/img/sidebar-4.jpg\" alt=\"\">\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div> -->\r\n<!-- Buy-Modal-angular -->\r\n<div class=\"modal modal-angular fade\" id=\"buy\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n<div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n        <div class=\"modal-body text-center\">\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\r\n            <h4 class=\"margin-top\">\r\n                Free Version\r\n            </h4>\r\n            <div class=\"separator\"></div>\r\n            <a href=\"https://www.creative-tim.com/product/material-dashboard\" class=\"modal-button\" target=\"_blank\">\r\n                <div class=\"wrapper-card\">\r\n                    <div class=\"image-container\">\r\n                        <img src=\"./assets/img/html.png\" alt=\"unloaded\">\r\n                    </div>\r\n                    Html5\r\n                    <div class=\"separator\"></div>\r\n                    <div class=\"product-type\">\r\n                        FREE\r\n                    </div>\r\n                </div>\r\n            </a>\r\n            <a href=\"https://www.creative-tim.com/product/material-dashboard-angular2\" class=\"modal-button\" target=\"_blank\">\r\n                <div class=\"wrapper-card\">\r\n                    <div class=\"image-container image-angular-cli\">\r\n                        <img src=\"./assets/img/angular.png\" alt=\"unloaded\">\r\n                    </div>\r\n                    Angular\r\n                    <div class=\"separator\"></div>\r\n                    <div class=\"product-type\">\r\n                        FREE\r\n                    </div>\r\n                </div>\r\n            </a>\r\n            <h4>\r\n                PRO Version\r\n            </h4>\r\n            <div class=\"separator\"></div>\r\n            <a href=\"https://www.creative-tim.com/product/material-dashboard-pro\" class=\"modal-button\" target=\"_blank\">\r\n                <div class=\"image-container\">\r\n                    <img src=\"./assets/img/html.png\" alt=\"unloaded\">\r\n                </div>\r\n                Html5\r\n                <div class=\"separator\"></div>\r\n                <div class=\"price\">\r\n                    from\r\n                    <span>\r\n                        49\r\n                        <i class=\"fa fa-usd\" aria-hidden=\"true\"></i>\r\n                    </span>\r\n                </div>\r\n            </a>\r\n            <a href=\"https://www.creative-tim.com/product/material-dashboard-pro-angular2\" class=\"modal-button\" target=\"_blank\">\r\n                <div class=\"image-container image-angular-cli\">\r\n                    <img src=\"./assets/img/angular.png\" alt=\"unloaded\">\r\n                </div>\r\n                Angular\r\n                <div class=\"separator\"></div>\r\n                <div class=\"price\">\r\n                    from\r\n                    <span>\r\n                        59\r\n                        <i class=\"fa fa-usd\" aria-hidden=\"true\"></i>\r\n                    </span>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n</div>\r\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { Location, LocationStrategy, PathLocationStrategy, PopStateEvent } from '@angular/common';\r\nimport 'rxjs/add/operator/filter';\r\nimport { NavbarComponent } from '../../components/navbar/navbar.component';\r\nimport { Router, NavigationEnd, NavigationStart } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\nimport * as $ from \"jquery\";\r\nimport { AuthenticationService } from 'app/services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-layout',\r\n  templateUrl: './admin-layout.component.html',\r\n  styleUrls: ['./admin-layout.component.scss']\r\n})\r\nexport class AdminLayoutComponent implements OnInit {\r\n  private _router: Subscription;\r\n  private lastPoppedUrl: string;\r\n  private yScrollStack: number[] = [];\r\n\r\n  constructor( public location: Location, private router: Router, private authenticationService: AuthenticationService) {}\r\n\r\n  ngOnInit() {\r\n      let currentUser = this.authenticationService.currentUserAdminValue;\r\n      if(!currentUser.isLogged){\r\n        this.router.navigate(['login-admin']);\r\n      } else {\r\n        this.router.navigate(['admin/dashboard']);\r\n      }\r\n\r\n      const isWindows = navigator.platform.indexOf('Win') > -1 ? true : false;\r\n\r\n      if (isWindows && !document.getElementsByTagName('body')[0].classList.contains('sidebar-mini')) {\r\n          // if we are on windows OS we activate the perfectScrollbar function\r\n\r\n          document.getElementsByTagName('body')[0].classList.add('perfect-scrollbar-on');\r\n      } else {\r\n          document.getElementsByTagName('body')[0].classList.remove('perfect-scrollbar-off');\r\n      }\r\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\r\n      const elemSidebar = <HTMLElement>document.querySelector('.sidebar .sidebar-wrapper');\r\n\r\n      this.location.subscribe((ev:PopStateEvent) => {\r\n          this.lastPoppedUrl = ev.url;\r\n      });\r\n       this.router.events.subscribe((event:any) => {\r\n          if (event instanceof NavigationStart) {\r\n             if (event.url != this.lastPoppedUrl)\r\n                 this.yScrollStack.push(window.scrollY);\r\n         } else if (event instanceof NavigationEnd) {\r\n             if (event.url == this.lastPoppedUrl) {\r\n                 this.lastPoppedUrl = undefined;\r\n                 window.scrollTo(0, this.yScrollStack.pop());\r\n             } else\r\n                 window.scrollTo(0, 0);\r\n         }\r\n      });\r\n      this._router = this.router.events.filter(event => event instanceof NavigationEnd).subscribe((event: NavigationEnd) => {\r\n           elemMainPanel.scrollTop = 0;\r\n           elemSidebar.scrollTop = 0;\r\n      });\r\n      if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n          let ps = new PerfectScrollbar(elemMainPanel);\r\n          ps = new PerfectScrollbar(elemSidebar);\r\n      }\r\n\r\n      const window_width = $(window).width();\r\n      let $sidebar = $('.sidebar');\r\n      let $sidebar_responsive = $('body > .navbar-collapse');\r\n      let $sidebar_img_container = $sidebar.find('.sidebar-background');\r\n\r\n\r\n      if(window_width > 767){\r\n          if($('.fixed-plugin .dropdown').hasClass('show-dropdown')){\r\n              $('.fixed-plugin .dropdown').addClass('open');\r\n          }\r\n\r\n      }\r\n\r\n      $('.fixed-plugin a').click(function(event){\r\n        // Alex if we click on switch, stop propagation of the event, so the dropdown will not be hide, otherwise we set the  section active\r\n          if($(this).hasClass('switch-trigger')){\r\n              if(event.stopPropagation){\r\n                  event.stopPropagation();\r\n              }\r\n              else if(window.event){\r\n                 window.event.cancelBubble = true;\r\n              }\r\n          }\r\n      });\r\n\r\n      $('.fixed-plugin .badge').click(function(){\r\n          let $full_page_background = $('.full-page-background');\r\n\r\n\r\n          $(this).siblings().removeClass('active');\r\n          $(this).addClass('active');\r\n\r\n          var new_color = $(this).data('color');\r\n\r\n          if($sidebar.length !== 0){\r\n              $sidebar.attr('data-color', new_color);\r\n          }\r\n\r\n          if($sidebar_responsive.length != 0){\r\n              $sidebar_responsive.attr('data-color',new_color);\r\n          }\r\n      });\r\n\r\n      $('.fixed-plugin .img-holder').click(function(){\r\n          let $full_page_background = $('.full-page-background');\r\n\r\n          $(this).parent('li').siblings().removeClass('active');\r\n          $(this).parent('li').addClass('active');\r\n\r\n\r\n          var new_image = $(this).find(\"img\").attr('src');\r\n\r\n          if($sidebar_img_container.length !=0 ){\r\n              $sidebar_img_container.fadeOut('fast', function(){\r\n                 $sidebar_img_container.css('background-image','url(\"' + new_image + '\")');\r\n                 $sidebar_img_container.fadeIn('fast');\r\n              });\r\n          }\r\n\r\n          if($full_page_background.length != 0){\r\n\r\n              $full_page_background.fadeOut('fast', function(){\r\n                 $full_page_background.css('background-image','url(\"' + new_image + '\")');\r\n                 $full_page_background.fadeIn('fast');\r\n              });\r\n          }\r\n\r\n          if($sidebar_responsive.length != 0){\r\n              $sidebar_responsive.css('background-image','url(\"' + new_image + '\")');\r\n          }\r\n      });\r\n  }\r\n  ngAfterViewInit() {\r\n      this.runOnRouteChange();\r\n  }\r\n  isMaps(path){\r\n      var titlee = this.location.prepareExternalUrl(this.location.path());\r\n      titlee = titlee.slice( 1 );\r\n      if(path == titlee){\r\n          return false;\r\n      }\r\n      else {\r\n          return true;\r\n      }\r\n  }\r\n  runOnRouteChange(): void {\r\n    if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n      const elemMainPanel = <HTMLElement>document.querySelector('.main-panel');\r\n      const ps = new PerfectScrollbar(elemMainPanel);\r\n      ps.update();\r\n    }\r\n  }\r\n  isMac(): boolean {\r\n      let bool = false;\r\n      if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\r\n          bool = true;\r\n      }\r\n      return bool;\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Login } from 'app/models/login';\r\nimport { AuthenticationService } from 'app/services/login.service';\r\nimport { NotificationService } from 'app/services/toast.service';\r\n\r\n@Component({\r\n  selector: 'login-admin',\r\n  templateUrl: './login-admin.component.html',\r\n  styleUrls: ['./login-admin.component.css']\r\n})\r\nexport class LoginAdminComponent implements OnInit {\r\n\r\n  @Input() public loginCliente: Login;\r\n\r\n  constructor(private authenticationService: AuthenticationService,private router: Router, private route: ActivatedRoute\r\n    , private alertService: NotificationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginCliente = new Login();\r\n  }\r\n\r\n  login() {\r\n    this.authenticationService.authenticateAdmin(this.loginCliente).subscribe(\r\n      (result) => {\r\n        if (result) {\r\n          this.router.navigate(['admin/dashboard']);\r\n        } else {\r\n          this.alertService.showError('Usuário e Senha inválidos!','Erros');\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n\t<title>Login Page</title>\r\n    <!--Fontawesome CDN-->\r\n\t<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\" integrity=\"sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU\" crossorigin=\"anonymous\">\r\n\r\n</head>\r\n<body>\r\n<div class=\"container\">\r\n\t<div class=\"d-flex justify-content-center h-100\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<div class=\"card-header\">\r\n\t\t\t\t<h3>Entrar</h3>\r\n\t\t\t\t<div class=\"d-flex justify-content-end social_icon\">\r\n\t\t\t\t\t<span><i class=\"fab fa-facebook-square\"></i></span>\r\n\t\t\t\t\t<span><i class=\"fab fa-google-plus-square\"></i></span>\r\n\t\t\t\t\t<span><i class=\"fab fa-twitter-square\"></i></span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"card-body\">\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<div class=\"input-group form-group\">\r\n\t\t\t\t\t\t<div class=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-user\"></i></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" placeholder=\"username\" style=\"margin-left: 10px;color: white;\" [(ngModel)]=\"loginCliente.email\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"input-group form-group\">\r\n\t\t\t\t\t\t<div class=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-text\"><i class=\"fas fa-key\"></i></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input type=\"password\" class=\"form-control\" placeholder=\"password\" style=\"margin-left: 10px;color: white;\" [(ngModel)]=\"loginCliente.senha\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"row align-items-center remember\">\r\n\t\t\t\t\t\t<input type=\"checkbox\">Lembrar\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t<input type=\"submit\" value=\"Login\" class=\"btn float-right login_btn\" (click)=\"login()\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t<!-- <div class=\"card-footer\">\r\n\t\t\t\t<div class=\"d-flex justify-content-center links\">\r\n\t\t\t\t\tDon't have an account?<a href=\"#\">Sign Up</a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"d-flex justify-content-center\">\r\n\t\t\t\t\t<a href=\"#\">Forgot your password?</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div> -->\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n</body>\r\n</html>","\r\nexport class Login {\r\n    email: string;\r\n    senha: string;\r\n}","\r\n<div class=\"loginBox\"> \r\n  <img class=\"user\" src=\"https://i.ibb.co/yVGxFPR/2.png\" height=\"100px\" width=\"100px\">\r\n  <h3 *ngIf=\"!isSaveNewUser()\">Acessar</h3>\r\n  <h3 *ngIf=\"isSaveNewUser()\" >DADOS DO PARTICIPANTE</h3>\r\n  <form action=\"login.php\" method=\"post\">\r\n      <div class=\"inputBox\" *ngIf=\"!isSaveNewUser()\"> \r\n        <input id=\"uname\" type=\"text\"     name=\"CPF ou E-mail\" placeholder=\"CPF ou E-mail\" *ngIf=\"!isSaveNewUser()\"  [(ngModel)]=\"loginCliente.email\"> \r\n        <input id=\"pass\"  type=\"password\" name=\"senha\"         placeholder=\"senha\"         *ngIf=\"isExistentLogin()\" [(ngModel)]=\"loginCliente.senha\"> \r\n      </div> \r\n      <div class=\"inputBox inputBox-cadastro\" *ngIf=\"isSaveNewUser()\"> \r\n        <input id=\"nomeCompleto\" type=\"text\"     name=\"nomeCompleto\" placeholder=\"Nome Completo\"  [(ngModel)]=\"cliente.nome\"> \r\n        <input id=\"cpf\"          type=\"text\"     name=\"cpf\"          placeholder=\"cpf\"            [(ngModel)]=\"cliente.cpf\" mask=\"000.000.000-00\"> \r\n        <input id=\"email\"        type=\"text\"     name=\"email\"        placeholder=\"email\"          [(ngModel)]=\"cliente.usuario.email\"> \r\n        <input id=\"celular\"      type=\"text\"     name=\"celular\"      placeholder=\"celular\"        [(ngModel)]=\"cliente.celular\" mask=\"(00)000000000\"> \r\n        <input id=\"senha\"        type=\"password\" name=\"Senha\"        placeholder=\"Senha\"          [(ngModel)]=\"cliente.usuario.senha\"> \r\n      </div> \r\n      <input type=\"submit\" name=\"\" value=\"OK\"        *ngIf=\"!isExistentLogin() && !isSaveNewUser()\" (click)=\"isLoginExists()\">\r\n      <input type=\"submit\" name=\"\" value=\"Login\"     *ngIf=\"isExistentLogin()\"  (click)=\"login()\">\r\n      <input type=\"submit\" name=\"\" value=\"Cadastrar\" *ngIf=\"isSaveNewUser()\"    (click)=\"saveOrUpdate()\">\r\n  </form> <a href=\"#\">Recuperar Senha<br> </a>\r\n  <div class=\"text-center\">\r\n      <p style=\"color: #59238F;\">Login</p>\r\n  </div>\r\n</div>","import { Component, Inject, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Clientes } from 'app/models/clientes';\r\nimport { Usuario } from 'app/models/usuario';\r\nimport { ClientesService } from 'app/services/clientes.service';\r\nimport { AuthenticationService } from 'app/services/login.service';\r\nimport { NotificationService } from 'app/services/toast.service';\r\nimport { Login } from '../models/login';\r\n\r\n@Component({\r\n  selector: 'app-login-regyster',\r\n  templateUrl: './login-regyster.component.html',\r\n  styleUrls: ['./login-regyster.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class LoginRegysterComponent implements OnInit {\r\n\r\n  @Input() public cliente: Clientes;\r\n  @Input() public loginCliente: Login;\r\n  private isUserExists: boolean;\r\n  private isPermiteCadastrar: boolean;\r\n  @Input() public isTelaCheckout: boolean = false;\r\n\r\n  constructor(public dialogRef: MatDialogRef<LoginRegysterComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Clientes,\r\n    private clientesService: ClientesService,\r\n    private authenticationService: AuthenticationService,\r\n    private alertService: NotificationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginCliente = new Login();\r\n    this.cliente = new Clientes();\r\n    this.cliente.usuario = new Usuario();\r\n    this.authenticationService.logout();\r\n  }\r\n\r\n  saveOrUpdate() {\r\n    this.cliente.usuario.login = this.cliente.cpf;\r\n    this.cliente.whatsapp = this.cliente.celular;\r\n    this.salvar();\r\n  }\r\n\r\n  salvar() {\r\n    this.clientesService.createClientes(this.cliente).toPromise()\r\n      .then(result => {\r\n        if(result){\r\n          this.alertService.showSucess('Cliente cadastrado com sucesso!', 'Sucesso');\r\n          this.loginCliente = new Login();\r\n          this.loginCliente.email = this.cliente.usuario.email;\r\n          this.loginCliente.senha = this.cliente.usuario.senha;\r\n          this.cliente = new Clientes();\r\n          this.login();\r\n          if(this.isTelaCheckout){\r\n            document.getElementById('bt-finalizar-checkout').click();\r\n          }\r\n        } else {\r\n          this.alertService.showError('verifique os campos preenchidos.', 'Erro ao cadastrar')\r\n        }\r\n        \r\n      })\r\n      .catch(error => {\r\n        this.alertService.showError('Erro ao cadastrar o cliente! verifique os campos preenchidos.', 'Error')\r\n      })\r\n  }\r\n\r\n  login() {\r\n    this.authenticationService.authenticate(this.loginCliente).subscribe(\r\n      (result) => {\r\n        if (result) {\r\n          this.dialogRef.close();\r\n        }\r\n      },\r\n      (error) => {\r\n        this.alertService.showError('Usuário e senha inválidos!', '')\r\n      }\r\n    )\r\n  }\r\n\r\n  isLoginExists() {\r\n    if(!this.loginCliente.email.includes('@')){\r\n      let re = /\\./gi;\r\n      let result = this.loginCliente.email.replace(re, '');\r\n      this.loginCliente.email = result.replace('-','');\r\n    }\r\n    this.authenticationService.isLoginExists(this.loginCliente.email).subscribe(\r\n      result => {\r\n        this.isUserExists = result;\r\n        this.isPermiteCadastrar = false;\r\n        if (!result) {\r\n          this.isPermiteCadastrar = true;\r\n          if(this.loginCliente.email.includes('@')){\r\n            this.cliente.usuario.email = this.loginCliente.email;\r\n          } else {\r\n            this.cliente.cpf = this.loginCliente.email;\r\n          }\r\n          this.alertService.showError('Nenhum usuário existente!', '')\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  isExistentLogin() {\r\n    return this.isUserExists;\r\n  }\r\n\r\n  isSaveNewUser() {\r\n    return this.isPermiteCadastrar && !this.isUserExists;\r\n  }\r\n\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"pt-br\">\r\n\r\n<head>\r\n    <!--presets-->\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Site Premiando</title>\r\n    <!--link css-->\r\n    <!--jquery import-->\r\n    <script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-1.11.0.min.js\"></script>\r\n    <script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-migrate-1.2.1.min.js\"></script>\r\n    <!--font roboto-->\r\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\r\n    <link\r\n        href=\"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap\"\r\n        rel=\"stylesheet\">\r\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\">\r\n\r\n</head>\r\n\r\n<body>\r\n    <!--slick-->\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css\" />\r\n    <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js\"></script>\r\n    <div class=\"header-cnpj\" style=\"display: none;\">\r\n        <label style=\"font-size: 11px;font-family: sans-serif;\">\r\n            CNPJ: 44.055.269/0001-40&#160; &#160; &#160; &#160; &#160;RJ PAY SERVICOS LTDA\r\n        </label>\r\n    </div>\r\n\r\n    <!--header-->\r\n    <div class=\"header\">\r\n        <a style=\"cursor: pointer;\" (click)=\"navigateTo('principal')\" class=\"logo\" id=\"logoHeader\"><img\r\n                src=\"assets/site/logo.png\" alt=\"\"></a>\r\n        <!--menu desktop-->\r\n        <div class=\"header-menu desktop\">\r\n            <a class=\"colorazul\" style=\"cursor: pointer;\" (click)=\"navigateTo('principal')\">Pagina inicial</a>\r\n            <a class=\"colorazul\" style=\"cursor: pointer;\" (click)=\"navigateTo('ganhadores')\">Ganhadores</a>\r\n            <a class=\"colorazul\" style=\"cursor: pointer;\" (click)=\"navigateTo('sorteios')\">Sorteios</a>\r\n            <a *ngIf=\"isUserLogged()\" class=\"colorazul\" style=\"cursor: pointer;\"\r\n                (click)=\"navigateTo('minhas-compras')\">Minhas Compras</a>\r\n        </div>\r\n        <!--menu mobile-->\r\n        <div class=\"new-menu-mobile mobile\" id=\"menuMobile\">\r\n            <div style=\"text-align: end;\">\r\n                <label class=\"close-menu\" (click)=\"openMenuMobile(false)\" aria-label=\"Fechar\">X</label>\r\n            </div>\r\n            <a (click)=\"navigateTo('principal')\" class=\"logo\"\r\n                style=\"margin-bottom: 15px;margin-top: -63px;justify-content: flex-start;\"><img\r\n                    src=\"assets/site/logo.png\"></a>\r\n            <div style=\"display: grid !important; grid-template-columns: 1fr 7fr;gap: 5% 0%;\">\r\n                <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\" style=\"color: black;align-self: center;\">\r\n                    home</mat-icon>\r\n                <a class=\"colorazul bold align-text-menu-mobile\" (click)=\"navigateTo('principal')\">Pagina\r\n                    inicial</a>\r\n                <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\" style=\"color: black;align-self: center;\">\r\n                    perm_identity</mat-icon>\r\n                <a class=\"align-text-menu-mobile colorazul bold \" (click)=\"navigateTo('ganhadores')\">Ganhadores</a>\r\n                <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\" style=\"color: black;align-self: center;\">\r\n                    brightness_low</mat-icon>\r\n                <a class=\"colorazul bold align-text-menu-mobile\" (click)=\"navigateTo('sorteios')\">Sorteios</a>\r\n                <mat-icon *ngIf=\"isUserLogged()\" aria-hidden=\"false\" aria-label=\"Example home icon\"\r\n                    style=\"color: black;align-self: center;\">chrome_reader_mode</mat-icon>\r\n                <a *ngIf=\"isUserLogged()\" class=\"colorazul bold align-text-menu-mobile\"\r\n                    (click)=\"navigateTo('minhas-compras')\">Minhas Compras</a>\r\n            </div>\r\n            <button *ngIf=\"isUserLogged()\" class=\"botao-laranja desktop\" style=\"border-width: 0px;\"\r\n                (click)=\"loggoutMobile()\">Sair</button>\r\n            <button *ngIf=\"!isUserLogged()\" class=\"botao-laranja\"\r\n                style=\"margin-bottom: 10px; margin-top: 200px;border-width: 0px; border-radius: 10px;\"\r\n                (click)=\"openLoginDialogMobile()\">Minha conta</button>\r\n            <button *ngIf=\"isUserLogged()\" class=\"botao-laranja\"\r\n                style=\"margin-bottom: 10px; margin-top: 200px;border-width: 0px; border-radius: 10px;\"\r\n                (click)=\"loggout()\">Sair</button>\r\n        </div>\r\n        <div class=\"header-account\">\r\n            <button *ngIf=\"!isUserLogged()\" class=\"botao-laranja desktop\" style=\"border-width: 0px;\"\r\n                (click)=\"openLoginDialog()\">Minha conta</button>\r\n            <button *ngIf=\"isUserLogged()\" class=\"botao-laranja desktop\" style=\"border-width: 0px;\"\r\n                (click)=\"loggout()\">Sair</button>\r\n            <div class=\"mobile hamburgue\" style=\"display: none; cursor: pointer; font-size: 40px;margin-top: 7px;\"\r\n                (click)=\"openMenuMobile(true)\">\r\n                <i class=\"material-icons\" style=\"font-size: 38px;\">menu</i>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <router-outlet></router-outlet>\r\n\r\n    <!--footer-->\r\n    <footer style=\"margin-top: 4%;\">\r\n        <!--foo-->\r\n        <div class=\"foo\">\r\n            <a style=\"cursor: pointer;\" (click)=\"navigateTo('principal')\" class=\"logo\"><img src=\"assets/site/logo.png\"\r\n                    alt=\"\"></a>\r\n            <div class=\"header-menu\">\r\n                <a class=\"colorazul\" style=\"cursor: pointer;\" (click)=\"navigateTo('principal')\"\r\n                    routerLinkActive=\"active\">Pagina inicial</a>\r\n                <a class=\"colorazul\" style=\"cursor: pointer;\" (click)=\"navigateTo('ganhadores')\"\r\n                    routerLinkActive=\"active\">Ganhadores</a>\r\n                <a class=\"colorazul\" style=\"cursor: pointer;\" (click)=\"navigateTo('sorteios')\"\r\n                    routerLinkActive=\"active\">Sorteios</a>\r\n                <a class=\"colorazul\" style=\"cursor: pointer;\" (click)=\"navigateTo('termos')\"\r\n                    routerLinkActive=\"active\">Termos</a>\r\n            </div>\r\n            <div class=\"foo-redes\">\r\n                <a href=\"https://youtube.com/channel/UC5apiSfVu47gzeBQPJaRgWw\" target=\"_blank\"><img width=\"35px\"\r\n                        height=\"35px\" src=\"assets/site/icons/youtube2.png\"></a>\r\n                <a href=\"https://www.instagram.com/premiando_\" target=\"_blank\"><img\r\n                        src=\"assets/site/icons/instagram.png\" width=\"30px\" height=\"30px\"></a>\r\n            </div>\r\n        </div>\r\n        <div class=\"direitos\">\r\n            <h6>V 14-09-2022 12:00</h6>\r\n            <h6>©2021 Todos os direitos reservados</h6>\r\n        </div>\r\n\r\n        <script>\r\n            $(document).ready(function () {\r\n                $('.sorteiosativos > div.boxs-ativos').slick({\r\n                    slidesToShow: 3,\r\n                    slidesToScroll: 1,\r\n                    prevArrow: '<div class=\"slick-prev\"><img src=\"assets/site/icons/arrowprev.png\"></div>',\r\n                    nextArrow: '<div class=\"slick-next\"><img src=\"assets/site/icons/arrownext.png\"></div>',\r\n                    arrows: true,\r\n                    responsive: [\r\n                        {\r\n                            breakpoint: 769,\r\n                            settings: {\r\n                                slidesToShow: 2,\r\n                                dots: true,\r\n                                arrows: false\r\n                            }\r\n                        },\r\n                        {\r\n                            breakpoint: 480,\r\n                            settings: {\r\n                                slidesToShow: 1,\r\n                                dots: true,\r\n                                arrows: false\r\n                            }\r\n                        }\r\n                    ]\r\n                });\r\n            });\r\n        </script>\r\n\r\n        <script>\r\n            $(\".header-account > div\").click(function () {\r\n                $(\".header-menu.mobile\").addClass(\"active\");\r\n                setTimeout(function () { $(\"body\").css('overflow', 'hidden'); }, 500);\r\n            });\r\n\r\n            $(\".botao-fechar\").click(\r\n                function () {\r\n                    $(\".header-menu.mobile\").removeClass(\"active\");\r\n                    $(\"body\").css('overflow', 'scroll');\r\n                }\r\n            );\r\n        </script>\r\n    </footer>\r\n\r\n    <a id=\"faleConosco\" href=\"https://api.whatsapp.com/send?phone=5584994175896\" target=\"_blank\" style=\"cursor: pointer;position: fixed;width: 150px;height: 40px;bottom: 40px;\r\n        right: 10px;background-color: #00c259;color: white;\r\n        border-radius: 50px;text-align: center;font-size: 15px; box-shadow: 2px 2px 3px #888;z-index: 1000;\">\r\n\r\n        <!-- <div style=\"display: grid;grid-template-columns: 1fr 2fr;margin: 7px;\"> -->\r\n        <div>\r\n            <!-- <i class=\"material-icons text-sucess-compras background-icons\" style=\"cursor: pointer;\">whatsapp</i> -->\r\n        </div>\r\n        <div>\r\n            <i class=\"fa fa-whatsapp float-btn\"></i>\r\n\r\n            <label style=\"padding: 10px;cursor: pointer;color: white;\">Fale Conosco</label>\r\n\r\n        </div>\r\n    </a>\r\n\r\n</body>\r\n\r\n</html>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthenticationService } from 'app/services/login.service';\r\nimport { LoginRegysterComponent } from '../login/login-regyster/login-regyster.component';\r\n\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.css']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\r\n  menuMobileOpened: boolean = false;\r\n\r\n  constructor(public dialog: MatDialog, private router: Router, private route: ActivatedRoute,\r\n               private authenticationService: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openLoginDialog(){\r\n    const dialogRef = this.dialog.open(LoginRegysterComponent, {\r\n      data: {},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    });\r\n  }\r\n\r\n  openLoginDialogMobile(){\r\n    this.openMenuMobile(false);\r\n    const dialogRef = this.dialog.open(LoginRegysterComponent, {\r\n      data: {},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.router.navigate(['principal']);\r\n    });\r\n  }\r\n\r\n  navigateTo(rota: string){\r\n    this.openMenuMobile(false);\r\n    this.router.navigate([rota]);\r\n  }\r\n\r\n  isUserLogged(){\r\n    let currentUser = localStorage.getItem('currentUser');\r\n    if(currentUser){\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loggout(){\r\n    this.authenticationService.logout();\r\n    this.openMenuMobile(false);\r\n    this.router.navigate(['principal']);\r\n  }\r\n\r\n  loggoutMobile(){\r\n    this.authenticationService.logout();\r\n    this.openMenuMobile(false);\r\n    this.router.navigate(['principal']);\r\n  }\r\n\r\n  openMenuMobile(open: boolean) {\r\n    if(!open){\r\n      document.getElementById('menuMobile').classList.remove('menu-mobile-aberto')\r\n    } else {\r\n      document.getElementById('menuMobile').classList.add('menu-mobile-aberto')\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-view-ganhadores',\r\n  templateUrl: './view-ganhadores.component.html',\r\n  styleUrls: ['./view-ganhadores.component.css']\r\n})\r\nexport class ViewGanhadoresComponent implements OnInit {\r\n  imageUrl = 'https://flavioprado.github.io/web-premiando/uploads/';\r\n\r\n  constructor(public dialogRef: MatDialogRef<ViewGanhadoresComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, private sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const image = this.data.imagem;\r\n    this.imageUrl += image;\r\n  }\r\n\r\n}\r\n","<html lang=\"pt-br\">\r\n\r\n<head>\r\n    <!--presets-->\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Site Premiando - Desenvolvimento</title>\r\n    <!--link css-->\r\n    <!--jquery import-->\r\n    <script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-1.11.0.min.js\"></script>\r\n    <script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-migrate-1.2.1.min.js\"></script>\r\n    <!--font roboto-->\r\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n    <link\r\n        href=\"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap\"\r\n        rel=\"stylesheet\">\r\n</head>\r\n\r\n<body class=\"img-body\">\r\n    <div class=\"coluna\">\r\n        <div class=\"container-imagem\">\r\n            <img [src]=\"imageUrl\" class=\"img-ganhadores\" style=\"border-radius: 10px;\">\r\n        </div>\r\n      </div>\r\n</body>\r\n\r\n</html>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DomSanitizer} from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-view-video',\r\n  templateUrl: './view-video.component.html',\r\n  styleUrls: ['./view-video.component.css']\r\n})\r\nexport class ViewVideoComponent implements OnInit {\r\n\r\n  dataIphone: any;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ViewVideoComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, private sanitizer: DomSanitizer) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dataIphone = String(this.data).replace('embed', 'v')\r\n    this.dataIphone = this.sanitizer.bypassSecurityTrustResourceUrl(this.dataIphone)\r\n    this.data = this.sanitizer.bypassSecurityTrustResourceUrl(this.data)\r\n  }\r\n\r\n  checkIsIphone = function() {\r\n    if (navigator.userAgent.match(/iPhone/i)) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","<!-- <iframe *ngIf=\"!checkIsIphone()\" id=\"player\" class=\"youtube-player\" width=\"640\" height=\"385\"\r\n    [src]=\"data\" frameborder=\"0\" allowfullscreen>\r\n</iframe> -->\r\n<!-- \r\n<iframe *ngIf=\"checkIsIphone()\" id=\"player\"   width=\"250\" height=\"385\"\r\n    [src]=\"dataIphone\" frameborder=\"0\" allowfullscreen>\r\n</iframe> -->\r\n\r\n<div>\r\n    <iframe width=\"250\" height=\"385\" src=\"https://www.youtube.com/embed/aFkb6SB9EpA\"\r\n        title=\"Depoimento #429 - Carlos Lopes Silva / Porto Velho - RO\" frameborder=\"0\"\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n        allowfullscreen></iframe>\r\n</div>\r\n\r\n\r\n\r\n\r\n<!-- <object type=\"application/x-shockwave-flash\" [data]=\"dataIphone\" *ngIf=\"checkIsIphone()\"\r\n    width=\"250\" height=\"385\" >\r\n    <param name=\"quality\" value=\"high\" />\r\n    <param name=\"allowFullScreen\" value=\"true\" />\r\n</object> -->","<div class=\"mg-mobile\">\r\n    <!--section hero-->\r\n    <section class=\"hero\">\r\n        <!--Hero right-->\r\n        <div id=\"carouselExampleIndicators\" class=\"carousel slide\" data-ride=\"carousel\" *ngIf=\"slideSHowActive$\">\r\n            <div class=\"carousel-inner\">\r\n                <div class=\"carousel-item active\">\r\n                    <img src=\"./uploads/{{slideSHowActive$.imagem}}\" class=\"d-block w-100\" alt=\"...\"\r\n                        style=\"border-radius: 10px;cursor: pointer;\"\r\n                        (click)=\"openSorteioAtivo('atual',slideSHowActive$.idSorteio)\">\r\n                </div>\r\n\r\n                <div class=\"carousel-item\" *ngFor=\"let slide of slideSHow$\">\r\n                    <img src=\"./uploads/{{slide.imagem}}\" class=\"d-block w-100\" alt=\"...\"\r\n                        style=\"border-radius: 10px;cursor: pointer;\"\r\n                        (click)=\"openSorteioAtivo('atual',slide.idSorteio)\">\r\n                </div>\r\n            </div>\r\n            <a class=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\r\n                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                <span class=\"sr-only\">Previous</span>\r\n            </a>\r\n            <a class=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\r\n                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                <span class=\"sr-only\">Next</span>\r\n            </a>\r\n        </div>\r\n    </section>\r\n\r\n    <!--section participar-->\r\n    <section class=\"participar\">\r\n        <div class=\"container\">\r\n            <div class=\"title mobile-title-participar\" style=\"display: none;\">\r\n                <h2 class=\"medium-bold colorazul2 font-all-title\">Como participar ?</h2>\r\n                <h5 class=\"medium colorSubTitle\">Aprenda em 04 passos simples a como participar dos nossos sorteios.\r\n                </h5>\r\n            </div>\r\n            <div class=\"boxs\">\r\n                <!--escolha uma rifa-->\r\n                <div id=\"content-box-participar\">\r\n                    <img src=\"assets/site/icons/section participar/icon1.png\" class=\"icon-participar\">\r\n                    <div class=\"text\">\r\n                        <h5 class=\"colorazul2 font-participar\" style=\"font-size: 16px;\">Escolha uma Rifa</h5>\r\n                        <h6 class=\"medium colorSubTitle\" style=\"font-size: 12px;\">É muito facil participar.<br>Comece\r\n                            escolhendo uma<br>Rifa ativa\r\n                        </h6>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--selecione numeros-->\r\n                <div id=\"content-box-participar\">\r\n                    <img src=\"assets/site/icons/section participar/icon2.png\" class=\"icon-participar\">\r\n                    <div class=\"text\">\r\n                        <h5 class=\"colorazul2 font-participar\" style=\"font-size: 16px;\">Selecione os números</h5>\r\n                        <h6 class=\"medium colorSubTitle\" style=\"font-size: 12px;\">Escolha quantos quiser!<br>Quanto\r\n                            mais,\r\n                            mais chances<br>de ganhar.\r\n                        </h6>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--Faça o pagamento-->\r\n                <div id=\"content-box-participar\">\r\n                    <img src=\"assets/site/icons/section participar/icon3.png\" class=\"icon-participar\">\r\n                    <div class=\"text\">\r\n                        <h5 class=\"colorazul2 font-participar\" style=\"font-size: 16px;\">Faça o pagamento</h5>\r\n                        <h6 class=\"medium colorSubTitle\" style=\"font-size: 12px;\">Escolha uma das formas de<br>pagamento\r\n                            disponíveis</h6>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--Faça o pagamento-->\r\n                <div id=\"content-box-participar\">\r\n                    <img src=\"assets/site/icons/section participar/icon4.png\" class=\"icon-participar\">\r\n                    <div class=\"text\">\r\n                        <h5 class=\"colorazul2 font-participar\" style=\"font-size: 16px;\">Aguarde o sorteio</h5>\r\n                        <h6 class=\"medium colorSubTitle\" style=\"font-size: 12px;\">Agora é aguardar o sorteio<br>pela\r\n                            Loteria Federal e boa<br>sorte!\r\n                        </h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n\r\n    <!--sorteios ativos-->\r\n    <section class=\"sorteiosativos\" style=\"display: inline;\">\r\n        <div class=\"title\">\r\n            <h2 class=\"medium-bold colorazul2 font-all-title\">Sorteios Ativos</h2>\r\n            <h5 class=\"medium colorSubTitle\">Escolha um de nossos sorteios e comece a participar</h5>\r\n        </div>\r\n        <div class=\"boxs-ativos\">\r\n            <div *ngFor=\"let sorteio of listSorteios\" class=\"box\">\r\n                <div *ngIf=\"!sorteio.ocultar || !sorteio.rifinha\"\r\n                    (click)=\"openSorteioAtivo(sorteio.titulo, sorteio.id)\">\r\n                    <div class=\"container-imagem\">\r\n                        <img *ngIf=\"sorteio.imagem\" src=\"./uploads/{{sorteio.imagem}}\">\r\n                        <div *ngIf=\"!sorteio.imagem\" class=\"loader\"></div>\r\n                    </div>\r\n                    <div class=\"container-marca\">\r\n                        <!-- <img src=\"assets/site/sorteios/marcasorteio.png\" alt=\"\"> -->\r\n                    </div>\r\n                    <div class=\"container-infos\">\r\n                        <h3 class=\"bold colorazul2\">{{sorteio.titulo}}</h3>\r\n                        <h5 class=\"medium colorSubTitle\">\r\n                            {{sorteio.descricao}}\r\n                        </h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n\r\n    <!--ganhadores-->\r\n    <section class=\"ganhadores\" style=\"margin-top: 90px;\">\r\n        <!--title-->\r\n        <div class=\"tittle\" style=\"margin-bottom: 40px;\">\r\n            <h2 class=\"medium-bold colorazul2 font-all-title\">Conheça os Ganhadores</h2>\r\n            <h5 class=\"medium colorSubTitle\">Mais de 19 motos entregues em todo Brasil</h5>\r\n            <a (click)=\"navigateTo('ganhadores')\" style=\"cursor: pointer;\" class=\"botao-laranja\">Conheça os Todos\r\n                Ganhadores</a>\r\n        </div>\r\n\r\n        <div class=\"cards\">\r\n            <div class=\"coluna config-ganhadores\"\r\n                style=\"display: grid; grid-template-columns: 1fr 1fr 1fr;gap: 1%;margin-top: 20px;\">\r\n                <!--card-->\r\n                <div class=\"card\" *ngFor=\"let ganhador of listGanhadores | slice: 0:3\">\r\n                    <div>\r\n                        <div class=\"title\">\r\n                            <h3 class=\"bold colorazul2\" style=\"font-size: 18px;\">{{ganhador.titulo}}</h3>\r\n                            <h5 class=\"medium colorSubTitle\">{{ganhador.ganhador}}</h5>\r\n                        </div>\r\n                        <div class=\"container-imagem\" style=\"padding-top: 0px;padding-bottom: 0px;\"\r\n                            (click)=\"openDialogGanhadores(ganhador.ganhador, ganhador.numeroCota, ganhador.cidade + '/' + ganhador.estado, ganhador.dataSorteio, ganhador.imagem)\">\r\n                            <img src=\"https://flavioprado.github.io/web-premiando/uploads/{{ganhador.imagem}}\" style=\"width: 340px;height: 340px;\">\r\n                        </div>\r\n                        <div *ngIf=\"ganhador.linkYouTube\" class=\"play\" (click)=\"openDialog(ganhador.linkYouTube)\"\r\n                            style=\"cursor: pointer;\">\r\n                            <img src=\"assets/site/icons/section ganhadores/play.png\">\r\n                            <h6 class=\"bold colorazul2\">Assista ao vídeo da ----entrega</h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Ganhadores } from 'app/models/ganhadores';\r\nimport { Sorteio } from 'app/models/sorteio';\r\nimport { WebSiteSlideShow } from 'app/models/website-slideshow';\r\nimport { GanhadoresService } from 'app/services/ganhadores.service';\r\nimport { SlideShowService } from 'app/services/slideshow.service';\r\nimport { SorteioService } from 'app/services/sorteio.service';\r\nimport { ViewGanhadoresComponent } from './view-ganhadores/view-ganhadores.component';\r\nimport { ViewVideoComponent } from './view-video/view-video.component';\r\n\r\n@Component({\r\n  selector: 'app-principal',\r\n  templateUrl: './principal.component.html',\r\n  styleUrls: ['./principal.component.css']\r\n})\r\nexport class PrincipalComponent implements OnInit {\r\n\r\n  listSorteios: Sorteio[];\r\n  slideSHow$: WebSiteSlideShow[];\r\n  slideSHowActive$: WebSiteSlideShow;\r\n  urlToJson = 'assets/json/data.json';\r\n  public listGanhadores: Ganhadores[] = []\r\n\r\n  constructor(public dialog: MatDialog, private router: Router, private route: ActivatedRoute,\r\n    private sorteioService: SorteioService, private slideShowService: SlideShowService,\r\n    private ganhadorService: GanhadoresService, private titleService: Title) { }\r\n\r\n  ngOnInit() {\r\n    this.scrollTop();\r\n    this.titleService.setTitle('Premiando.com');\r\n\r\n    this.loadGanhadores();\r\n\r\n    this.getSlides();\r\n\r\n    this.loadSorteios();\r\n  }\r\n\r\n  getSlides() {\r\n    return this.slideShowService.findSlideShowById().subscribe(\r\n      slide => {\r\n        this.slideSHow$ = slide.filter(slide => slide.ativo);\r\n        this.slideSHowActive$ = this.slideSHow$[0];\r\n        this.slideSHow$.splice(this.slideSHow$.indexOf(this.slideSHowActive$), 1)\r\n      }\r\n    )\r\n  }\r\n\r\n  loadGanhadores() {\r\n    this.ganhadorService.defaultGanhadores(this.urlToJson).subscribe(\r\n      result => {\r\n        //this.listGanhadores = result.reverse();\r\n        this.ganhadorService.list().toPromise().then(\r\n          ganhadores => {\r\n            if (ganhadores['content']) {\r\n              this.listGanhadores = result.concat(ganhadores['content'].reverse()).reverse();\r\n            } else {\r\n              this.listGanhadores = result.reverse();\r\n            }\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  private loadSorteios() {\r\n    this.sorteioService.sorteios.subscribe(\r\n      async sorteios => {\r\n        this.listSorteios = sorteios['content'].filter(sorteio => sorteio.rifinha === false && sorteio.ocultar === false)\r\n      }\r\n    );\r\n  }\r\n\r\n  openDialog(video: any) {\r\n    // if(this.checkIsIphone()){\r\n    //   window.open(video, \"_blank\");\r\n    // } else {\r\n    this.dialog.open(ViewVideoComponent, {\r\n      data: video\r\n    });\r\n    // }//\r\n  }\r\n\r\n  openDialogGanhadores(nome: any, numero: any, cidade: any, data: any, imagem: any) {\r\n    this.dialog.open(ViewGanhadoresComponent, {\r\n      data: { nome, numero, cidade, data, imagem }\r\n    });\r\n  }\r\n\r\n  openSorteioAtivo(sorteio: string, id: number) {\r\n    this.router.navigate(['sorteioAtivo', sorteio.replaceAll(' ', '-'), id]);\r\n  }\r\n\r\n  navigateTo(rota: string) {\r\n    this.router.navigate([rota]);\r\n  }\r\n\r\n  checkIsIphone = function () {\r\n    if (navigator.userAgent.match(/iPhone/i)) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  scrollTop() {\r\n    let scrollToTop = window.setInterval(() => {\r\n      let pos = window.pageYOffset;\r\n      if (pos > 0) {\r\n        window.scrollTo(0, pos - 100); // how far to scroll on each step\r\n      } else {\r\n        window.clearInterval(scrollToTop);\r\n      }\r\n    }, 16);\r\n  }\r\n\r\n}\r\n","<div class=\"mg-mobile\">\r\n    <!--sorteios ativos-->\r\n<section class=\"sorteiosativos pagganhadores\" style=\"margin-top: 20px;background-color: transparent;display: grid;\">\r\n    <div class=\"title\" style=\"display: flex;\">\r\n        <div class=\"one\" style=\"width: -webkit-fill-available;\">\r\n            <h2 class=\"medium-bold colorazul2 font-all-title\">Conheça os Ganhadores</h2>\r\n            <h5 class=\"medium colorSubTitle\">Já são mais de 19 motos entregues em todo brasil</h5>\r\n        </div>\r\n        <div class=\"two\" style=\"width: 100%; display: flex; justify-content: flex-end; align-items: center;\">\r\n            <a href=\"#/sorteios\" class=\"medium-bold botao-branco\" style=\"color: #fc7322;\">Comprar sorteios ativos</a>\r\n        </div>\r\n    </div>\r\n\r\n</section>\r\n\r\n<!--ganhadores-->\r\n<section class=\"ganhadores\">\r\n\r\n    <div class=\"cards\">\r\n        <div class=\"coluna config-ganhadores\" style=\"display: grid; grid-template-columns: 1fr 1fr 1fr;gap: 1%;margin-top: 20px;\">\r\n            <!--card-->\r\n            <div class=\"card\" *ngFor=\"let ganhador of listGanhadores\">\r\n                <div>\r\n                    <div class=\"title\">\r\n                        <h3 class=\"bold colorazul2\" style=\"font-size: 18px;\">{{ganhador.titulo}}</h3>\r\n                        <h5 class=\"medium colorSubTitle\">{{ganhador.ganhador}}</h5>\r\n                    </div>\r\n                    <div class=\"container-imagem\" style=\"padding-top: 0px;padding-bottom: 0px;\"\r\n                        (click)=\"openDialogGanhadores(ganhador.ganhador, ganhador.numeroCota, ganhador.cidade + '/' + ganhador.estado, ganhador.dataSorteio, ganhador.imagem)\">\r\n                        <img src=\"https://flavioprado.github.io/web-premiando/uploads/{{ganhador.imagem}}\" style=\"width: 340px;height: 340px;\">\r\n                    </div>\r\n                    <div *ngIf=\"ganhador.linkYouTube\" class=\"play\" (click)=\"openDialog(ganhador.linkYouTube)\"\r\n                        style=\"cursor: pointer;\">\r\n                        <img src=\"assets/site/icons/section ganhadores/play.png\">\r\n                        <h6 class=\"bold colorazul2\">Assista ao vídeo da entrega</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Ganhadores } from 'app/models/ganhadores';\r\nimport { GanhadoresService } from 'app/services/ganhadores.service';\r\nimport { ViewGanhadoresComponent } from '../principal/view-ganhadores/view-ganhadores.component';\r\nimport { ViewVideoComponent } from '../principal/view-video/view-video.component';\r\n\r\n@Component({\r\n  selector: 'app-ganhadores',\r\n  templateUrl: './ganhadores.component.html',\r\n  styleUrls: ['./ganhadores.component.css']\r\n})\r\nexport class GanhadoresComponent implements OnInit {\r\n\r\n  public listGanhadores: Ganhadores[]\r\n  urlToJson = 'assets/json/data.json';\r\n\r\n  constructor(public dialog: MatDialog, private ganhadorService: GanhadoresService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.scrollTop();\r\n    this.loadGanhadores();\r\n  }\r\n\r\n  loadGanhadores(){\r\n    this.ganhadorService.defaultGanhadores(this.urlToJson).subscribe(\r\n      result => {\r\n          //this.listGanhadores = result.reverse();\r\n          this.ganhadorService.list().toPromise().then(\r\n            ganhadores => {\r\n                if(ganhadores['content']){\r\n                  this.listGanhadores = result.concat(ganhadores['content'].reverse()).reverse();\r\n                } else {\r\n                  this.listGanhadores = result.reverse();\r\n                }\r\n              }\r\n          );\r\n      }\r\n    );\r\n  }\r\n\r\n  openDialog(video: any) {\r\n    this.dialog.open(ViewVideoComponent, {\r\n      data: video\r\n    });\r\n  }\r\n\r\n  openDialogGanhadores(nome: any, numero: any, cidade: any, data: any, imagem: any) {\r\n    this.dialog.open(ViewGanhadoresComponent, {\r\n      data: { nome, numero, cidade, data, imagem }\r\n    });\r\n  }\r\n\r\n  scrollTop(){\r\n    let scrollToTop = window.setInterval(() => {\r\n        let pos = window.pageYOffset;\r\n        if (pos > 0) {\r\n            window.scrollTo(0, pos - 100); // how far to scroll on each step\r\n        } else {\r\n            window.clearInterval(scrollToTop);\r\n        }\r\n    }, 16);\r\n  }\r\n\r\n}\r\n","<div class=\"mg-mobile\">\r\n    <!--sorteios ativos-->\r\n    <section class=\"sorteiosativos\" style=\"margin-top: 30px;background-color: transparent;display: inline;\">\r\n        <div class=\"title\">\r\n            <h2 class=\"medium-bold colorazul2 font-all-title\">Sorteios Ativos</h2>\r\n            <h5 class=\"medium colorSubTitle\">Escolha um de nossos sorteios e comece a participar</h5>\r\n        </div>\r\n\r\n        <!--sorteios ativos-->\r\n        <section class=\"sorteiosativos\" style=\"display: inline;\">\r\n            <div class=\"boxs-ativos\">\r\n                <div *ngFor=\"let sorteio of listSorteios\" class=\"box\">\r\n                    <div *ngIf=\"!sorteio.ocultar\" (click)=\"openSorteioAtivo(sorteio.titulo, sorteio.id)\">\r\n                        <div class=\"container-imagem\">\r\n                            <img *ngIf=\"sorteio.imagem\" src=\"/uploads/{{sorteio.imagem}}\">\r\n                            <div *ngIf=\"!sorteio.imagem\" class=\"loader\"></div>\r\n                        </div>\r\n                        <div class=\"container-marca\">\r\n                            <!-- <img src=\"assets/site/sorteios/marcasorteio.png\" alt=\"\"> -->\r\n                        </div>\r\n                        <div class=\"container-infos\">\r\n                            <h3 class=\"bold colorazul2\">{{sorteio.titulo}}</h3>\r\n                            <h5 class=\"medium colorSubTitle\">\r\n                                {{sorteio.descricao}}\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </section>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Ganhadores } from 'app/models/ganhadores';\r\nimport { Sorteio } from 'app/models/sorteio';\r\nimport { GanhadoresService } from 'app/services/ganhadores.service';\r\nimport { SorteioService } from 'app/services/sorteio.service';\r\nimport { ViewGanhadoresComponent } from '../principal/view-ganhadores/view-ganhadores.component';\r\nimport { ViewVideoComponent } from '../principal/view-video/view-video.component';\r\n\r\n@Component({\r\n  selector: 'app-sorteios',\r\n  templateUrl: './sorteios.component.html',\r\n  styleUrls: ['./sorteios.component.css']\r\n})\r\nexport class SorteiosComponent implements OnInit {\r\n\r\n  listSorteios: Sorteio[];\r\n  public listGanhadores: Ganhadores[]\r\n\r\n  constructor(public dialog: MatDialog, private router: Router, private route: ActivatedRoute,\r\n    private sorteioService: SorteioService, private ganhadorService: GanhadoresService) { }\r\n\r\n  ngOnInit() {\r\n    this.scrollTop();\r\n    this.loadSorteios();\r\n\r\n    this.ganhadorService.list().subscribe(\r\n      ganhadores => this.listGanhadores = ganhadores['content']\r\n    );\r\n  }\r\n\r\n  private loadSorteios(){\r\n    this.sorteioService.sorteios.subscribe(\r\n      async sorteios => {\r\n        this.listSorteios = sorteios['content'].filter(sorteio => sorteio.rifinha === false && sorteio.ocultar === false)\r\n      } \r\n    );\r\n  }\r\n\r\n\r\n  openDialog(video: any) {\r\n    this.dialog.open(ViewVideoComponent, {\r\n      data: video\r\n    });\r\n  }\r\n\r\n  openDialogGanhadores(nome: any, numero: any, cidade: any, data: any, imagem: any) {\r\n    this.dialog.open(ViewGanhadoresComponent, {\r\n      data: { nome, numero, cidade, data, imagem }\r\n    });\r\n  }\r\n\r\n  openSorteioAtivo(sorteio: string, id: number) {\r\n    this.router.navigate(['sorteioAtivo', sorteio, id]);\r\n  }\r\n\r\n  scrollTop(){\r\n    let scrollToTop = window.setInterval(() => {\r\n        let pos = window.pageYOffset;\r\n        if (pos > 0) {\r\n            window.scrollTo(0, pos - 100); // how far to scroll on each step\r\n        } else {\r\n            window.clearInterval(scrollToTop);\r\n        }\r\n    }, 16);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, timer } from 'rxjs';\r\nimport { CotasSorteio } from '../models/cotas-sorteio';\r\nimport { FullSorteio } from '../models/full-sorteio';\r\nimport { environment } from 'environments/environment';\r\n\r\n\r\nconst baseUrl: string = environment.baseUrl;\r\nconst CACHE_SIZE = 1;\r\nconst REFRESH_INTERVAL = 72000000;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class CotasSorteioService {\r\n  currentIdSorteioAtivo: number;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  listCotasSorteio(statusCota: number): Observable<CotasSorteio[]> {\r\n    let url = `${baseUrl}/cotas/sorteio/${this.currentIdSorteioAtivo}/status/${statusCota}`;\r\n\r\n    return this.http.get<CotasSorteio[]>(url)\r\n  }\r\n\r\n  getSorteioById(idSorteio: number): Observable<FullSorteio> {\r\n    let url = `${baseUrl}/sorteios/${idSorteio}`;\r\n\r\n    return this.http.get<FullSorteio>(url)\r\n  }\r\n\r\n  reservarCota(idSorteio: number, idCliente: number, idCotas: number[]): Observable<CotasSorteio[]> {\r\n    let url = `${baseUrl}/cotas/sorteio/${idSorteio}/cliente/${idCliente}`;\r\n    return this.http.post<CotasSorteio[]>(url,{idCotas: idCotas})\r\n  }\r\n\r\n}\r\n","<div style=\"border-bottom: 1px solid #dee2e6;margin: 0px\">\r\n    <h4 style=\"line-height: 1.5;font-family: montserrat,sans-serif;margin-left: 23px;\">CHECKOUT</h4>\r\n    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"onNoClick(false)\"\r\n        style=\"font-size: 2rem;padding: 1rem;margin: -5rem -1rem -1rem auto;cursor: pointer;background-color: transparent;border: 0;appearance: none;\r\n    float: right;font-weight: 700;line-height: 1;color: #232323;text-shadow: 0 1px 0 #fff;opacity: .5;margin-right: -5px;margin-top: -4.4rem;\">\r\n        <span aria-hidden=\"true\">×</span>\r\n    </button>\r\n</div>\r\n<div style=\"margin-top: 15px;\">\r\n    <div style=\"font-family: sans-serif;font-size: 16px;color: #000;font-weight: 400;line-height: 1.5;text-align: center;width: 100%;\">\r\n        <b>{{sorteio.titulo}}</b>\r\n    </div>\r\n    <div style=\"font-family: sans-serif;font-size: 13px;color: #000;font-weight: 400;line-height: 1.5;text-align: center;width: 100%;\">\r\n        <b>Números Selecionados:</b>\r\n    </div>\r\n    <div class=\"raffle-selected-numbers bg-white py-3\">\r\n\r\n        <div class=\"cards-cota-finalizar\" *ngIf=\"!sorteio.rifinha\"\r\n            style=\"margin-top: 0px;margin-left: 0px;margin-right: 600px;margin-bottom: 10px;text-align: center;\">\r\n            <label class=\"card-cota btn text-cotas-checkout\" *ngFor=\"let cota of cotasHaComprar\"\r\n                (click)=\"unSelectCota(cota)\">\r\n                {{(\"000\" + cota.numeroCota).slice(-3) | mask: '999'}}\r\n            </label>\r\n        </div>\r\n\r\n        <div class=\"cards-cota-finalizar\" *ngIf=\"sorteio.rifinha\"\r\n            style=\"margin-top: 15px;margin-left: 0px;margin-right: 600px;margin-bottom: 10px;\">\r\n            <label class=\"card-cota btn\" *ngFor=\"let cota of cotasHaComprar\" (click)=\"unSelectCota(cota)\">\r\n                {{(\"00\" + cota.numeroCota).slice(-2) | mask: '99'}}\r\n            </label>\r\n        </div>\r\n\r\n        <div style=\"margin-bottom: 0.5rem!important;padding-top: 10px;margin-top: 0.5rem!important;display: grid;grid-template-columns: 1fr 1fr;\">\r\n            <label class=\"pop-finalizar-label-total badger\"\r\n                style=\"background-color: #363232;border-radius: 5px;padding: 5px;color: white;font-size: 17px;\">\r\n                {{cotasHaComprar.length}} x {{sorteio.valor | currency: 'BRL'}}\r\n            </label>\r\n            <label class=\"pop-finalizar-label-total badger\"\r\n                style=\"background-color: rgb(26 213 152);border-radius: 5px;padding: 5px;color: white;font-size: 17px; margin-left: 15px;\">\r\n                Total: <b>{{cotasHaComprar.length * sorteio.valor | currency: 'BRL'}}</b>\r\n            </label>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div class=\"container\" style=\"background-color: white;padding: 0px;text-align: center;\" *ngIf=\"id == 0\">\r\n    <h2 class=\"text-dados-participantes\" style=\"font-weight: bold;\">DADOS DO PARTICIPANTE</h2>\r\n    <div *ngIf=\"!isSaveNewUser()\">\r\n        <div class=\"col-75\" style=\"\">\r\n            <input type=\"text\" id=\"loginUsername\" name=\"loginUsername\" [(ngModel)]=\"loginCliente.email\"\r\n                placeholder=\"CPF ou Email\" tabindex=\"1\" autocomplete=\"login\">\r\n        </div>\r\n        <div class=\"col-25\">\r\n            <button id=\"bt_verificar_login\" type=\"submit\" *ngIf=\"!isExistentLogin()\" style=\"align-items: center;margin: 5px;\"\r\n                (click)=\"isLoginExists()\" class=\"\">OK</button>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"isExistentLogin()\">\r\n        <div class=\"col-75\" >\r\n            <input type=\"password\" id=\"loginPasword\" name=\"loginPassword\" [(ngModel)]=\"loginCliente.senha\"\r\n                placeholder=\"Senha..\">\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"isSaveNewUser()\">\r\n        <div class=\"col-50\">\r\n            <input type=\"text\" id=\"nomeCompleto\" name=\"nomeCompleto\" [(ngModel)]=\"cliente.nome\"\r\n                placeholder=\"Nome Completo\">\r\n        </div>\r\n        <div class=\"col-50\">\r\n            <input type=\"text\" id=\"cpf\" name=\"cpf\" [(ngModel)]=\"cliente.cpf\" mask=\"000.000.000-00\" placeholder=\"CPF\">\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"isSaveNewUser()\">\r\n        <div class=\"col-50\">\r\n            <input type=\"text\" id=\"email\" name=\"email\" [(ngModel)]=\"cliente.usuario.email\" placeholder=\"Email\">\r\n        </div>\r\n        <div class=\"col-50\">\r\n            <input type=\"text\" id=\"celular\" name=\"celular\" [(ngModel)]=\"cliente.celular\" mask=\"(00)000000000\"\r\n                placeholder=\"Celular/WhatssApp\">\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"isSaveNewUser()\">\r\n        <div class=\"col-50\">\r\n            <input type=\"password\" id=\"senha\" name=\"senha\" [(ngModel)]=\"cliente.usuario.senha\" placeholder=\"Senha\">\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"isSaveNewUser()  && isBloquearClick\" style=\"margin-left: -5px;margin-right: 5px;\">\r\n        <button id=\"bt_finalizar_checkout_new_user\" type=\"submit\" style=\"align-items: center;\"\r\n            (click)=\"saveOrUpdate()\">Concluir</button>\r\n    </div>\r\n\r\n    <div *ngIf=\"isExistentLogin()  && isBloquearClick\" style=\"margin-left: -5px;margin-right: 5px;\">\r\n        <button id=\"bt_finalizar_logar\" type=\"submit\" style=\"align-items: center;\" (click)=\"login()\">Logar</button>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"id > 0 && isBloquearClick\" style=\"text-align: right;\">\r\n    <button id=\"bt_finalizar_checkout\" type=\"submit\"  style=\"align-items: center;margin-left: -5px;margin-right: 5px;\" (click)=\"confirmarReserva($event)\">Reservar</button>\r\n</div>\r\n<div style=\"display: inline-block;\">\r\n    <p style=\"margin-top: 30px;font-size: 15px;\">Ao clicar em Finalizar, você declara que está de acordo com os <b style=\"font-weight: bold;\">termos de uso</b> do\r\n        site.</p>\r\n</div>","import { Component, Inject, Input, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Clientes } from 'app/models/clientes';\r\nimport { FullSorteio } from 'app/models/full-sorteio';\r\nimport { Usuario } from 'app/models/usuario';\r\nimport { ClientesService } from 'app/services/clientes.service';\r\nimport { AuthenticationService } from 'app/services/login.service';\r\nimport { NotificationService } from 'app/services/toast.service';\r\nimport { Login } from 'app/site-premiando/login/models/login';\r\nimport { CotasSorteio } from '../../models/cotas-sorteio';\r\nimport { CotasSorteioService } from '../../services/sorteio-ativo.service';\r\n\r\n@Component({\r\n  selector: 'app-confirmar-reserva',\r\n  templateUrl: './confirmar-reserva.component.html',\r\n  styleUrls: ['./confirmar-reserva.component.css']\r\n})\r\nexport class ConfirmarReservaComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<ConfirmarReservaComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, private sorteioAtivoService: CotasSorteioService,\r\n    private alertService: NotificationService, private clientesService: ClientesService,\r\n    private authenticationService: AuthenticationService,) { }\r\n\r\n  lastClick = 0;\r\n  id = 0;\r\n  sorteio: FullSorteio;\r\n  cotasHaComprar: CotasSorteio[] = [];\r\n  @Input() public cliente: Clientes;\r\n  @Input() public loginCliente: Login;\r\n  private isUserExists: boolean;\r\n  private isPermiteCadastrar: boolean;\r\n  isBloquearClick: boolean = true;\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.data['idCliente'];\r\n    this.sorteio = this.data['sorteio']\r\n    this.loginCliente = new Login();\r\n    this.loginCliente.email = \"\";\r\n    this.loginCliente.senha = \"\";\r\n    this.cliente = new Clientes();\r\n    this.cliente.usuario = new Usuario();\r\n    this.cotasHaComprar = this.data['cotas'];\r\n   }\r\n\r\n  async confirmarReserva(event: any) {\r\n    this.isBloquearClick = false;\r\n    const currentTime = new Date().getTime();\r\n    const ultimoClick = currentTime - this.lastClick;\r\n\r\n    if (ultimoClick < 3000) {//voce pode adaptar de acordo com o que vc considera um click duplo\r\n      event.stopPropagation();\r\n    } else {\r\n      this.id = await this.authenticationService.currentUserValue.cliente ? +this.authenticationService.currentUserValue.cliente.id : 0; \r\n      if(this.id > 0){\r\n        this.sorteioAtivoService.reservarCota(this.sorteio.id, this.id, this.data.idCotas).toPromise()\r\n        .then((result) => {\r\n          if(result){\r\n            this.alertService.showSucess('Cota Rservada com sucesso!', 'Sucesso');\r\n            this.onNoClick(result);\r\n          } else {\r\n            this.id = 0;\r\n            this.isBloquearClick = true;\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.isBloquearClick = true;\r\n          //this.id = 0;\r\n        })\r\n      }\r\n    }\r\n\r\n    this.lastClick = currentTime;\r\n  }\r\n\r\n  saveOrUpdate() {\r\n    this.cliente.usuario.login = this.cliente.cpf;\r\n    this.cliente.whatsapp = this.cliente.celular;\r\n    this.salvar();\r\n  }\r\n\r\n  salvar() {\r\n    this.clientesService.createClientes(this.cliente).toPromise()\r\n    .then(result => {\r\n      if(result){\r\n        this.alertService.showSucess('Cliente cadastrado com sucesso!', 'Sucesso');\r\n        this.loginCliente = new Login();\r\n        this.loginCliente.email = this.cliente.usuario.email;\r\n        this.loginCliente.senha = this.cliente.usuario.senha;\r\n        this.cliente = new Clientes();\r\n        this.login();\r\n      } else {\r\n        this.alertService.showError('verifique os campos preenchidos.', 'Erro ao cadastrar')\r\n      }\r\n      \r\n    })\r\n    .catch(error => {\r\n      this.alertService.showError('Erro ao cadastrar o cliente! verifique os campos preenchidos.', 'Error');\r\n      this.alertService.showError('Erro: ' + error, 'Error')\r\n    })\r\n  }\r\n\r\n  login() {\r\n    this.authenticationService.authenticate(this.loginCliente).subscribe(\r\n      (result) => {\r\n        if (result) {\r\n          this.confirmarReserva(null);\r\n        }\r\n      },\r\n      (error) => {\r\n        this.alertService.showError('Usuário e senha inválidos!', '')\r\n      }\r\n    )\r\n  }\r\n\r\n  isLoginExists() {\r\n    if(!this.loginCliente.email.includes('@')){\r\n      let re = /\\./gi;\r\n      let result = this.loginCliente.email.replace(re, '');\r\n      this.loginCliente.email = result.replace('-','');\r\n    }\r\n    this.authenticationService.isLoginExists(this.loginCliente.email).subscribe(\r\n      result => {\r\n        this.isUserExists = result;\r\n        this.isPermiteCadastrar = false;\r\n        if (!result) {\r\n          this.isPermiteCadastrar = true;\r\n          if(this.loginCliente.email.includes('@')){\r\n            this.cliente.usuario.email = this.loginCliente.email;\r\n          } else {\r\n            this.cliente.cpf = this.loginCliente.email;\r\n          }\r\n          this.alertService.showError('Nenhum usuário existente!', '')\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  isExistentLogin() {\r\n    return this.isUserExists;\r\n  }\r\n\r\n  isSaveNewUser() {\r\n    return this.isPermiteCadastrar && !this.isUserExists;\r\n  }\r\n\r\n  onNoClick(data: any): void {\r\n    this.dialogRef.close(data);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, timer } from 'rxjs';\r\nimport { MinhasCompras } from '../models/minhas-compras';\r\nimport { shareReplay, switchMap } from 'rxjs/operators';\r\nimport { environment } from 'environments/environment';\r\nimport { AuthenticationService } from 'app/services/login.service';\r\n\r\n\r\nconst baseUrl: string = environment.baseUrl;\r\nconst CACHE_SIZE = 100;\r\nconst REFRESH_INTERVAL = 600000;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MinhasComprasService {\r\n  private cache$: Observable<MinhasCompras[]>;\r\n\r\n  constructor(private http: HttpClient, private loginService: AuthenticationService) { }\r\n\r\n  get minhasCompras(){\r\n    let currentUser = this.loginService.currentUserValue;\r\n    if (!this.cache$) {\r\n\r\n      const timer$ = timer(0, REFRESH_INTERVAL);\r\n\r\n      this.cache$ = timer$.pipe(\r\n        switchMap(_ => this.listMinhasCompras(+currentUser.cliente.id)),\r\n        shareReplay(CACHE_SIZE)\r\n      );\r\n    }\r\n\r\n    return this.cache$;\r\n  }\r\n\r\n  listMinhasCompras(idCliente: number): Observable<MinhasCompras[]> {\r\n    let url = `${baseUrl}/clientes/${idCliente}/minhascompras`;\r\n\r\n    return this.http.get<MinhasCompras[]>(url)\r\n  }\r\n\r\n  listMeusNumeros(idCliente: number, idSOrteio): Observable<MinhasCompras[]> {\r\n    let url = `${baseUrl}/clientes/${idCliente}/${idSOrteio}/meusnumeros`;\r\n\r\n    return this.http.get<MinhasCompras[]>(url)\r\n  }\r\n\r\n  listMinhaCompra(idCompra: number): Observable<MinhasCompras> {\r\n    let url = `${baseUrl}/clientes/${idCompra}/minhascompras/checkout`;\r\n\r\n    return this.http.get<MinhasCompras>(url)\r\n  }\r\n}\r\n","<div style=\"margin-left: -8%;margin-right: -8%;\">\r\n    <!--Minhas Compras-->\r\n    <section class=\"meusnumeros\" style=\"margin-top: 30px;background-color: transparent;display: inline;\">\r\n        <div style=\"text-align: end;\">\r\n            <i class=\"material-icons\" (click)=\"onNoClick('')\">close</i>\r\n        </div>\r\n        <div class=\"title\" style=\"text-align: center;\">\r\n            <h2 class=\"medium-bold colorazul2\">Meus Números</h2>\r\n        </div>\r\n    </section>\r\n\r\n    <div style=\"text-align: -webkit-center;\">\r\n        <div *ngIf=\"!listMinhasCompras\" class=\"loader\"></div>\r\n    </div>\r\n\r\n    <section class=\"meusnumeros\" style=\"display: inline;overflow-y: scroll;\">\r\n        <div class=\"boxs-ativos\" style=\"grid-template-columns: 1fr !important;\">\r\n            <div *ngFor=\"let compra of listMinhasCompras\" class=\"box size-box\" style=\"display: block;\">\r\n                <div class=\"direction-card\">\r\n                    <div class=\"card font-xs\" style=\"width: 100%;\">\r\n                        <div class=\"card-body font-xs\">\r\n                            <p><b style=\"font-weight: bold;\">{{compra.tituloSorteio}}</b></p>\r\n                        </div>\r\n\r\n                        <div style=\"min-height: 50%;\">\r\n                            <div class=\"direction-info-minhas-compras\">\r\n                                \r\n                                <div>\r\n                                    <div>\r\n                                        Resv. em: <label class=\"text-checkout-dados\" style=\"font-weight: bold;\">{{compra.dataCompra | date: 'dd/MM/yyyy HH:mm'}}</label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    Situação: <label [ngClass]=\"getStatusColor(compra.status)\">{{compra.status == 'Não Iniciado' ? 'Pagamento Pendente'\r\n                                        : compra.status}}\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <div>Minhas Cotas</div>\r\n                                    <div class=\"text-cotas-checkout\" *ngIf=\"!compra.rifinha\">\r\n                                        <div style=\"color: #595f6f;font-weight: bold;\" *ngFor=\"let cota of compra.cotas\">\r\n                                            {{(\"000\" + cota).slice(-3) | mask: '999'}},</div>\r\n                                    </div>\r\n                                    <div class=\"text-cotas-checkout\" *ngIf=\"compra.rifinha\">\r\n                                        <div style=\"color: #595f6f;font-weight: bold;\" *ngFor=\"let cota of compra.cotas\">\r\n                                            {{(\"00\" + cota).slice(-2) | mask: '99'}},</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n\r\n</div>","import { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthenticationService } from 'app/services/login.service';\r\nimport { NotificationService } from 'app/services/toast.service';\r\nimport { MinhasCompras } from 'app/site-premiando/minhas-compras/view-minhas-compras/models/minhas-compras';\r\nimport { MinhasComprasService } from 'app/site-premiando/minhas-compras/view-minhas-compras/services/minhas-compras.service';\r\n\r\n@Component({\r\n  selector: 'app-meus-numeros',\r\n  templateUrl: './meus-numeros.component.html',\r\n  styleUrls: ['./meus-numeros.component.css'],\r\n  encapsulation: ViewEncapsulation.None \r\n})\r\nexport class MeusNumerosComponent implements OnInit {\r\n\r\n  listMinhasCompras: MinhasCompras[];\r\n\r\n  constructor(public dialogRef: MatDialogRef<MeusNumerosComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, private alertService: NotificationService,\r\n    private loginService: AuthenticationService,private minhasComprasService: MinhasComprasService,\r\n    private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    let currentUser = this.loginService.currentUserValue;\r\n    if(currentUser.isLogged){\r\n      let idSorteio = this.data['idSorteio']\r\n      if(idSorteio){\r\n        this.minhasComprasService.listMeusNumeros(+currentUser.cliente.id, +idSorteio).subscribe(\r\n          compras => this.listMinhasCompras = compras.filter(compra => !compra.status.toLowerCase().includes('cancelado'))\r\n        )\r\n      } else {\r\n        this.alertService.showError('Erro ao recuperar seu números!', 'ERRO')\r\n      }\r\n    }\r\n  }\r\n\r\n  getStatusColor(status: string){\r\n\r\n    if(status === 'Não Iniciado' || status === 'Pagamento Pendente'){\r\n      return \"text-checkout-status-pendente\"\r\n    }\r\n    if(status === 'Aprovado'){\r\n      return \"text-checkout-status-pago\"\r\n    }\r\n    if(status === 'Cancelado'){\r\n      return \"text-checkout-status-cancelado\"\r\n    }\r\n\r\n    return \"text-checkout-status\"\r\n  }\r\n\r\n  onNoClick(data: any): void {\r\n    this.dialogRef.close(data);\r\n  }\r\n\r\n}\r\n","\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport {Meta, MetaDefinition, Title} from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\n\r\nexport interface PageMetadata {\r\n  title: string;\r\n  // image will be added later\r\n  description: string;\r\n  author: string;\r\n  image: string;\r\n  keywords: string[];\r\n  type: string;\r\n}\r\n\r\nconst defaultMetadata: PageMetadata = {\r\n  title: 'Premiando.com',\r\n  description: 'lojapremiando.com.br',\r\n  author: 'Raphael Cavalcante',\r\n  image: 'imgsorteio.jpeg',\r\n  keywords: ['Angular', 'meta tags', 'Angular Universal'],\r\n  type: 'website',\r\n}\r\n\r\n@Injectable()\r\nexport class MetadataService {\r\n  constructor(private metaTagService: Meta,\r\n              private titleService: Title,\r\n              private router: Router) {}\r\n\r\n  public updateMetadata(metadata: Partial<PageMetadata>, index: boolean = true): void {\r\n    const pageMetadata: PageMetadata = {...defaultMetadata, ...metadata};\r\n    const metatags: MetaDefinition[] = this.generateMetaDefinitions(pageMetadata);\r\n\r\n    this.metaTagService.addTags([\r\n        ...metatags,\r\n        { property: 'og:url', content: window.location.protocol + '//' + window.location.hostname},\r\n        { name: 'robots', content: index ? 'index, follow' : 'noindex' },\r\n        { name: 'viewport', content: 'width=device-width, initial-scale=1' },\r\n        { 'http-equiv': 'Content-Type', content: 'text/html; charset=utf-8' },\r\n       ], false);\r\n\r\n    this.titleService.setTitle(pageMetadata.title);\r\n  }\r\n\r\n  private generateMetaDefinitions(metadata: PageMetadata): MetaDefinition[] {\r\n    const baseUrl = window.location.protocol + '//' + window.location.hostname;\r\n    const imageUrl = baseUrl + '/uploads/'\r\n    return [\r\n      { name: 'title', content: metadata.title },\r\n      { property: 'og:title', content: metadata.title },\r\n\r\n      { name: 'description', content: metadata.description },\r\n      { property: 'og:description', content: metadata.description },\r\n\r\n      { name: 'author', content: metadata.author },\r\n      { property: 'og:author', content: metadata.author },\r\n\r\n      { name: 'keywords', content: metadata.keywords.join(', ') },\r\n\r\n      { property: 'og:type', content: metadata.type },\r\n\r\n      { property: 'og:image', content: imageUrl + metadata.image}\r\n    ];\r\n  }\r\n}","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\n\r\n@Pipe({ name: \"safeHtml\" })\r\nexport class SafeHtmlPipe implements PipeTransform {\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n\r\n  transform(value) {\r\n    return this.sanitizer.bypassSecurityTrustHtml(value);\r\n  }\r\n}","<div *ngIf=\"loading\" class=\"loader\"></div>\r\n<div style=\"margin-top: 20px;\">\r\n    <!--section hero-->\r\n    <section class=\"hero\">\r\n        <!--mobile-->\r\n        <h3 class=\"bold colorazul mobile\" style=\"display: none;text-align: center;\">{{sorteio.titulo}}</h3>\r\n        <div class=\"texto-bloco2 colorazul mobile\" style=\"display: none;text-align: center;\">\r\n            <label>{{sorteio.descricao}}</label>\r\n        </div>\r\n        <!--Hero left-->\r\n        <div class=\"hero-right\">\r\n            <img src=\"/uploads/{{sorteio.imagem}}\" style=\"border-radius: 10px;\">\r\n        </div>\r\n\r\n        <!--Hero right-->\r\n        <div class=\"hero-left\" style=\"cursor: pointer;padding: 0% 3% 0% 3%;\">\r\n            <div class=\"texto-bloco1\">\r\n                <!--dektop-->\r\n                <h3 class=\"bold colorazul desktop\">{{sorteio.titulo}}</h3>\r\n            </div>\r\n            <div class=\"texto-bloco2 colorazul desktop\">\r\n                <label>{{sorteio.descricao}}</label>\r\n            </div>\r\n\r\n            <div class=\"box-bottons\">\r\n                <div>\r\n                    <h6 class=\"colorazul2\">Apenas<br> <label style=\"font-size: 22px;color: #fc7321;font-weight: bold;\">R{{sorteio.valor |\r\n                            currency}}</label>\r\n                    </h6>\r\n                </div>\r\n                <div>\r\n                    <h6 class=\"colorazul2\" style=\"font-weight: bold;\">{{sorteio.adicional1}}</h6>\r\n                </div>\r\n                <div>\r\n                    <h6 class=\"colorazul2\" style=\"font-weight: bold;\">{{sorteio.adicional2}}</h6>\r\n                </div>\r\n            </div>\r\n\r\n            <div *ngIf=\"sorteio.exibirData\" style=\"margin-top: 10px;margin-bottom: 10px;\">Sorteio confirmado para {{sorteio.dataSorteio |\r\n                date: 'dd/MM/yyyy'}}.</div>\r\n\r\n            <label id=\"htmlSanitized\" [innerHtml]=\"sorteio.texto | safeHtml\"\r\n                style=\"text-align: justify;margin: 0px;\"></label>\r\n        </div>\r\n    </section>\r\n\r\n\r\n    <!--section participar-->\r\n    <section class=\"participar\">\r\n        <div class=\"container\">\r\n            <div class=\"title mobile-title-participar\" style=\"display: none;\">\r\n                <h2 class=\"medium-bold colorazul2 font-all-title\">Como participar ?</h2>\r\n                <h5 class=\"medium colorSubTitle\">Aprenda em 04 passos simples a como participar dos nossos sorteios.</h5>\r\n            </div>\r\n            <div class=\"boxs\">\r\n                <!--escolha uma rifa-->\r\n                <div id=\"content-box-participar\">\r\n                    <img src=\"assets/site/icons/section participar/icon1.png\" class=\"icon-participar\">\r\n                    <div class=\"text\">\r\n                        <h5 class=\"colorazul2 font-participar\" style=\"font-size: 16px;\">Escolha uma Rifa</h5>\r\n                        <h6 class=\"medium colorSubTitle\" style=\"font-size: 12px;\">É muito facil participar.<br>Comece\r\n                            escolhendo uma<br>Rifa ativa\r\n                        </h6>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--selecione numeros-->\r\n                <div id=\"content-box-participar\">\r\n                    <img src=\"assets/site/icons/section participar/icon2.png\" class=\"icon-participar\">\r\n                    <div class=\"text\">\r\n                        <h5 class=\"colorazul2 font-participar\" style=\"font-size: 16px;\">Selecione os números</h5>\r\n                        <h6 class=\"medium colorSubTitle\" style=\"font-size: 12px;\">Escolha quantos quiser!<br>Quanto mais,\r\n                            mais chances<br>de ganhar.\r\n                        </h6>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--Faça o pagamento-->\r\n                <div id=\"content-box-participar\">\r\n                    <img src=\"assets/site/icons/section participar/icon3.png\" class=\"icon-participar\">\r\n                    <div class=\"text\">\r\n                        <h5 class=\"colorazul2 font-participar\" style=\"font-size: 16px;\">Faça o pagamento</h5>\r\n                        <h6 class=\"medium colorSubTitle\" style=\"font-size: 12px;\">Escolha uma das formas de<br>pagamento\r\n                            disponíveis</h6>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--Faça o pagamento-->\r\n                <div id=\"content-box-participar\">\r\n                    <img src=\"assets/site/icons/section participar/icon4.png\" class=\"icon-participar\">\r\n                    <div class=\"text\">\r\n                        <h5 class=\"colorazul2 font-participar\" style=\"font-size: 16px;\">Aguarde o sorteio</h5>\r\n                        <h6 class=\"medium colorSubTitle\" style=\"font-size: 12px;\">Agora é aguardar o sorteio<br>pela\r\n                            Loteria Federal e boa<br>sorte!\r\n                        </h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n\r\n    <!--compra rifas-->\r\n    <section class=\"compra-rifas\">\r\n        <!--<img src=\"assets/site/hero.jpg\" alt=\"\">-->\r\n        <!--title-->\r\n        <div class=\"compra-rifas-horizontal\">\r\n            <div class=\"compra-rifas-text-cota\">\r\n                <h1 class=\"medium-bold colorazul2 font-all-title\">COTAS</h1>\r\n                <h3 class=\"medium colorSubTitle\" style=\"font-size: 16px;margin: 10px 0 10px;\">Clique e selecione quantas cotas você quiser!\r\n                </h3>\r\n            </div>\r\n\r\n            <div class=\"compra-rifas-filtros-cota\">\r\n                <button (click)=\"changeColor(1)\" style=\"background-color: #fc7321;\"\r\n                    class=\"button-rifas-status btn\">Livre\r\n                    ({{cotasLivres.length}})</button>\r\n                <button (click)=\"changeColor(2)\" style=\"background-color: #b4b4b4;\"\r\n                    class=\"button-rifas-status btn\">Reservado ({{cotasReservadas.length}})</button>\r\n                <button (click)=\"changeColor(3)\" style=\"background-color: #1ad598;\" class=\"button-rifas-status btn\">Pago\r\n                    ({{cotasPagas.length}})</button>\r\n            </div>\r\n            <button class=\"button-rifas-status\" (click)=\"openMeusNumerosDialog()\"\r\n                style=\"color: #575570;background-color: #ffffff00;;cursor: pointer;border-style: solid;margin-bottom: 20px;font-size: 14px;\">\r\n                Ver meus números</button>\r\n        </div>\r\n\r\n        <div class=\"cards-cota\" *ngIf=\"!sorteio.rifinha\">\r\n            <label [class]=\"cota.cotaClass\" class=\"card-cota btn\" *ngFor=\"let cota of cotasFiltered\"\r\n                (click)=\"cota.status == 1 ? selectCota(cota) : showToolTip(cota.numeroCota,cota.clientePagador)\">\r\n                {{ (\"000\" + cota.numeroCota).slice(-3) | mask: '999' }}\r\n            </label>\r\n        </div>\r\n\r\n        <div class=\"cards-cota\" *ngIf=\"sorteio.rifinha\">\r\n            <label [class]=\"cota.cotaClass\" class=\"card-cota btn\" *ngFor=\"let cota of cotasFiltered\"\r\n                (click)=\"cota.status == 1 ? selectCota(cota) : showToolTip(cota.numeroCota,cota.clientePagador)\">\r\n                {{ (\"00\" + cota.numeroCota).slice(-2) | mask: '99' }}\r\n            </label>\r\n        </div>\r\n    </section>\r\n</div>\r\n\r\n<div id=\"popfinalizar\" class=\"raffle-selected-numbers bg-white py-3\"\r\n    style=\"bottom: 0px;left: 0px; display: none;background-color: white;height: 90px;position: fixed;color: white;z-index: 1000;width: 100%;\">\r\n    <div>\r\n        <div class=\"cards-cota-finalizar margin-cotas-finalizar\" *ngIf=\"!sorteio.rifinha\">\r\n            <label [class]=\"cardCota\" style=\"background-color: #576661;padding: 0.1em 0.5em 0.1em 0.5em;\"\r\n                class=\"card-cota btn\" *ngFor=\"let cota of cotasHaComprar\" (click)=\"unSelectCota(cota)\">\r\n                {{(\"000\" + cota.numeroCota).slice(-3) | mask: '999'}}\r\n            </label>\r\n        </div>\r\n\r\n        <div class=\"cards-cota-finalizar margin-cotas-finalizar\" *ngIf=\"sorteio.rifinha\">\r\n            <label [class]=\"cardCota\" style=\"background-color: #576661;padding: 0.1em 0.5em 0.1em 0.5em;\"\r\n                class=\"card-cota btn\" *ngFor=\"let cota of cotasHaComprar\" (click)=\"unSelectCota(cota)\">\r\n                {{(\"00\" + cota.numeroCota).slice(-2) | mask: '99'}}\r\n            </label>\r\n        </div>\r\n\r\n        <div style=\"margin-bottom: 10px;display: list-item;padding-top: 10px;\">\r\n            <label class=\"pop-finalizar-label-total\">\r\n                {{cotasHaComprar.length}} x R{{sorteio.valor | currency}} = R{{cotasHaComprar.length * sorteio.valor |\r\n                currency}}\r\n            </label>\r\n\r\n            <button id=\"bt_finalizar_reserva\" class=\"button-rifas-status button-pop-finalizar btn\"\r\n                (click)=\"confirmarReserva()\">\r\n                Finalizar\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, Optional, SecurityContext } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Meta, Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthenticationService } from 'app/services/login.service';\r\nimport { MetadataService } from 'app/services/metadata.service';\r\nimport { NotificationService } from 'app/services/toast.service';\r\nimport { LoginRegysterComponent } from '../../login/login-regyster/login-regyster.component';\r\nimport { CotasSorteio } from '../models/cotas-sorteio';\r\nimport { FullSorteio } from '../models/full-sorteio';\r\nimport { CotasSorteioService } from '../services/sorteio-ativo.service';\r\nimport { ConfirmarReservaComponent } from './confirmar-reserva/confirmar-reserva.component';\r\nimport { MeusNumerosComponent } from './meus-numeros/meus-numeros.component';\r\n\r\n@Component({\r\n  selector: 'app-sorteio-ativo',\r\n  templateUrl: './sorteio-ativo.component.html',\r\n  styleUrls: ['./sorteio-ativo.component.css']\r\n})\r\nexport class SorteioAtivoComponent implements OnInit {\r\n\r\n  cotasLivres: CotasSorteio[] = [];\r\n  cotasReservadas: CotasSorteio[] = [];\r\n  cotasPagas: CotasSorteio[] = [];\r\n  cotasFiltered: CotasSorteio[] = [];\r\n  cotasHaComprar: CotasSorteio[] = [];\r\n  contaHaPagar: string = 'teste';\r\n  sorteio: FullSorteio;\r\n  loading = false;\r\n\r\n  constructor(public dialog: MatDialog, private router: Router, private route: ActivatedRoute,\r\n    private sorteioAtivoService: CotasSorteioService, private loginService: AuthenticationService,\r\n    private alertService: NotificationService, @Optional() private metadataService: MetadataService, private titleService: Title) { }\r\n\r\n  ngOnInit(): void {\r\n    this.scrollTop();\r\n\r\n    let id = +this.route.snapshot.paramMap.get('id');\r\n\r\n    this.sorteioAtivoService.currentIdSorteioAtivo = +id;\r\n    this.sorteioAtivoService.getSorteioById(+id).subscribe(\r\n      sorteio => {\r\n        this.sorteio = sorteio;\r\n\r\n        this.sorteio.texto = atob(this.sorteio.texto);\r\n        // Build and change the og:image meta\r\n       const baseUrl = window.location.protocol + '//' + window.location.hostname;\r\n       const imageUrl = baseUrl + '/uploads/' + this.sorteio.imagem;\r\n\r\n       if (this.metadataService) {\r\n        this.metadataService.updateMetadata({\r\n          title:this.sorteio.titulo,\r\n          description: this.sorteio.descricao,\r\n          image: imageUrl\r\n        });\r\n      }\r\n       this.titleService.setTitle(this.sorteio.titulo);\r\n      });\r\n\r\n      this.loadCotasLivres();\r\n      this.loadCotasReservadas();\r\n      this.loadCotasPagas();\r\n  }\r\n\r\n  loadCotasLivres(){\r\n    this.sorteioAtivoService.listCotasSorteio(1).subscribe(\r\n      cotasResult => {\r\n        if (cotasResult) {\r\n          cotasResult.map(\r\n            cota => {\r\n              cota.cotaClass = 'card-cota-livre';\r\n            }\r\n          )\r\n          this.cotasLivres = cotasResult;\r\n          this.cotasFiltered = cotasResult;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  loadCotasReservadas(){\r\n    this.sorteioAtivoService.listCotasSorteio(2).subscribe(\r\n      cotasResult => {\r\n        if (cotasResult) {\r\n          this.cotasReservadas = cotasResult;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  loadCotasPagas(){\r\n    this.sorteioAtivoService.listCotasSorteio(3).subscribe(\r\n      cotasResult => {\r\n        if (cotasResult) {\r\n          this.cotasPagas = cotasResult;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  openLoginDialogLogin() {\r\n    const dialogRef = this.dialog.open(LoginRegysterComponent, {\r\n      data: {},\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.router.navigate(['sorteioAtivo/' + this.sorteio.titulo + '/' + this.sorteio.id]);\r\n    });\r\n  }\r\n\r\n  openMeusNumerosDialog() {\r\n    if (this.loginService.currentUserValue.isLogged) {\r\n      const dialogRef = this.dialog.open(MeusNumerosComponent, {\r\n        data: { idSorteio: this.sorteio.id },\r\n      });\r\n\r\n    } else {\r\n      this.openLoginDialogLogin();\r\n    }\r\n  }\r\n\r\n  confirmarReserva() {\r\n      let idCotas: number[] = [];\r\n      this.cotasHaComprar.forEach(element => {\r\n        idCotas.push(element.idCota);\r\n      });\r\n\r\n      const dialogRef = this.dialog.open(ConfirmarReservaComponent, {\r\n        data: { idCotas: idCotas, sorteio: this.sorteio, idCliente: this.loginService.currentUserValue.cliente ? this.loginService.currentUserValue.cliente.id : 0, cotas: this.cotasHaComprar },\r\n        width: '640px',\r\n        height: '550px',\r\n        panelClass: 'full-width-dialog'\r\n      });\r\n      this.loading = true;\r\n      //document.getElementById('bt_finalizar_reserva').style.display = 'none';\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if (result && result !== null) {\r\n          this.router.navigate(['checkout', { cp: result , st: this.sorteio.id}]);\r\n        } else {\r\n          this.loading = false;\r\n          //document.getElementById('bt_finalizar_reserva').style.display = 'initial';\r\n        }\r\n      });\r\n  }\r\n\r\n  changeColor(tipo: number) {\r\n    if (tipo === 1) {\r\n      this.cotasLivres.map(\r\n        cota => {\r\n          cota.cotaClass = 'card-cota-livre';\r\n        }\r\n      )\r\n      this.filterCotaByStatus(1);\r\n    }\r\n    if (tipo === 2) {\r\n      this.cotasReservadas.map(\r\n        cota => {\r\n          cota.cotaClass = 'card-cota-reservada';\r\n        }\r\n      )\r\n      this.filterCotaByStatus(2);\r\n    }\r\n    if (tipo === 3) {\r\n      this.cotasPagas.map(\r\n        cota => {\r\n          cota.cotaClass = 'card-cota-paga';\r\n        }\r\n      )\r\n      this.filterCotaByStatus(3);\r\n    }\r\n  }\r\n\r\n  filterCotaByStatus(status: number) {\r\n    if (status === 1) {\r\n      this.cotasFiltered = this.cotasLivres;\r\n    }\r\n\r\n    if (status === 2) {\r\n      this.cotasFiltered = this.cotasReservadas;\r\n    }\r\n\r\n    if (status === 3) {\r\n      this.cotasFiltered = this.cotasPagas;\r\n    }\r\n  }\r\n\r\n  selectCota(cotahACompras: CotasSorteio) {\r\n\r\n    if(!cotahACompras.selected){\r\n      if (this.cotasHaComprar.length === 0 && cotahACompras.status === 1) {\r\n        document.getElementById('popfinalizar').style.display = 'inline-table';\r\n        document.getElementById('popfinalizar').style.opacity = '1';\r\n        document.getElementById('faleConosco').style.display = 'none';\r\n      }\r\n  \r\n      const index = this.cotasHaComprar.indexOf(cotahACompras);\r\n      if (index === -1 && cotahACompras.status === 1) {\r\n        cotahACompras.cotaClass = '';\r\n        this.cotasHaComprar.push(cotahACompras);\r\n        this.atualizarTextoValorHaPagar();\r\n      }\r\n      cotahACompras.selected = true;\r\n    } else {\r\n      this.unSelectCota(cotahACompras);\r\n    }\r\n    \r\n  }\r\n\r\n  unSelectCota(cotahACompras: CotasSorteio) {\r\n    const index = this.cotasHaComprar.indexOf(cotahACompras);\r\n    if (index > -1) {\r\n      cotahACompras.cotaClass = 'card-cota-livre';\r\n      this.cotasHaComprar.splice(index, 1);\r\n    }\r\n\r\n    if (this.cotasHaComprar.length === 0) {\r\n      this.closeSelectedCota();\r\n    }\r\n\r\n    this.atualizarTextoValorHaPagar();\r\n    cotahACompras.selected = false;\r\n\r\n  }\r\n\r\n  closeSelectedCota() {\r\n    document.getElementById('popfinalizar').style.display = 'none';\r\n    document.getElementById('popfinalizar').style.opacity = '0';\r\n    document.getElementById('faleConosco').style.display = 'block';\r\n  }\r\n\r\n  atualizarTextoValorHaPagar() {\r\n    if (this.contaHaPagar.length > 0) {\r\n      this.contaHaPagar = this.cotasHaComprar.length + ' x' + this.sorteio.valor + ',00' + ' = ' + 'R$' + this.cotasHaComprar.length * this.sorteio.valor + ',00';\r\n    }\r\n  }\r\n\r\n  showToolTip(cota: string, pagador: string){\r\n    this.alertService.showInfo('Número ' + cota + ' reservado por ' + pagador,'')\r\n  }\r\n\r\n  scrollTop(){\r\n    let scrollToTop = window.setInterval(() => {\r\n        let pos = window.pageYOffset;\r\n        if (pos > 0) {\r\n            window.scrollTo(0, pos - 100); // how far to scroll on each step\r\n        } else {\r\n            window.clearInterval(scrollToTop);\r\n        }\r\n    }, 16);\r\n  }\r\n\r\n}\r\n","<div style=\"margin-top: 20px;\" class=\"mg-mobile\">\r\n    <!--Minhas Compras-->\r\n    <section class=\"sorteiosativos\" style=\"margin-top: 30px;background-color: transparent;display: inline;\">\r\n        <div class=\"title\">\r\n            <h2 class=\"medium-bold colorazul2\" style=\"font-size: 30px;\">Minhas Compras</h2>\r\n            <h5 class=\"medium colorSubTitle\">Confira suas compras feitas na Premiando.</h5>\r\n        </div>\r\n        <div class=\"two\" style=\"width: 100%; display: flex; justify-content: flex-end; align-items: center;\">\r\n            <a href=\"#/sorteios\" class=\"medium botao-branco\" style=\"color: #fc7322;background-color: transparent;\">Comprar sorteios ativos</a>\r\n        </div>\r\n    </section>\r\n\r\n    <div style=\"text-align: -webkit-center;\">\r\n        <div *ngIf=\"!listMinhasCompras\" class=\"loader\"></div>\r\n    </div>\r\n\r\n    <section class=\"sorteiosativos\" style=\"display: inline;\">\r\n        <div class=\"boxs-ativos\" style=\"grid-template-columns: 1fr !important;gap: 0.1% 0%;\">\r\n            <div *ngFor=\"let compra of listMinhasCompras\" class=\"box size-box\">\r\n                <div class=\"direction-card\">\r\n                    <div class=\"container-imagem justify-image\">\r\n                        <img *ngIf=\"compra.foto\" src=\"/uploads/{{compra.foto}}\" class=\"image-size-minhas-compras\">\r\n                        <div *ngIf=\"!compra.foto\" class=\"loader\"></div>\r\n                    </div>\r\n                    <div class=\"card font-xs\" style=\"width: 80%;\">\r\n                        <div class=\"bold\">\r\n                            <p><b>{{compra.tituloSorteio}}</b></p>\r\n                        </div>\r\n\r\n                        <div style=\"min-height: 50%;\">\r\n                            <div class=\"direction-info-minhas-compras\">\r\n                                \r\n                                <div style=\"margin-bottom: 20px;\">\r\n                                    <div>Resv. em</div>\r\n                                    <div>\r\n                                        <div class=\"text-checkout-dados\">{{compra.dataCompra | date: 'dd/MM/yyyy HH:mm'}}</div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div style=\"margin-bottom: 20px;\">\r\n                                    <div>Situação</div>\r\n                                    <div [ngClass]=\"getStatusColor(compra.status)\">{{compra.status == 'Não Iniciado' ? 'Pagamento Pendente'\r\n                                        : compra.status}}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <div>Minhas Cotas</div>\r\n                                    <div class=\"text-cotas-checkout\" *ngIf=\"!compra.rifinha\">\r\n                                        <div style=\"color: #595f6f;font-weight: bold;\" *ngFor=\"let cota of compra.cotas\">\r\n                                            {{(\"000\" + cota).slice(-3) | mask: '999'}},</div>\r\n                                    </div>\r\n                                    <div class=\"text-cotas-checkout\" *ngIf=\"compra.rifinha\">\r\n                                        <div style=\"color: #595f6f;font-weight: bold;\" *ngFor=\"let cota of compra.cotas\">\r\n                                            {{(\"00\" + cota).slice(-2) | mask: '99'}},</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"compra.status != 'Cancelado' && compra.status != 'Aprovado'\">\r\n                            <p (click)=\"detalhar(compra)\" style=\"color: #fc7321;font-weight: bold;cursor: pointer;\"> <b> Ver mais detalhes </b> </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthenticationService } from 'app/services/login.service';\r\nimport { MinhasCompras } from './models/minhas-compras';\r\nimport { MinhasComprasService } from './services/minhas-compras.service';\r\n\r\n@Component({\r\n  selector: 'app-view-minhas-compras',\r\n  templateUrl: './view-minhas-compras.component.html',\r\n  styleUrls: ['./view-minhas-compras.component.css']\r\n})\r\nexport class ViewMinhasComprasComponent implements OnInit {\r\n\r\n  constructor(private minhasComprasService: MinhasComprasService, private _sanitizer: DomSanitizer,\r\n    private loginService: AuthenticationService,private router: Router, private route: ActivatedRoute,) { }\r\n\r\n  listMinhasCompras: MinhasCompras[];\r\n\r\n  ngOnInit(): void {\r\n    this.scrollTop();\r\n    let currentUser = this.loginService.currentUserValue;\r\n    if(currentUser.isLogged){\r\n      this.minhasComprasService.minhasCompras.subscribe(\r\n        compras => this.listMinhasCompras = compras)\r\n    }\r\n  }\r\n\r\n  detalhar(compra: MinhasCompras){\r\n    this.router.navigate(['checkout', {compra: JSON.stringify(compra)}]);\r\n  }\r\n\r\n  getStatusColor(status: string){\r\n\r\n    if(status === 'Não Iniciado' || status === 'Pagamento Pendente'){\r\n      return \"text-checkout-status-pendente\"\r\n    }\r\n    if(status === 'Aprovado'){\r\n      return \"text-checkout-status-pago\"\r\n    }\r\n    if(status === 'Cancelado'){\r\n      return \"text-checkout-status-cancelado\"\r\n    }\r\n\r\n    return \"text-checkout-status\"\r\n  }\r\n\r\n  scrollTop(){\r\n    let scrollToTop = window.setInterval(() => {\r\n        let pos = window.pageYOffset;\r\n        if (pos > 0) {\r\n            window.scrollTo(0, pos - 100); // how far to scroll on each step\r\n        } else {\r\n            window.clearInterval(scrollToTop);\r\n        }\r\n    }, 16);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-termos',\r\n  templateUrl: './termos.component.html',\r\n  styleUrls: ['./termos.component.css']\r\n})\r\nexport class TermosComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n    <section >\r\n        <div class=\"title\">\r\n            <h2 class=\"medium-bold colorazul2\" style=\"font-size: 30px;\">Termos</h2>\r\n            <h5 class=\"medium colorazul2\">Confira os termos da premiando</h5>\r\n        </div>\r\n    </section>\r\n\r\n    <section class=\"sorteiosativos\" style=\"margin-top: 50px;\">\r\n        <div class=\"title\">\r\n            <h5 class=\"medium-bold colorazul2\">Da participação nos sorteios</h5>\r\n            <h5 class=\"medium colorazul2\">Toda e qualquer pessoa maior de 16 anos pode participar de ações disponíveis.</h5>\r\n\r\n            <h5 class=\"medium-bold colorazul2\">Pagamento do bilhete</h5>\r\n            <h5 class=\"medium colorazul2\">O Pagamento devera ser efetuado através de Transferência Bancaria, deposito ou Boleto</h5>\r\n\r\n            <h5 class=\"medium-bold colorazul2\">Entrega do premio</h5>\r\n            <h5 class=\"medium colorazul2\">Para os ganhadores de outras cidades a PREMIANDO garante o pagamento das despesas do ganhador para vir retirar o prêmio, ou a entrega em sua cidade de acordo com o regulamentos de cada sorteio. Em nenhum dos casos não haverá nenhum ônus para o ganhador. </h5>\r\n            \r\n            <h5 class=\"medium-bold colorazul2\">Adiantamento do sorteio</h5>\r\n            <h5 class=\"medium colorazul2\">Caso a Rifa não tenha mais de 95% dos bilhetes pagos, o sorteio será adiado até que o mesmo seja completamente vendido.\r\n            </h5>\r\n\r\n            <h5 class=\"medium-bold colorazul2\">Da definição dos ganhador</h5>\r\n            <h5 class=\"medium colorazul2\">O ganhador do sorteio será sempre o participante que tiver seu nome e celular \r\n                gravados no bilhete premiado. No caso de pagamento em duplicidade, ou seja, em casos raros onde duas \r\n                pessoas clicam no mesmo bilhete simultaneamente o ganhador do sorteio será o participante que tiver \r\n                o nome e celular gravados no bilhete no momento do sorteio. O participante que, no caso de compra \r\n                em duplicidade não tiver o nome gravado no bilhete deverá solicitar reembolso do valor pago pelo bilhete em questão.\r\n            </h5>\r\n\r\n            <h5 class=\"medium-bold colorazul2\">Das proibições</h5>\r\n            <h5 class=\"medium colorazul2\">É completamente vedado a participação do organizador em sua própria ação.</h5>\r\n            <h5 class=\"medium colorazul2\">O site pode alterar a qualquer momento estes termos visando melhorar a qualidade do serviço oferecido.</h5>\r\n            <h5 class=\"medium colorazul2\">O site informará a todos os usuários sempre que ocorrer uma alteração nos termos de uso e o usuário deverá aceitar as mudanças para continuar utilizando o site.</h5>\r\n        </div>\r\n    </section>\r\n</div>","\r\nexport class MinhasCompras {\r\n    cotas: number[];\r\n    dataCompra: string;\r\n    foto: string;\r\n    status: string;\r\n    tituloSorteio: string;\r\n    total: string;\r\n    dataSorteio: string;\r\n    rifinha: boolean;\r\n    idCompra: string;\r\n}","import { PayerIdentification } from \"./payer-indentification\";\r\n\r\nexport class Payer {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    identification: PayerIdentification\r\n}","export class PayerIdentification {\r\n    type: string;\r\n    number: string;\r\n}","import { Payer } from \"./payer\";\r\n\r\nexport class RegysterPixPayment {\r\n    transactionAmount: string;\r\n    description: string;\r\n    idCompra: string;\r\n    payer: Payer\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { RegysterPixPayment } from '../models/regyster-pix-payment';\r\nimport { PixPaymentResponse } from '../models/regyster-pix-payment-response';\r\nimport { environment } from 'environments/environment';\r\n\r\n\r\nconst baseUrl: string = environment.baseUrlPix;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PixService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  regysterPayment(payment: RegysterPixPayment): Observable<PixPaymentResponse> {\r\n    let url = `${baseUrl}/process_payment`;\r\n    return this.http.post<PixPaymentResponse>(url, payment);\r\n  }\r\n}\r\n","<div  class=\"mg-mobile\" style=\"margin-top: 20px;background-color: white;border-radius: 10px;padding: 2%;\">\r\n    <div class=\"fonte-titulo\">Você está quase lá!</div>\r\n<div style=\"font-size: small;color: #000000\">Siga os passos e boa sorte.</div>\r\n<br>\r\n\r\n<div class=\"div-checkout\">\r\n    <div class=\"fonte-titulo view-title-mobile\">{{minhaCompra.tituloSorteio}}</div>\r\n    <br>\r\n    <div class=\"info-checkout-img\">\r\n        <img *ngIf=\"minhaCompra.foto\" src=\"/uploads/{{minhaCompra.foto}}\" style=\"width: 100%;object-fit: cover;border-radius: 10px;\">\r\n        <div *ngIf=\"!minhaCompra.foto\" class=\"loader\"></div>\r\n    </div>\r\n    <div class=\"info-checkout\">\r\n        <div class=\"fonte-titulo view-title\">{{minhaCompra.tituloSorteio}}</div>\r\n        \r\n        <div class=\"disp-text-checkout text-checkout-dados\">\r\n            <div class=\"text-checkout-dados\"><b>Data:</b></div>\r\n            <div class=\"text-checkout-dados\">{{minhaCompra.dataCompra | date: 'dd/MM/yyyy HH:mm'}}</div>\r\n            <div class=\"text-checkout-dados\"><b>Total:</b></div>\r\n            <div class=\"text-checkout-dados\">R{{(minhaCompra.total) | currency}}</div>\r\n            <div class=\"text-checkout-dados\"><b>Status:</b></div>\r\n            <div class=\"text-checkout-status text-checkout-dados\" [ngClass]=\"getStatusColor(minhaCompra.status)\">{{minhaCompra.status == 'Não Iniciado' ? 'Aguardando Pagamento' :\r\n                minhaCompra.status}}</div>\r\n            <div><b>Cotas:</b></div>\r\n            <div class=\"text-cotas-checkout text-checkout-dados\" *ngIf=\"!minhaCompra.rifinha\">\r\n                <div style=\"color: #000;\" *ngFor=\"let cota of minhaCompra.cotas\">\r\n                    {{(\"000\" + cota).slice(-3) | mask: '999'}},\r\n                </div>\r\n            </div>\r\n            <div class=\"text-cotas-checkout text-checkout-dados\" *ngIf=\"minhaCompra.rifinha\">\r\n                <div style=\"color: #000;\" *ngFor=\"let cota of minhaCompra.cotas\">\r\n                    {{(\"00\" + cota).slice(-2) | mask: '99'}},\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<br>\r\n\r\n<div class=\"text-checkout-dados\" style=\"background-color: #fb66660d;;border-radius: 12px;text-align: justify;margin-top: 18px;margin-bottom: 18px;\">\r\n    <div style=\"color: #ff5757;font-weight: 500;padding: 1%;\">O envio do comprovante de pagamento é <b>OBRIGATÓRIO</b>.</div>\r\n    <div style=\"color: #ff5757;font-weight: 500;padding: 1%;\">O prazo para pagamento é de <b>4\r\n            HORAS.</b> Após esse prazo, não\r\n        havendo nenhum informe de pagamento, o pedido será cancelado.</div>\r\n</div>\r\n<br>\r\n\r\n<div style=\"font-weight: bold;font-size: large;color: #000\">Opções de Pagamento</div>\r\n<div style=\"font-size: small;color: #000\">Efetue o pagamento e envie o comprovante para nosso time no WhatsApp</div>\r\n\r\n<section class=\"sorteiosativos\" style=\"display: inline;\">\r\n    <div class=\"boxs-ativos\">\r\n        <div class=\"box div-fit-content\">\r\n            <div style=\"width: 100%;margin: 0px;\">\r\n                <div class=\"container-imagem\">\r\n                     <img *ngIf=\"!qrCodeBase64\" src=\"assets/site/logo-pix.png\" width=\"230px\" height=\"60px\">\r\n                     <img *ngIf=\"qrCodeBase64\" src=\"data:image/jpeg;base64,{{qrCodeBase64}}\" width=\"200px\" height=\"200px\">\r\n                    \r\n                    <div *ngIf=\"qrCode\" style=\"margin-top: 10px;text-align: center;display: contents;text-align: center;\">\r\n                        <input  type=\"text\" id=\"copiar\"  value={{qrCode}} #hashInput  class=\"bt-copiar-hash\" style=\"background-color: #5a5a5a;\"/>\r\n                        <button for=\"copiar\"  class=\"bt-copiar-hash\"\r\n                                (click)=\"copyTextHash(hashInput)\">\r\n                            Copiar\r\n                        </button>\r\n                        <label id=\"copied\" style=\"display: none;margin-top: 10px;color: limegreen;\">Copiado com sucesso!</label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card font-xs\" id=\"gerarQrCodeCard\">\r\n                    <div class=\"card-body font-xs\" id=\"gerarQrCode\">\r\n                        <p class=\"card-text mb-0 \">\r\n                            Titular<br> <b>RJ PAY SERVICOS LTDA</b>\r\n                        </p>\r\n                        <p class=\"card-text mb-0 \">\r\n                            Documento:<br> <b>44.055.269/0001-40</b>\r\n                        </p>\r\n                        <a class=\"btn btn-sm btn-primary mt-4 m bt-efetuar-pagamento bt-gerar-pix\" (click)=\"gerarQrCode()\" >\r\n                            Gerar Pix</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div [class]=\"!sorteio.ocultarConta ? (sorteio.tipoConta === 'Gateway de Pagamento' ? 'div-fit-content' : 'disabledclass') : ' disabledclass'\" \r\n             *ngFor=\"let sorteio of contaBancariaList\" class=\"box\">\r\n            <div *ngIf=\"!sorteio.ocultarConta\" style=\"width: 100%;margin: 0px;\">\r\n                <div class=\"container-imagem\">\r\n                    <img *ngIf=\"sorteio.imagem\" src=\"{{sorteio.imagem}}\" width=\"230px\" height=\"60px\">\r\n                    <div *ngIf=\"!sorteio.imagem\" class=\"loader\"></div>\r\n                </div>\r\n                <div class=\"card font-xs\" *ngIf=\"sorteio.tipoConta === 'Gateway de Pagamento'\">\r\n                    <div class=\"card-body font-xs\" >\r\n                        <p class=\"card-text mb-0 \">\r\n                            Titular<br> <b>{{sorteio.titular}}</b>\r\n                        </p>\r\n                        <p class=\"card-text mb-0 \">\r\n                            CNPJ<br> <b>{{sorteio.cpfOrCnpj}}</b>\r\n                        </p>\r\n                        <a href=\"{{sorteio.linkPagamento}}\"\r\n                            target=\"_blank\" class=\"btn btn-sm btn-primary mt-4 m bt-efetuar-pagamento\">\r\n                            Efetuar Pagamento</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"container-infos\">\r\n                    <h3 class=\"bold colorazul2\">{{sorteio.titulo}}</h3>\r\n                    <h5 class=\"medium colorazul2\">\r\n                        {{sorteio.descricao}}\r\n                    </h5>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div [class]=\"!sorteio.ocultarConta ? (sorteio.tipoConta === 'Conta Bancária' ? '' : 'disabledclass') : ' disabledclass'\" \r\n             *ngFor=\"let sorteio of contaBancariaList\" class=\"box\">\r\n            <div *ngIf=\"!sorteio.ocultarConta\" style=\"width: 100%;margin: 0px;\">\r\n                <div class=\"container-imagem\">\r\n                    <img *ngIf=\"sorteio.imagem\" src=\"{{sorteio.imagem}}\"  width=\"230px\" height=\"60px\">\r\n                    <div *ngIf=\"!sorteio.imagem\" class=\"loader\"></div>\r\n                </div>\r\n                <div class=\"card font-xs\" *ngIf=\"sorteio.tipoConta === 'Conta Bancária'\">\r\n                    <div class=\"card-body font-xs\" >\r\n                        <p class=\"card-text mb-0 \">\r\n                            Titular<br> <b>{{sorteio.titular}}</b>\r\n                        </p>\r\n                        <p class=\"card-text mb-0 \">\r\n                            Agência<br> <b>{{sorteio.agencia}} - {{sorteio.digitoAgencia}}</b>\r\n                        </p>\r\n                        <p class=\"card-text mb-0 \">\r\n                            Conta<br> <b>{{sorteio.numeroConta}} - {{sorteio.digitoConta}}</b>\r\n                        </p>\r\n                        <p class=\"card-text mb-0 \">\r\n                            Tipo de Conta<br> <b>Conta corrente</b>\r\n                        </p>\r\n                        <p class=\"card-text mb-0 \">\r\n                            CNPJ<br> <b>{{sorteio.cpfOrCnpj}}</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"container-infos\">\r\n                    <h3 class=\"bold colorazul2\">{{sorteio.titulo}}</h3>\r\n                    <h5 class=\"medium colorazul2\">\r\n                        {{sorteio.descricao}}\r\n                    </h5>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</section>\r\n<br><br><br>\r\n\r\n<div>\r\n    <a href=\"http://web.whatsapp.com/send?phone=5584994175896\" target=\"_blank\"\r\n        style=\"text-decoration: none;background-color: #00c259;color: white;border-radius: 45px;padding: 1.4%;display: block;text-align: center;cursor: pointer;width: fit-content;margin: auto;\">\r\n        Enviar o comprovante de pagamento para o nosso WhatsApp\r\n    </a>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ContaBancaria } from 'app/models/conta-bancaria';\r\nimport { ContaBancariaService } from 'app/services/conta-bancaria.service';\r\nimport { AuthenticationService } from 'app/services/login.service';\r\nimport { MinhasCompras } from '../minhas-compras/view-minhas-compras/models/minhas-compras';\r\nimport { MinhasComprasService } from '../minhas-compras/view-minhas-compras/services/minhas-compras.service';\r\nimport { Payer } from './models/payer';\r\nimport { PayerIdentification } from './models/payer-indentification';\r\nimport { RegysterPixPayment } from './models/regyster-pix-payment';\r\nimport { PixService } from './services/pix.service';\r\n\r\n@Component({\r\n  selector: 'app-checkout',\r\n  templateUrl: './checkout.component.html',\r\n  styleUrls: ['./checkout.component.css']\r\n})\r\nexport class CheckoutComponent implements OnInit {\r\n\r\n  listSorteios = ['','','',''];\r\n  contaBancariaList: ContaBancaria[];\r\n  minhaCompra = new MinhasCompras();\r\n\r\n  qrCode: string;\r\n  qrCodeBase64: string;\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute,private contaBancariaService: ContaBancariaService,\r\n    private minhasComprasService: MinhasComprasService, private authenticatioService: AuthenticationService, private pixService: PixService) { }\r\n\r\n  async ngOnInit() {\r\n    let compra = this.route.snapshot.paramMap.get('compra');\r\n    if(compra){\r\n      this.minhaCompra = JSON.parse(compra);\r\n    }else {\r\n      let idCompra = this.route.snapshot.paramMap.get('cp');\r\n      await this.minhasComprasService.listMinhaCompra(+idCompra).subscribe(\r\n        async result => {\r\n          this.minhaCompra = result;\r\n        }\r\n      )\r\n    }\r\n    this.scrollTop();\r\n    this.loadContaBancaria();\r\n  }\r\n\r\n  gerarQrCode(){\r\n    let currentUser = this.authenticatioService.currentUserValue;\r\n\r\n    let idCompra = this.route.snapshot.paramMap.get('cp');\r\n\r\n    if(!idCompra){\r\n      idCompra = this.minhaCompra.idCompra;\r\n    }\r\n    \r\n    let payment: RegysterPixPayment = new RegysterPixPayment();\r\n    payment.transactionAmount = this.minhaCompra.total;\r\n    payment.idCompra = idCompra;\r\n    payment.description = \"premiando.com\";\r\n    \r\n    let payer: Payer = new Payer();\r\n    payer.firstName = currentUser.cliente.nome;\r\n    payer.lastName = \"\";\r\n    payer.email = currentUser.cliente.usuario.email;\r\n    payer.identification = new PayerIdentification();\r\n\r\n    let payerIndentification = new PayerIdentification();\r\n    payerIndentification.number = \"number\";\r\n    payerIndentification.type = \"type\";\r\n\r\n    payer.identification = payerIndentification;\r\n\r\n    payment.payer = new Payer();\r\n    payment.payer = payer;\r\n\r\n    this.pixService.regysterPayment(payment).subscribe(\r\n      result => {\r\n        this.qrCode = result.qrCode;\r\n        this.qrCodeBase64 = result.qrCodeBase64;\r\n        document.getElementById('gerarQrCode').style.display = 'none'\r\n        //document.getElementById('gerarQrCodeCard').style.height = '210px'\r\n      }\r\n    );\r\n  }\r\n\r\n  copyTextHash(inputElement){\r\n    inputElement.select();\r\n    document.execCommand('copy');\r\n    inputElement.setSelectionRange(0, 0);\r\n\r\n    document.getElementById('copied').style.display = 'block'\r\n  }\r\n\r\n  private loadContaBancaria() {\r\n    this.contaBancariaService.list()\r\n      .subscribe(\r\n        (contaBancaria) => {\r\n          this.contaBancariaList = contaBancaria['content'];\r\n        }\r\n      );\r\n  }\r\n\r\n  getStatusColor(status: string){\r\n\r\n    if(status === 'Não Iniciado' || status === 'Pagamento Pendente'){\r\n      return \"text-checkout-status-pendente\"\r\n    }\r\n    if(status === 'Aprovado'){\r\n      return \"text-checkout-status-pago\"\r\n    }\r\n    if(status === 'Cancelado'){\r\n      return \"text-checkout-status-cancelado\"\r\n    }\r\n\r\n    return \"text-checkout-status\"\r\n  }\r\n\r\n  scrollTop(){\r\n    let scrollToTop = window.setInterval(() => {\r\n        let pos = window.pageYOffset;\r\n        if (pos > 0) {\r\n            window.scrollTo(0, pos - 100); // how far to scroll on each step\r\n        } else {\r\n            window.clearInterval(scrollToTop);\r\n        }\r\n    }, 16);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, } from '@angular/common';\r\nimport { BrowserModule  } from '@angular/platform-browser';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AdminLayoutComponent } from './layouts/admin-layout/admin-layout.component';\r\nimport { LoginAdminComponent } from './login-admin/login-admin.component';\r\nimport { AuthGuardService } from './guards/auth-guard.service';\r\nimport { IndexComponent } from './site-premiando/index/index.component';\r\nimport { PrincipalComponent } from './site-premiando/principal/principal.component';\r\nimport { GanhadoresComponent } from './site-premiando/ganhadores/ganhadores.component';\r\nimport { SorteiosComponent } from './site-premiando/sorteios/sorteios.component';\r\nimport { SorteioAtivoComponent } from './site-premiando/sorteios/sorteio-ativo/sorteio-ativo.component';\r\nimport { ViewMinhasComprasComponent } from './site-premiando/minhas-compras/view-minhas-compras/view-minhas-compras.component';\r\nimport { TermosComponent } from './site-premiando/termos/termos.component';\r\nimport { CheckoutComponent } from './site-premiando/checkout/checkout.component';\r\n\r\nconst routes: Routes =[\r\n  { path: '',redirectTo: 'principal',pathMatch: 'full' }, \r\n  { path: 'login-admin', component: LoginAdminComponent },\r\n  {\r\n    path: '',\r\n    component: IndexComponent,\r\n    children: [\r\n      { path: 'principal',component: PrincipalComponent },\r\n      { path: 'ganhadores', component: GanhadoresComponent },\r\n      { path: 'sorteios', component: SorteiosComponent },\r\n      { path: 'sorteioAtivo/:sorteio/:id', component: SorteioAtivoComponent },\r\n      { path: 'minhas-compras', component: ViewMinhasComprasComponent },\r\n      { path: 'termos', component: TermosComponent },\r\n      { path: 'checkout', component: CheckoutComponent },\r\n    ],\r\n  },\r\n  {\r\n    path: '',\r\n    component: AdminLayoutComponent,\r\n    canActivate: [AuthGuardService],\r\n    children: [{\r\n      path: 'admin',\r\n      loadChildren: () => import('./layouts/admin-layout/admin-layout.module').then(m => m.AdminLayoutModule)\r\n    }]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    RouterModule.forRoot(routes,{\r\n       useHash: true\r\n    })\r\n  ],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuardService]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    ToastrModule.forRoot(),\r\n  ],\r\n  declarations: [\r\n    FooterComponent,\r\n    NavbarComponent,\r\n    SidebarComponent\r\n  ],\r\n  exports: [\r\n    FooterComponent,\r\n    NavbarComponent,\r\n    SidebarComponent\r\n  ]\r\n})\r\nexport class ComponentsModule { }\r\n","import { Component} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","\r\n<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport { ComprasComponent } from './compras.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport { CurrencyMaskModule } from \"ng2-currency-mask\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatPaginatorModule,\r\n    ReactiveFormsModule,\r\n    CurrencyMaskModule,\r\n    NgxMaskModule.forRoot()\r\n  ],\r\n  declarations: [],\r\n  providers: [],\r\n  bootstrap: [ComprasComponent]\r\n})\r\nexport class ComprasModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport { CurrencyMaskModule } from \"ng2-currency-mask\";\r\nimport { GanhadoresComponent } from './ganhadores.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatPaginatorModule,\r\n    ReactiveFormsModule,\r\n    CurrencyMaskModule,\r\n    NgxMaskModule.forRoot()\r\n  ],\r\n  declarations: [],\r\n  providers: [],\r\n  bootstrap: [GanhadoresComponent]\r\n})\r\nexport class GanhadoresModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport { CurrencyMaskModule } from \"ng2-currency-mask\";\r\nimport { BannerComponent } from './banner.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    FormsModule,\r\n    MatPaginatorModule,\r\n    ReactiveFormsModule,\r\n    CurrencyMaskModule,\r\n    NgxMaskModule.forRoot()\r\n  ],\r\n  declarations: [],\r\n  providers: [],\r\n  bootstrap: [BannerComponent]\r\n})\r\nexport class BannerModule { }\r\n","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\nimport { AppRoutingModule } from './app.routing';\r\nimport { ComponentsModule } from './components/components.module';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport {\r\n  AgmCoreModule\r\n} from '@agm/core';\r\nimport { AdminLayoutComponent } from './layouts/admin-layout/admin-layout.component';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { AuthGuardService } from './guards/auth-guard.service';\r\nimport { JwtInterceptor } from './guards/jwt-interceptor';\r\nimport { HttpErrorInterceptor } from './guards/http-error-interceptor';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { CommonModule, HashLocationStrategy, LocationStrategy } from '@angular/common';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport { ComprasModule } from './compras/compras.module';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { OrderModule } from 'ngx-order-pipe';\r\nimport { CurrencyMaskModule } from 'ng2-currency-mask';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { AngularEditorModule } from '@kolkov/angular-editor';\r\nimport { GanhadoresModule } from './ganhadores/ganhadores.module';\r\nimport { BannerModule } from './banner/banner.module';\r\nimport { MsgWhattsComponent } from './msg-whatts/msg-whatts.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    AngularEditorModule, \r\n    CurrencyMaskModule,\r\n    HttpClientModule,\r\n    ComponentsModule,\r\n    ComprasModule,\r\n    GanhadoresModule,\r\n    BannerModule,\r\n    MatPaginatorModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    NgxPaginationModule,\r\n    OrderModule,\r\n    MatNativeDateModule,\r\n    RouterModule,\r\n    CommonModule,\r\n    AppRoutingModule,\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'YOUR_GOOGLE_MAPS_API_KEY'\r\n    }),\r\n    ToastrModule.forRoot(),\r\n    NgxMaskModule.forRoot(),\r\n  ],\r\n  declarations: [\t\t\r\n    AppComponent,\r\n    AdminLayoutComponent,\r\n      MsgWhattsComponent,\r\n   ],\r\n  providers: [\r\n    {provide: LocationStrategy, useClass: HashLocationStrategy},\r\n    { provide: MAT_DATE_LOCALE, useValue: 'pt-br' },\r\n    { provide: AuthGuardService },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","/*!\r\n\r\n=========================================================\r\n* Material Dashboard Angular - v2.6.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/material-dashboard-angular2\r\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/material-dashboard-angular2/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":"webpack:///"}